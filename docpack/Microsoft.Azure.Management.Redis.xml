<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.Management.Redis</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.Management.Redis.IPatchSchedulesOperations">
            <summary>
            PatchSchedulesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.IPatchSchedulesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or replace the patching schedule for redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters to set patch schedules for redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.IPatchSchedulesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the patching schedule for redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.IPatchSchedulesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the patching schedule for redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.IRedisManagementClient">
            <summary>
            REST API for Azure Redis Cache Service
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.IRedisManagementClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.IRedisManagementClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.IRedisManagementClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.IRedisManagementClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.IRedisManagementClient.SubscriptionId">
            <summary>
            Gets subscription credentials which uniquely identify Microsoft
            Azure subscription. The subscription ID forms part of the URI for
            every service call.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.IRedisManagementClient.ApiVersion">
            <summary>
            Client Api Version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.IRedisManagementClient.AcceptLanguage">
            <summary>
            Gets or sets the preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.IRedisManagementClient.LongRunningOperationRetryTimeout">
            <summary>
            Gets or sets the retry timeout in seconds for Long Running
            Operations. Default value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.IRedisManagementClient.GenerateClientRequestId">
            <summary>
            When set to true a unique x-ms-client-request-id value is
            generated and included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.IRedisManagementClient.Redis">
            <summary>
            Gets the IRedisOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.IRedisManagementClient.PatchSchedules">
            <summary>
            Gets the IPatchSchedulesOperations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.IRedisOperations">
            <summary>
            RedisOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.IRedisOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or replace (overwrite/recreate, with potential downtime) an
            existing redis cache
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create redis operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.IRedisOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or replace (overwrite/recreate, with potential downtime) an
            existing redis cache
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create redis operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.IRedisOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Update an existing Redis cache
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Update redis operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.IRedisOperations.BeginUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Update an existing Redis cache
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Update redis operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.IRedisOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a redis cache. This operation takes a while to complete.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.IRedisOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a redis cache. This operation takes a while to complete.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.IRedisOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a redis cache (resource description).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.IRedisOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all redis caches in a resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.IRedisOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all redis caches in the specified subscription.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.IRedisOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve a redis cache's access keys. This operation requires
            write permission to the cache resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.IRedisOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Regenerate redis cache's access keys. This operation requires
            write permission to the cache resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Specifies which key to reset.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.IRedisOperations.ForceRebootWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Reboot specified redis node(s). This operation requires write
            permission to the cache resource. There can be potential data
            loss.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Specifies which redis node(s) to reboot.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.IRedisOperations.ImportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Import data into redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters for redis import operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.IRedisOperations.BeginImportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Import data into redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters for redis import operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.IRedisOperations.ExportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Import data into redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters for redis export operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.IRedisOperations.BeginExportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Import data into redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters for redis export operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.IRedisOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all redis caches in a resource group.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.IRedisOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all redis caches in the specified subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.PatchSchedulesOperations">
            <summary>
            PatchSchedulesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.PatchSchedulesOperations.#ctor(Microsoft.Azure.Management.Redis.RedisManagementClient)">
            <summary>
            Initializes a new instance of the PatchSchedulesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.PatchSchedulesOperations.Client">
            <summary>
            Gets a reference to the RedisManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.PatchSchedulesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or replace the patching schedule for redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters to set patch schedules for redis cache.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.PatchSchedulesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the patching schedule for redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.PatchSchedulesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the patching schedule for redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions">
            <summary>
            Extension methods for PatchSchedulesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule)">
            <summary>
            Create or replace the patching schedule for redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters to set patch schedules for redis cache.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule,System.Threading.CancellationToken)">
            <summary>
            Create or replace the patching schedule for redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters to set patch schedules for redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.Delete(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String)">
            <summary>
            Deletes the patching schedule for redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the patching schedule for redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.Get(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String)">
            <summary>
            Gets the patching schedule for redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the patching schedule for redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.RedisManagementClient">
            <summary>
            REST API for Azure Redis Cache Service
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.RedisManagementClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.RedisManagementClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.RedisManagementClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.RedisManagementClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.RedisManagementClient.SubscriptionId">
            <summary>
            Gets subscription credentials which uniquely identify Microsoft Azure
            subscription. The subscription ID forms part of the URI for every service
            call.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.RedisManagementClient.ApiVersion">
            <summary>
            Client Api Version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.RedisManagementClient.AcceptLanguage">
            <summary>
            Gets or sets the preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.RedisManagementClient.LongRunningOperationRetryTimeout">
            <summary>
            Gets or sets the retry timeout in seconds for Long Running Operations.
            Default value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.RedisManagementClient.GenerateClientRequestId">
            <summary>
            When set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.RedisManagementClient.Redis">
            <summary>
            Gets the IRedisOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.RedisManagementClient.PatchSchedules">
            <summary>
            Gets the IPatchSchedulesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the RedisManagementClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the RedisManagementClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the RedisManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the RedisManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the RedisManagementClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the RedisManagementClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the RedisManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the RedisManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisManagementClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.RedisOperations">
            <summary>
            RedisOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperations.#ctor(Microsoft.Azure.Management.Redis.RedisManagementClient)">
            <summary>
            Initializes a new instance of the RedisOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.RedisOperations.Client">
            <summary>
            Gets a reference to the RedisManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or replace (overwrite/recreate, with potential downtime) an
            existing redis cache
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create redis operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or replace (overwrite/recreate, with potential downtime) an
            existing redis cache
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create redis operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Update an existing Redis cache
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Update redis operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperations.BeginUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Update an existing Redis cache
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Update redis operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a redis cache. This operation takes a while to complete.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a redis cache. This operation takes a while to complete.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a redis cache (resource description).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all redis caches in a resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all redis caches in the specified subscription.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve a redis cache's access keys. This operation requires write
            permission to the cache resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Regenerate redis cache's access keys. This operation requires write
            permission to the cache resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Specifies which key to reset.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperations.ForceRebootWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Reboot specified redis node(s). This operation requires write permission
            to the cache resource. There can be potential data loss.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Specifies which redis node(s) to reboot.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperations.ImportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Import data into redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters for redis import operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperations.BeginImportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Import data into redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters for redis import operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperations.ExportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Import data into redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters for redis export operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperations.BeginExportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Import data into redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters for redis export operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all redis caches in a resource group.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all redis caches in the specified subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.RedisOperationsExtensions">
            <summary>
            Extension methods for RedisOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Create(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters)">
            <summary>
            Create or replace (overwrite/recreate, with potential downtime) an
            existing redis cache
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create redis operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters,System.Threading.CancellationToken)">
            <summary>
            Create or replace (overwrite/recreate, with potential downtime) an
            existing redis cache
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create redis operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginCreate(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters)">
            <summary>
            Create or replace (overwrite/recreate, with potential downtime) an
            existing redis cache
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create redis operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters,System.Threading.CancellationToken)">
            <summary>
            Create or replace (overwrite/recreate, with potential downtime) an
            existing redis cache
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create redis operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Update(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters)">
            <summary>
            Update an existing Redis cache
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Update redis operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters,System.Threading.CancellationToken)">
            <summary>
            Update an existing Redis cache
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Update redis operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginUpdate(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters)">
            <summary>
            Update an existing Redis cache
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Update redis operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginUpdateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters,System.Threading.CancellationToken)">
            <summary>
            Update an existing Redis cache
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Update redis operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Delete(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)">
            <summary>
            Deletes a redis cache. This operation takes a while to complete.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a redis cache. This operation takes a while to complete.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginDelete(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)">
            <summary>
            Deletes a redis cache. This operation takes a while to complete.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a redis cache. This operation takes a while to complete.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Get(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)">
            <summary>
            Gets a redis cache (resource description).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.GetAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a redis cache (resource description).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)">
            <summary>
            Gets all redis caches in a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all redis caches in a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.List(Microsoft.Azure.Management.Redis.IRedisOperations)">
            <summary>
            Gets all redis caches in the specified subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.Threading.CancellationToken)">
            <summary>
            Gets all redis caches in the specified subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeys(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)">
            <summary>
            Retrieve a redis cache's access keys. This operation requires write
            permission to the cache resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a redis cache's access keys. This operation requires write
            permission to the cache resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters)">
            <summary>
            Regenerate redis cache's access keys. This operation requires write
            permission to the cache resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Specifies which key to reset.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters,System.Threading.CancellationToken)">
            <summary>
            Regenerate redis cache's access keys. This operation requires write
            permission to the cache resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Specifies which key to reset.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceReboot(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters)">
            <summary>
            Reboot specified redis node(s). This operation requires write permission
            to the cache resource. There can be potential data loss.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Specifies which redis node(s) to reboot.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceRebootAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters,System.Threading.CancellationToken)">
            <summary>
            Reboot specified redis node(s). This operation requires write permission
            to the cache resource. There can be potential data loss.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Specifies which redis node(s) to reboot.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportData(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters)">
            <summary>
            Import data into redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters for redis import operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Threading.CancellationToken)">
            <summary>
            Import data into redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters for redis import operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportData(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters)">
            <summary>
            Import data into redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters for redis import operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Threading.CancellationToken)">
            <summary>
            Import data into redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters for redis import operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportData(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters)">
            <summary>
            Import data into redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters for redis export operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Threading.CancellationToken)">
            <summary>
            Import data into redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters for redis export operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportData(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters)">
            <summary>
            Import data into redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters for redis export operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Threading.CancellationToken)">
            <summary>
            Import data into redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='parameters'>
            Parameters for redis export operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNext(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)">
            <summary>
            Gets all redis caches in a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all redis caches in a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNext(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)">
            <summary>
            Gets all redis caches in the specified subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all redis caches in the specified subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Models.DayOfWeek">
            <summary>
            Defines values for DayOfWeek.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Models.ExportRDBParameters">
            <summary>
            Parameters for redis export operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.ExportRDBParameters.#ctor">
            <summary>
            Initializes a new instance of the ExportRDBParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.ExportRDBParameters.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ExportRDBParameters class.
            </summary>
            <param name="prefix">Prefix to use for exported files.</param>
            <param name="container">Container name to export to.</param>
            <param name="format">File format.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.ExportRDBParameters.Format">
            <summary>
            Gets or sets file format.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.ExportRDBParameters.Prefix">
            <summary>
            Gets or sets prefix to use for exported files.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.ExportRDBParameters.Container">
            <summary>
            Gets or sets container name to export to.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.ExportRDBParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Models.ImportRDBParameters">
            <summary>
            Parameters for redis import operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.ImportRDBParameters.#ctor">
            <summary>
            Initializes a new instance of the ImportRDBParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.ImportRDBParameters.#ctor(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Initializes a new instance of the ImportRDBParameters class.
            </summary>
            <param name="files">files to import</param>
            <param name="format">File format.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.ImportRDBParameters.Format">
            <summary>
            Gets or sets file format.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.ImportRDBParameters.Files">
            <summary>
            Gets or sets files to import
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.ImportRDBParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Models.Page`1">
            <summary>
            Defines a page in Azure responses.
            </summary>
            <typeparam name="T">Type of the page content items</typeparam>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.Page`1.NextPageLink">
            <summary>
            Gets the link to the next page.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.Page`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.Page`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Models.RebootType">
            <summary>
            Defines values for RebootType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Models.RedisAccessKeys">
            <summary>
            Redis cache access keys.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.RedisAccessKeys.#ctor">
            <summary>
            Initializes a new instance of the RedisAccessKeys class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.RedisAccessKeys.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the RedisAccessKeys class.
            </summary>
            <param name="primaryKey">The current primary key that clients can
            use to authenticate with redis cache.</param>
            <param name="secondaryKey">The current secondary key that clients
            can use to authenticate with redis cache.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisAccessKeys.PrimaryKey">
            <summary>
            Gets the current primary key that clients can use to authenticate
            with redis cache.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisAccessKeys.SecondaryKey">
            <summary>
            Gets the current secondary key that clients can use to
            authenticate with redis cache.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Models.RedisCreateParameters">
            <summary>
            Parameters supplied to the Create Redis operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.RedisCreateParameters.#ctor">
            <summary>
            Initializes a new instance of the RedisCreateParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.RedisCreateParameters.#ctor(System.String,Microsoft.Azure.Management.Redis.Models.Sku,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the RedisCreateParameters class.
            </summary>
            <param name="location">Resource location</param>
            <param name="sku">What sku of redis cache to deploy.</param>
            <param name="id">Resource Id</param>
            <param name="name">Resource name</param>
            <param name="type">Resource type</param>
            <param name="tags">Resource tags</param>
            <param name="redisConfiguration">All Redis Settings. Few possible
            keys:
            rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
            etc.</param>
            <param name="enableNonSslPort">If the value is true, then the
            non-ssl redis server port (6379) will be enabled.</param>
            <param name="tenantSettings">tenantSettings</param>
            <param name="shardCount">The number of shards to be created on a
            Premium Cluster Cache.</param>
            <param name="subnetId">The full resource ID of a subnet in a
            virtual network to deploy the redis cache in. Example format:
            /subscriptions/{subid}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1</param>
            <param name="staticIP">Required when deploying a redis cache
            inside an existing Azure Virtual Network.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisCreateParameters.RedisConfiguration">
            <summary>
            Gets or sets all Redis Settings. Few possible keys:
            rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
            etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisCreateParameters.EnableNonSslPort">
            <summary>
            Gets or sets if the value is true, then the non-ssl redis server
            port (6379) will be enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisCreateParameters.TenantSettings">
            <summary>
            Gets or sets tenantSettings
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisCreateParameters.ShardCount">
            <summary>
            Gets or sets the number of shards to be created on a Premium
            Cluster Cache.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisCreateParameters.SubnetId">
            <summary>
            Gets or sets the full resource ID of a subnet in a virtual network
            to deploy the redis cache in. Example format:
            /subscriptions/{subid}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisCreateParameters.StaticIP">
            <summary>
            Gets or sets required when deploying a redis cache inside an
            existing Azure Virtual Network.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisCreateParameters.Sku">
            <summary>
            Gets or sets what sku of redis cache to deploy.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.RedisCreateParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Models.RedisKeyType">
            <summary>
            Defines values for RedisKeyType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule">
            <summary>
            Response to put/get patch schedules for redis cache.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule.#ctor">
            <summary>
            Initializes a new instance of the RedisPatchSchedule class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Redis.Models.ScheduleEntry},System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the RedisPatchSchedule class.
            </summary>
            <param name="scheduleEntries">List of patch schedules for redis
            cache.</param>
            <param name="id">Resource Id</param>
            <param name="name">Resource name</param>
            <param name="type">Resource type</param>
            <param name="location">Resource location</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule.Id">
            <summary>
            Gets resource Id
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule.Name">
            <summary>
            Gets resource name
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule.Type">
            <summary>
            Gets resource type
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule.Location">
            <summary>
            Gets resource location
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule.ScheduleEntries">
            <summary>
            Gets or sets list of patch schedules for redis cache.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Models.RedisRebootParameters">
            <summary>
            Specifies which redis node(s) to reboot.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.RedisRebootParameters.#ctor">
            <summary>
            Initializes a new instance of the RedisRebootParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.RedisRebootParameters.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the RedisRebootParameters class.
            </summary>
            <param name="rebootType">Which redis node(s) to reboot. Depending
            on this value data loss is possible. Possible values include:
            'PrimaryNode', 'SecondaryNode', 'AllNodes'</param>
            <param name="shardId">In case of cluster cache, this specifies
            shard id which should be rebooted.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisRebootParameters.RebootType">
            <summary>
            Gets or sets which redis node(s) to reboot. Depending on this
            value data loss is possible. Possible values include:
            'PrimaryNode', 'SecondaryNode', 'AllNodes'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisRebootParameters.ShardId">
            <summary>
            Gets or sets in case of cluster cache, this specifies shard id
            which should be rebooted.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.RedisRebootParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters">
            <summary>
            Specifies which redis access keys to reset.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters.#ctor">
            <summary>
            Initializes a new instance of the RedisRegenerateKeyParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters.#ctor(Microsoft.Azure.Management.Redis.Models.RedisKeyType)">
            <summary>
            Initializes a new instance of the RedisRegenerateKeyParameters
            class.
            </summary>
            <param name="keyType">Which redis access key to reset. Possible
            values include: 'Primary', 'Secondary'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters.KeyType">
            <summary>
            Gets or sets which redis access key to reset. Possible values
            include: 'Primary', 'Secondary'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Models.RedisResource">
            <summary>
            A single redis item in List or Get Operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.RedisResource.#ctor">
            <summary>
            Initializes a new instance of the RedisResource class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.RedisResource.#ctor(System.String,Microsoft.Azure.Management.Redis.Models.Sku,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the RedisResource class.
            </summary>
            <param name="location">Resource location</param>
            <param name="sku">What sku of redis cache to deploy.</param>
            <param name="id">Resource Id</param>
            <param name="name">Resource name</param>
            <param name="type">Resource type</param>
            <param name="tags">Resource tags</param>
            <param name="redisVersion">Redis Version.</param>
            <param name="provisioningState">Redis instance provisioning
            status</param>
            <param name="hostName">Redis host name</param>
            <param name="port">Redis non-ssl port</param>
            <param name="sslPort">Redis ssl port</param>
            <param name="redisConfiguration">All Redis Settings. Few possible
            keys:
            rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
            etc.</param>
            <param name="enableNonSslPort">If the value is true, then the
            non-ssl redis server port (6379) will be enabled.</param>
            <param name="tenantSettings">tenantSettings</param>
            <param name="shardCount">The number of shards to be created on a
            Premium Cluster Cache.</param>
            <param name="subnetId">The full resource ID of a subnet in a
            virtual network to deploy the redis cache in. Example format:
            /subscriptions/{subid}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1</param>
            <param name="staticIP">Required when deploying a redis cache
            inside an existing Azure Virtual Network.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisResource.RedisVersion">
            <summary>
            Gets redis Version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisResource.ProvisioningState">
            <summary>
            Gets redis instance provisioning status
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisResource.HostName">
            <summary>
            Gets redis host name
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisResource.Port">
            <summary>
            Gets redis non-ssl port
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisResource.SslPort">
            <summary>
            Gets redis ssl port
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisResource.RedisConfiguration">
            <summary>
            Gets or sets all Redis Settings. Few possible keys:
            rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
            etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisResource.EnableNonSslPort">
            <summary>
            Gets or sets if the value is true, then the non-ssl redis server
            port (6379) will be enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisResource.TenantSettings">
            <summary>
            Gets or sets tenantSettings
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisResource.ShardCount">
            <summary>
            Gets or sets the number of shards to be created on a Premium
            Cluster Cache.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisResource.SubnetId">
            <summary>
            Gets or sets the full resource ID of a subnet in a virtual network
            to deploy the redis cache in. Example format:
            /subscriptions/{subid}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisResource.StaticIP">
            <summary>
            Gets or sets required when deploying a redis cache inside an
            existing Azure Virtual Network.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisResource.Sku">
            <summary>
            Gets or sets what sku of redis cache to deploy.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.RedisResource.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters">
            <summary>
            Parameters supplied to the Update Redis operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters.#ctor">
            <summary>
            Initializes a new instance of the RedisUpdateParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,System.String,Microsoft.Azure.Management.Redis.Models.Sku,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the RedisUpdateParameters class.
            </summary>
            <param name="redisConfiguration">All Redis Settings. Few possible
            keys:
            rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
            etc.</param>
            <param name="enableNonSslPort">If the value is true, then the
            non-ssl redis server port (6379) will be enabled.</param>
            <param name="tenantSettings">tenantSettings</param>
            <param name="shardCount">The number of shards to be created on a
            Premium Cluster Cache.</param>
            <param name="subnetId">The full resource ID of a subnet in a
            virtual network to deploy the redis cache in. Example format:
            /subscriptions/{subid}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1</param>
            <param name="staticIP">Required when deploying a redis cache
            inside an existing Azure Virtual Network.</param>
            <param name="sku">What sku of redis cache to deploy.</param>
            <param name="tags">Resource tags</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters.RedisConfiguration">
            <summary>
            Gets or sets all Redis Settings. Few possible keys:
            rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
            etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters.EnableNonSslPort">
            <summary>
            Gets or sets if the value is true, then the non-ssl redis server
            port (6379) will be enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters.TenantSettings">
            <summary>
            Gets or sets tenantSettings
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters.ShardCount">
            <summary>
            Gets or sets the number of shards to be created on a Premium
            Cluster Cache.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters.SubnetId">
            <summary>
            Gets or sets the full resource ID of a subnet in a virtual network
            to deploy the redis cache in. Example format:
            /subscriptions/{subid}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters.StaticIP">
            <summary>
            Gets or sets required when deploying a redis cache inside an
            existing Azure Virtual Network.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters.Sku">
            <summary>
            Gets or sets what sku of redis cache to deploy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters.Tags">
            <summary>
            Gets or sets resource tags
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Models.Resource">
            <summary>
            The Resource definition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.Resource.#ctor">
            <summary>
            Initializes a new instance of the Resource class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.Resource.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the Resource class.
            </summary>
            <param name="location">Resource location</param>
            <param name="id">Resource Id</param>
            <param name="name">Resource name</param>
            <param name="type">Resource type</param>
            <param name="tags">Resource tags</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.Resource.Id">
            <summary>
            Gets resource Id
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.Resource.Name">
            <summary>
            Gets resource name
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.Resource.Type">
            <summary>
            Gets resource type
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.Resource.Location">
            <summary>
            Gets or sets resource location
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.Resource.Tags">
            <summary>
            Gets or sets resource tags
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.Resource.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Models.ScheduleEntry">
            <summary>
            Patch schedule entry for Premium Redis Cache.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.ScheduleEntry.#ctor">
            <summary>
            Initializes a new instance of the ScheduleEntry class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.ScheduleEntry.#ctor(Microsoft.Azure.Management.Redis.Models.DayOfWeek,System.Int32,System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the ScheduleEntry class.
            </summary>
            <param name="dayOfWeek">Day of week when cache can be patched.
            Possible values include: 'Monday', 'Tuesday', 'Wednesday',
            'Thursday', 'Friday', 'Saturday', 'Sunday', 'Everyday',
            'Weekend'</param>
            <param name="startHourUtc">Start hour after which cache patching
            can start.</param>
            <param name="maintenanceWindow">ISO8601 timespan specifying how
            much time cache patching can take. </param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.ScheduleEntry.DayOfWeek">
            <summary>
            Gets or sets day of week when cache can be patched. Possible
            values include: 'Monday', 'Tuesday', 'Wednesday', 'Thursday',
            'Friday', 'Saturday', 'Sunday', 'Everyday', 'Weekend'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.ScheduleEntry.StartHourUtc">
            <summary>
            Gets or sets start hour after which cache patching can start.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.ScheduleEntry.MaintenanceWindow">
            <summary>
            Gets or sets ISO8601 timespan specifying how much time cache
            patching can take.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.ScheduleEntry.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Models.Sku">
            <summary>
            Sku parameters supplied to the create redis operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.Sku.#ctor">
            <summary>
            Initializes a new instance of the Sku class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.Sku.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the Sku class.
            </summary>
            <param name="name">What type of redis cache to deploy. Valid
            values: (Basic, Standard, Premium). Possible values include:
            'Basic', 'Standard', 'Premium'</param>
            <param name="family">Which family to use. Valid values: (C, P).
            Possible values include: 'C', 'P'</param>
            <param name="capacity">What size of redis cache to deploy. Valid
            values: for C family (0, 1, 2, 3, 4, 5, 6), for P family (1, 2,
            3, 4)</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.Sku.Name">
            <summary>
            Gets or sets what type of redis cache to deploy. Valid values:
            (Basic, Standard, Premium). Possible values include: 'Basic',
            'Standard', 'Premium'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.Sku.Family">
            <summary>
            Gets or sets which family to use. Valid values: (C, P). Possible
            values include: 'C', 'P'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Models.Sku.Capacity">
            <summary>
            Gets or sets what size of redis cache to deploy. Valid values: for
            C family (0, 1, 2, 3, 4, 5, 6), for P family (1, 2, 3, 4)
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Models.Sku.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Models.SkuFamily">
            <summary>
            Defines values for SkuFamily.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Models.SkuName">
            <summary>
            Defines values for SkuName.
            </summary>
        </member>
    </members>
</doc>

<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Rest.ClientRuntime.Log4Net</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Rest.Tracing.Log4Net.Log4NetTracingInterceptor">
            <summary>
            Implementation for IServiceClientTracingInterceptor that works using log4net framework.
            </summary>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Log4Net.Log4NetTracingInterceptor.#ctor(log4net.ILog)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Rest.Tracing.Log4Net.Log4NetTracingInterceptor" /> class with log4net logger.
            </summary>
            <param name="logger">log4net logger.</param>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Log4Net.Log4NetTracingInterceptor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Rest.Tracing.Log4Net.Log4NetTracingInterceptor" /> class with configuration file.
            </summary>
            <param name="filePath">The configuration file absolute path.</param>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Log4Net.Log4NetTracingInterceptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Rest.Tracing.Log4Net.Log4NetTracingInterceptor" /> class without configuration file.
            </summary>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Log4Net.Log4NetTracingInterceptor.Information(System.String)">
            <summary>
            Trace information.
            </summary>
            <param name="message">The information to trace.</param>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Log4Net.Log4NetTracingInterceptor.Configuration(System.String,System.String,System.String)">
            <summary>
            Probe configuration for the value of a setting.
            </summary>
            <param name="source">The configuration source.</param>
            <param name="name">The name of the setting.</param>
            <param name="value">The value of the setting in the source.</param>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Log4Net.Log4NetTracingInterceptor.EnterMethod(System.String,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Enter a method.
            </summary>
            <param name="invocationId">Method invocation identifier.</param>
            <param name="instance">The instance with the method.</param>
            <param name="method">Name of the method.</param>
            <param name="parameters">Method parameters.</param>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Log4Net.Log4NetTracingInterceptor.SendRequest(System.String,System.Net.Http.HttpRequestMessage)">
            <summary>
            Send an HTTP request.
            </summary>
            <param name="invocationId">Method invocation identifier.</param>
            <param name="request">The request about to be sent.</param>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Log4Net.Log4NetTracingInterceptor.ReceiveResponse(System.String,System.Net.Http.HttpResponseMessage)">
            <summary>
            Receive an HTTP response.
            </summary>
            <param name="invocationId">Method invocation identifier.</param>
            <param name="response">The response instance.</param>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Log4Net.Log4NetTracingInterceptor.TraceError(System.String,System.Exception)">
            <summary>
            Raise an error.
            </summary>
            <param name="invocationId">Method invocation identifier.</param>
            <param name="exception">The error.</param>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Log4Net.Log4NetTracingInterceptor.ExitMethod(System.String,System.Object)">
            <summary>
            Exit a method.  Note: Exit will not be called in the event of an
            error.
            </summary>
            <param name="invocationId">Method invocation identifier.</param>
            <param name="returnValue">Method return value.</param>
        </member>
    </members>
</doc>

<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Rest.ClientRuntime.Etw</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Rest.Tracing.Etw.EtwTracingInterceptor">
            <summary>
            Implementation for IServiceClientTracingInterceptor that raises ETW events.
            </summary>
            <remarks>
            To use ETW with the Microsoft AutoRest generated client:
            1. Register the logger.
            2. Use tools such as PerfView to capture events under the
            Microsoft.Rest provider.
            </remarks>
            <example>
            This shows how to hook up the tracing interceptor.
            <code>
            TracingAdapter.AddTracingInterceptor(
                new EtwTracingInterceptor());
            </code>
            </example>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Etw.EtwTracingInterceptor.Information(System.String)">
            <summary>
            Trace information.
            </summary>
            <param name="message">The information to trace.</param>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Etw.EtwTracingInterceptor.Configuration(System.String,System.String,System.String)">
            <summary>
            Probe configuration for the value of a setting.
            </summary>
            <param name="source">The configuration source.</param>
            <param name="name">The name of the setting.</param>
            <param name="value">The value of the setting in the source.</param>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Etw.EtwTracingInterceptor.EnterMethod(System.String,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Enter a method.
            </summary>
            <param name="invocationId">Method invocation identifier.</param>
            <param name="instance">The instance with the method.</param>
            <param name="method">Name of the method.</param>
            <param name="parameters">Method parameters.</param>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Etw.EtwTracingInterceptor.SendRequest(System.String,System.Net.Http.HttpRequestMessage)">
            <summary>
            Send an HTTP request.
            </summary>
            <param name="invocationId">Method invocation identifier.</param>
            <param name="request">The request about to be sent.</param>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Etw.EtwTracingInterceptor.ReceiveResponse(System.String,System.Net.Http.HttpResponseMessage)">
            <summary>
            Receive an HTTP response.
            </summary>
            <param name="invocationId">Method invocation identifier.</param>
            <param name="response">The response instance.</param>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Etw.EtwTracingInterceptor.TraceError(System.String,System.Exception)">
            <summary>
            Raise an error.
            </summary>
            <param name="invocationId">Method invocation identifier.</param>
            <param name="exception">The error.</param>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Etw.EtwTracingInterceptor.ExitMethod(System.String,System.Object)">
            <summary>
            Exit a method.  Note: Exit will not be called in the event of an
            error.
            </summary>
            <param name="invocationId">Method invocation identifier.</param>
            <param name="returnValue">Method return value.</param>
        </member>
        <member name="T:Microsoft.Rest.Tracing.Etw.HttpOperationEventSource">
            <summary>
            Class that inherits from EventSource and is used as a data model for ETW events.
            </summary>
        </member>
        <member name="P:Microsoft.Rest.Tracing.Etw.HttpOperationEventSource.Log">
            <summary>
            Gets an instance of the HttpOperationEventSource.
            </summary>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Etw.HttpOperationEventSource.Information(System.String)">
            <summary>
            Logs information message.
            </summary>
            <param name="Message">Message</param>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Etw.HttpOperationEventSource.Configuration(System.String,System.String,System.String)">
            <summary>
            Logs a configuration event.
            </summary>
            <param name="Source">Event source.</param>
            <param name="Name">Configuration name.</param>
            <param name="Value">Configuration value.</param>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Etw.HttpOperationEventSource.Enter(System.String,System.String,System.String,System.String)">
            <summary>
            Logs method start.
            </summary>
            <param name="InvocationId">Correlation ID for a series of events.</param>
            <param name="Instance">Instance of the method.</param>
            <param name="Method">Method name.</param>
            <param name="Parameters">Method parameters passed to the method.</param>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Etw.HttpOperationEventSource.SendRequest(System.String,System.String)">
            <summary>
            Logs sending an HTTP request.
            </summary>
            <param name="InvocationId">Correlation ID for a series of events.</param>
            <param name="Request">The request about to be sent.</param>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Etw.HttpOperationEventSource.ReceiveResponse(System.String,System.String)">
            <summary>
            Logs receipt of an HTTP response.
            </summary>
            <param name="InvocationId">Correlation ID for a series of events.</param>
            <param name="Response">The response instance.</param>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Etw.HttpOperationEventSource.Error(System.String,System.String)">
            <summary>
            Logs an error.
            </summary>
            <param name="InvocationId">Correlation ID for a series of events.</param>
            <param name="Exception">Exception.</param>
        </member>
        <member name="M:Microsoft.Rest.Tracing.Etw.HttpOperationEventSource.Exit(System.String,System.String)">
            <summary>
            Logs method exit.
            </summary>
            <param name="InvocationId">Correlation ID for a series of events.</param>
            <param name="ReturnValue">Return value.</param>
        </member>
    </members>
</doc>

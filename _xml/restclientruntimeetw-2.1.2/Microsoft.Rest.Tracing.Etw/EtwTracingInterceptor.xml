<Type Name="EtwTracingInterceptor" FullName="Microsoft.Rest.Tracing.Etw.EtwTracingInterceptor">
  <TypeSignature Language="C#" Value="public class EtwTracingInterceptor : Microsoft.Rest.IServiceClientTracingInterceptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EtwTracingInterceptor extends System.Object implements class Microsoft.Rest.IServiceClientTracingInterceptor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Rest.Tracing.Etw.EtwTracingInterceptor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Rest.ClientRuntime.Etw</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Rest.IServiceClientTracingInterceptor</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Implementation for IServiceClientTracingInterceptor that raises ETW events.
            </summary>
    <remarks>
            To use ETW with the Microsoft AutoRest generated client:
            1. Register the logger.
            2. Use tools such as PerfView to capture events under the
            Microsoft.Rest provider.
            </remarks>
    <example>
            This shows how to hook up the tracing interceptor.
            <code>
            TracingAdapter.AddTracingInterceptor(
                new EtwTracingInterceptor());
            </code></example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EtwTracingInterceptor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.Tracing.Etw.EtwTracingInterceptor.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Configuration">
      <MemberSignature Language="C#" Value="public void Configuration (string source, string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Configuration(string source, string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.Tracing.Etw.EtwTracingInterceptor.Configuration(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">The configuration source.</param>
        <param name="name">The name of the setting.</param>
        <param name="value">The value of the setting in the source.</param>
        <summary>
            Probe configuration for the value of a setting.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterMethod">
      <MemberSignature Language="C#" Value="public void EnterMethod (string invocationId, object instance, string method, System.Collections.Generic.IDictionary&lt;string,object&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterMethod(string invocationId, object instance, string method, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.Tracing.Etw.EtwTracingInterceptor.EnterMethod(System.String,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invocationId" Type="System.String" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="invocationId">Method invocation identifier.</param>
        <param name="instance">The instance with the method.</param>
        <param name="method">Name of the method.</param>
        <param name="parameters">Method parameters.</param>
        <summary>
            Enter a method.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitMethod">
      <MemberSignature Language="C#" Value="public void ExitMethod (string invocationId, object returnValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitMethod(string invocationId, object returnValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.Tracing.Etw.EtwTracingInterceptor.ExitMethod(System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invocationId" Type="System.String" />
        <Parameter Name="returnValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="invocationId">Method invocation identifier.</param>
        <param name="returnValue">Method return value.</param>
        <summary>
            Exit a method.  Note: Exit will not be called in the event of an
            error.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Information">
      <MemberSignature Language="C#" Value="public void Information (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Information(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.Tracing.Etw.EtwTracingInterceptor.Information(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The information to trace.</param>
        <summary>
            Trace information.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveResponse">
      <MemberSignature Language="C#" Value="public virtual void ReceiveResponse (string invocationId, System.Net.Http.HttpResponseMessage response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReceiveResponse(string invocationId, class System.Net.Http.HttpResponseMessage response) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.Tracing.Etw.EtwTracingInterceptor.ReceiveResponse(System.String,System.Net.Http.HttpResponseMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invocationId" Type="System.String" />
        <Parameter Name="response" Type="System.Net.Http.HttpResponseMessage" />
      </Parameters>
      <Docs>
        <param name="invocationId">Method invocation identifier.</param>
        <param name="response">The response instance.</param>
        <summary>
            Receive an HTTP response.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendRequest">
      <MemberSignature Language="C#" Value="public virtual void SendRequest (string invocationId, System.Net.Http.HttpRequestMessage request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendRequest(string invocationId, class System.Net.Http.HttpRequestMessage request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.Tracing.Etw.EtwTracingInterceptor.SendRequest(System.String,System.Net.Http.HttpRequestMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invocationId" Type="System.String" />
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
      </Parameters>
      <Docs>
        <param name="invocationId">Method invocation identifier.</param>
        <param name="request">The request about to be sent.</param>
        <summary>
            Send an HTTP request.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public void TraceError (string invocationId, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceError(string invocationId, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.Tracing.Etw.EtwTracingInterceptor.TraceError(System.String,System.Exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invocationId" Type="System.String" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="invocationId">Method invocation identifier.</param>
        <param name="exception">The error.</param>
        <summary>
            Raise an error.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

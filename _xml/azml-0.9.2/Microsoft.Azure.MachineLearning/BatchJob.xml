<Type Name="BatchJob" FullName="Microsoft.Azure.MachineLearning.BatchJob">
  <TypeSignature Language="C#" Value="public sealed class BatchJob" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BatchJob extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.MachineLearning.BatchJob" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.MachineLearning</AssemblyName>
    <AssemblyVersion>0.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a batch job created to run against a machine learning endpoint
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.BatchJob.Cancel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Cancels a scheduled batch job
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.RuntimeException">If any error is reported back from the service on the API call.</exception>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.BatchJob.CancelAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Azure.MachineLearning.BatchJob/&lt;CancelAsync&gt;d__1a))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Asynchronously cancel a scheduled batch job
            </summary>
        <returns>Returns a continuation <c>Task</c> for this asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.RuntimeException">If any error is reported back from the service on the API call.</exception>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CancelAsync (System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CancelAsync(valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.BatchJob.CancelAsync(System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Azure.MachineLearning.BatchJob/&lt;CancelAsync&gt;d__1d))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="token">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        <summary>
            Asynchronously cancel a scheduled batch job
            </summary>
        <returns>Returns a continuation <c>Task</c> for this asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.RuntimeException">If any error is reported back from the service on the API call.</exception>
        <exception cref="T:System.OperationCanceledException">If a task cancellation is detected.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckStatus">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.MachineLearning.Contracts.BatchJobStatus CheckStatus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.MachineLearning.Contracts.BatchJobStatus CheckStatus() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.BatchJob.CheckStatus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.MachineLearning.Contracts.BatchJobStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Checks the current status of a batch job
            </summary>
        <returns>The current status of the job.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.RuntimeException">If any error is reported back from the service on the API call.</exception>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.ServiceResponseParsingException">If the service response payload fails to deserialize in the expected format.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckStatusAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.MachineLearning.Contracts.BatchJobStatus&gt; CheckStatusAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.MachineLearning.Contracts.BatchJobStatus&gt; CheckStatusAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.BatchJob.CheckStatusAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Azure.MachineLearning.BatchJob/&lt;CheckStatusAsync&gt;d__6))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.MachineLearning.Contracts.BatchJobStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Asynchronously check the current status of a batch job
            </summary>
        <returns>Returns a <c>Task</c> which will yield the job's current status once completed.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.RuntimeException">If any error is reported back from the service on the API call.</exception>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.ServiceResponseParsingException">If the service response payload fails to deserialize in the expected format.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckStatusAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.MachineLearning.Contracts.BatchJobStatus&gt; CheckStatusAsync (System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.MachineLearning.Contracts.BatchJobStatus&gt; CheckStatusAsync(valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.BatchJob.CheckStatusAsync(System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Azure.MachineLearning.BatchJob/&lt;CheckStatusAsync&gt;d__9))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.MachineLearning.Contracts.BatchJobStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="token">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        <summary>
            Asynchronously check the current status of a batch job
            </summary>
        <returns>Returns a <c>Task</c> which will yield the job's current status once completed.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.RuntimeException">If any error is reported back from the service on the API call.</exception>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.ServiceResponseParsingException">If the service response payload fails to deserialize in the expected format.</exception>
        <exception cref="T:System.OperationCanceledException">If a task cancellation is detected.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreatedAt">
      <MemberSignature Language="C#" Value="public DateTime CreatedAt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CreatedAt" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.MachineLearning.BatchJob.CreatedAt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the job's creation timestamp
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.MachineLearning.BatchJob.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the job's unique identifier
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.BatchJob.Start" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Schedule a registered job to run on the Azure Machine Learning platform
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.RuntimeException">If any error is reported back from the service on the API call.</exception>
      </Docs>
    </Member>
    <Member MemberName="StartAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.BatchJob.StartAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Azure.MachineLearning.BatchJob/&lt;StartAsync&gt;d__0))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Asynchronously schedule a registered job to run on the Azure Machine Learning platform
            </summary>
        <returns>Returns a continuation <c>Task</c> for this asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.RuntimeException">If any error is reported back from the service on the API call.</exception>
      </Docs>
    </Member>
    <Member MemberName="StartAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartAsync (System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartAsync(valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.BatchJob.StartAsync(System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Azure.MachineLearning.BatchJob/&lt;StartAsync&gt;d__3))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="token">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        <summary>
            Asynchronously schedule a registered job to run on the Azure Machine Learning platform
            </summary>
        <returns>Returns a continuation <c>Task</c> for this asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.RuntimeException">If any error is reported back from the service on the API call.</exception>
        <exception cref="T:System.OperationCanceledException">If a task cancellation is detected.</exception>
      </Docs>
    </Member>
    <Member MemberName="WaitForCompletion">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.MachineLearning.Contracts.BatchJobStatus WaitForCompletion ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.MachineLearning.Contracts.BatchJobStatus WaitForCompletion() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.BatchJob.WaitForCompletion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.MachineLearning.Contracts.BatchJobStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Monitor a running batch job until its completion
            </summary>
        <returns>The job's status upon its completion.</returns>
        <remarks>A job is considered completed when it reaches any of its possible final states: Finished, Failed or Cancelled.</remarks>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.RuntimeException">If any error is reported back from the service on the API call.</exception>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.ServiceResponseParsingException">If the service response payload fails to deserialize in the expected format.</exception>
      </Docs>
    </Member>
    <Member MemberName="WaitForCompletionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.MachineLearning.Contracts.BatchJobStatus&gt; WaitForCompletionAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.MachineLearning.Contracts.BatchJobStatus&gt; WaitForCompletionAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.BatchJob.WaitForCompletionAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Azure.MachineLearning.BatchJob/&lt;WaitForCompletionAsync&gt;d__e))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.MachineLearning.Contracts.BatchJobStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Asynchronously monitor a running batch job until its completion
            </summary>
        <returns>Returns a <c>Task</c> which will yield the job's status upon its completion.</returns>
        <remarks>A job is considered completed when it reaches any of its possible final states: Finished, Failed or Cancelled.</remarks>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.RuntimeException">If any error is reported back from the service on the API call.</exception>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.ServiceResponseParsingException">If the service response payload fails to deserialize in the expected format.</exception>
      </Docs>
    </Member>
    <Member MemberName="WaitForCompletionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.MachineLearning.Contracts.BatchJobStatus&gt; WaitForCompletionAsync (System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.MachineLearning.Contracts.BatchJobStatus&gt; WaitForCompletionAsync(valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.BatchJob.WaitForCompletionAsync(System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Azure.MachineLearning.BatchJob/&lt;WaitForCompletionAsync&gt;d__11))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.MachineLearning.Contracts.BatchJobStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="token">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        <summary>
            Asynchronously monitor a running batch job until its completion
            </summary>
        <returns>Returns a <c>Task</c> which will yield the job's status upon its completion.</returns>
        <remarks>A job is considered completed when it reaches any of its possible final states: Finished, Failed or Cancelled.</remarks>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.RuntimeException">If any error is reported back from the service on the API call.</exception>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.ServiceResponseParsingException">If the service response payload fails to deserialize in the expected format.</exception>
        <exception cref="T:System.OperationCanceledException">If a task cancellation is detected.</exception>
      </Docs>
    </Member>
    <Member MemberName="WaitForCompletionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.MachineLearning.Contracts.BatchJobStatus&gt; WaitForCompletionAsync (TimeSpan pollingInterval, TimeSpan timeoutInterval, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.MachineLearning.Contracts.BatchJobStatus&gt; WaitForCompletionAsync(valuetype System.TimeSpan pollingInterval, valuetype System.TimeSpan timeoutInterval, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.BatchJob.WaitForCompletionAsync(System.TimeSpan,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Azure.MachineLearning.BatchJob/&lt;WaitForCompletionAsync&gt;d__14))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.MachineLearning.Contracts.BatchJobStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pollingInterval" Type="System.TimeSpan" />
        <Parameter Name="timeoutInterval" Type="System.TimeSpan" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pollingInterval">The time interval between consequtive job status polls.</param>
        <param name="timeoutInterval">The maximum time duration to keep polling for the job status.</param>
        <param name="token">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        <summary>
            Asynchronously monitor a running batch job until its completion or until the provided timeout interval has expired
            </summary>
        <returns>Returns a <c>Task</c> which will yield the job's status upon its completion.</returns>
        <remarks>A job is considered completed when it reaches any of its possible final states: Finished, Failed or Cancelled.</remarks>
        <exception cref="T:System.ArgumentException">pollingInterval or timeoutInterval are not finite time periods.</exception>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.RuntimeException">If any error is reported back from the service on the API call.</exception>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.ServiceResponseParsingException">If the service response payload fails to deserialize in the expected format.</exception>
        <exception cref="T:System.TimeoutException">The operation's duration exceeded the passed in timeoutInterval.</exception>
        <exception cref="T:System.OperationCanceledException">If a task cancellation is detected.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

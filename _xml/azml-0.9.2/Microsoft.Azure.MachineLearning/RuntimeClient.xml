<Type Name="RuntimeClient" FullName="Microsoft.Azure.MachineLearning.RuntimeClient">
  <TypeSignature Language="C#" Value="public sealed class RuntimeClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RuntimeClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.MachineLearning.RuntimeClient" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.MachineLearning</AssemblyName>
    <AssemblyVersion>0.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents the runtime client for an Azure Machine Learning endpoint
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuntimeClient (string endpointUriValue, string accessKey, Microsoft.Azure.MachineLearning.RetryPolicies.RetryPolicy retryPolicy = null, Microsoft.Azure.MachineLearning.Logging.ILogger logger = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string endpointUriValue, string accessKey, class Microsoft.Azure.MachineLearning.RetryPolicies.RetryPolicy retryPolicy, class Microsoft.Azure.MachineLearning.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.RuntimeClient.#ctor(System.String,System.String,Microsoft.Azure.MachineLearning.RetryPolicies.RetryPolicy,Microsoft.Azure.MachineLearning.Logging.ILogger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpointUriValue" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
        <Parameter Name="retryPolicy" Type="Microsoft.Azure.MachineLearning.RetryPolicies.RetryPolicy" />
        <Parameter Name="logger" Type="Microsoft.Azure.MachineLearning.Logging.ILogger" />
      </Parameters>
      <Docs>
        <param name="endpointUriValue">The absolute uri for the Azure Machine Learning endpoint.</param>
        <param name="accessKey">The access key for the Azure Machine Learning endpoint.</param>
        <param name="retryPolicy">(Optional) Retry policy for calls to the service.</param>
        <param name="logger">(Optional) Logger instance for tracing functionality behavior.</param>
        <summary>
            Initialize a new instance of <c>RuntimeClient</c></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">baseServiceUri is null.</exception>
        <exception cref="T:System.ArgumentException">Any of the provided parameters are invalid.</exception>
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public string AccessKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.MachineLearning.RuntimeClient.AccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The access key for the Azure Machine Learning endpoint.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndpointUri">
      <MemberSignature Language="C#" Value="public Uri EndpointUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri EndpointUri" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.MachineLearning.RuntimeClient.EndpointUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The absolute base uri for the Azure Machine Learning endpoint
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindJobById">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.MachineLearning.BatchJob FindJobById (string jobId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.MachineLearning.BatchJob FindJobById(string jobId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.RuntimeClient.FindJobById(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.MachineLearning.BatchJob</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="jobId">The unique identifier of the batch job.</param>
        <summary>
            Retrieve a batch job instance by its id
            </summary>
        <returns>The batch job instance if found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindJobByIdAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.MachineLearning.BatchJob&gt; FindJobByIdAsync (string jobId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.MachineLearning.BatchJob&gt; FindJobByIdAsync(string jobId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.RuntimeClient.FindJobByIdAsync(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Azure.MachineLearning.RuntimeClient/&lt;FindJobByIdAsync&gt;d__14))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.MachineLearning.BatchJob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="jobId">The unique identifier of the batch job.</param>
        <summary>
            Asynchronously retrieve a batch job instance by its id
            </summary>
        <returns>A <c>Task</c> which will yield the batch job instance if found.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">jobId is invalid.</exception>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.RuntimeException">If any error is reported back from the service on the API call.</exception>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.ServiceResponseParsingException">If the service response payload fails to deserialize in the expected format.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindJobByIdAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.MachineLearning.BatchJob&gt; FindJobByIdAsync (string jobId, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.MachineLearning.BatchJob&gt; FindJobByIdAsync(string jobId, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.RuntimeClient.FindJobByIdAsync(System.String,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Azure.MachineLearning.RuntimeClient/&lt;FindJobByIdAsync&gt;d__17))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.MachineLearning.BatchJob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId">The unique identifier of the batch job.</param>
        <param name="token">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        <summary>
            Asynchronously retrieve a batch job instance by its id
            </summary>
        <returns>A <c>Task</c> which will yield the batch job instance if found.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">jobId is invalid.</exception>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.RuntimeException">If any error is reported back from the service on the API call.</exception>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.ServiceResponseParsingException">If the service response payload fails to deserialize in the expected format.</exception>
        <exception cref="T:System.OperationCanceledException">If a task cancellation is detected.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterBatchJob">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.MachineLearning.BatchJob RegisterBatchJob ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.MachineLearning.BatchJob RegisterBatchJob() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.RuntimeClient.RegisterBatchJob" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.MachineLearning.BatchJob</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Register a simple batch job (no input / parameters) for the Azure Machine Learning endpoint
            </summary>
        <returns>The newly registered batch job.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.RuntimeException">If any error is reported back from the service on the API call.</exception>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.ServiceResponseParsingException">If the service response payload fails to deserialize in the expected format.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterBatchJob">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.MachineLearning.BatchJob RegisterBatchJob (Microsoft.Azure.MachineLearning.Contracts.BatchJobRequest jobRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.MachineLearning.BatchJob RegisterBatchJob(class Microsoft.Azure.MachineLearning.Contracts.BatchJobRequest jobRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.RuntimeClient.RegisterBatchJob(Microsoft.Azure.MachineLearning.Contracts.BatchJobRequest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.MachineLearning.BatchJob</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobRequest" Type="Microsoft.Azure.MachineLearning.Contracts.BatchJobRequest" />
      </Parameters>
      <Docs>
        <param name="jobRequest">Request information for job registration.</param>
        <summary>
            Register a batch job for the Azure Machine Learning endpoint
            </summary>
        <returns>The newly registered batch job.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">jobRequest is null.</exception>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.RuntimeException">If any error is reported back from the service on the API call.</exception>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.ServiceResponseParsingException">If the service response payload fails to deserialize in the expected format.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterBatchJobAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.MachineLearning.BatchJob&gt; RegisterBatchJobAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.MachineLearning.BatchJob&gt; RegisterBatchJobAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.RuntimeClient.RegisterBatchJobAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Azure.MachineLearning.RuntimeClient/&lt;RegisterBatchJobAsync&gt;d__6))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.MachineLearning.BatchJob&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Asynchronously register a simple batch job (no input / parameters) for the Azure Machine Learning endpoint
            </summary>
        <returns>A <c>Task</c> which will yield the newly registered job once completed.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.RuntimeException">If any error is reported back from the service on the API call.</exception>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.ServiceResponseParsingException">If the service response payload fails to deserialize in the expected format.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterBatchJobAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.MachineLearning.BatchJob&gt; RegisterBatchJobAsync (Microsoft.Azure.MachineLearning.Contracts.BatchJobRequest jobRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.MachineLearning.BatchJob&gt; RegisterBatchJobAsync(class Microsoft.Azure.MachineLearning.Contracts.BatchJobRequest jobRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.RuntimeClient.RegisterBatchJobAsync(Microsoft.Azure.MachineLearning.Contracts.BatchJobRequest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Azure.MachineLearning.RuntimeClient/&lt;RegisterBatchJobAsync&gt;d__c))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.MachineLearning.BatchJob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobRequest" Type="Microsoft.Azure.MachineLearning.Contracts.BatchJobRequest" />
      </Parameters>
      <Docs>
        <param name="jobRequest">Request information for job registration.</param>
        <summary>
            Asynchronously register a batch job for the Azure Machine Learning endpoint
            </summary>
        <returns>A <c>Task</c> which will yield the newly registered job once completed.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.RuntimeException">If any error is reported back from the service on the API call.</exception>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.ServiceResponseParsingException">If the service response payload fails to deserialize in the expected format.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterBatchJobAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.MachineLearning.BatchJob&gt; RegisterBatchJobAsync (System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.MachineLearning.BatchJob&gt; RegisterBatchJobAsync(valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.RuntimeClient.RegisterBatchJobAsync(System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Azure.MachineLearning.RuntimeClient/&lt;RegisterBatchJobAsync&gt;d__9))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.MachineLearning.BatchJob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="token">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        <summary>
            Asynchronously register a simple batch job (no input / parameters) for the Azure Machine Learning endpoint
            </summary>
        <returns>A <c>Task</c> which will yield the newly registered job once completed.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.RuntimeException">If any error is reported back from the service on the API call.</exception>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.ServiceResponseParsingException">If the service response payload fails to deserialize in the expected format.</exception>
        <exception cref="T:System.OperationCanceledException">If a task cancellation is detected.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterBatchJobAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.MachineLearning.BatchJob&gt; RegisterBatchJobAsync (Microsoft.Azure.MachineLearning.Contracts.BatchJobRequest jobRequest, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.MachineLearning.BatchJob&gt; RegisterBatchJobAsync(class Microsoft.Azure.MachineLearning.Contracts.BatchJobRequest jobRequest, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.MachineLearning.RuntimeClient.RegisterBatchJobAsync(Microsoft.Azure.MachineLearning.Contracts.BatchJobRequest,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Azure.MachineLearning.RuntimeClient/&lt;RegisterBatchJobAsync&gt;d__f))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.MachineLearning.BatchJob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobRequest" Type="Microsoft.Azure.MachineLearning.Contracts.BatchJobRequest" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobRequest">Request information for job registration.</param>
        <param name="token">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        <summary>
            Asynchronously register a batch job for the Azure Machine Learning endpoint
            </summary>
        <returns>A <c>Task</c> which will yield the newly registered job once completed.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.RuntimeException">If any error is reported back from the service on the API call.</exception>
        <exception cref="T:Microsoft.Azure.MachineLearning.Exceptions.ServiceResponseParsingException">If the service response payload fails to deserialize in the expected format.</exception>
        <exception cref="T:System.OperationCanceledException">If a task cancellation is detected.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ServiceClient&lt;T&gt;" FullName="Hyak.Common.ServiceClient&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class ServiceClient&lt;T&gt; : IDisposable where T : ServiceClient&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ServiceClient`1&lt;(class Hyak.Common.ServiceClient`1&lt;!T&gt;) T&gt; extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Hyak.Common.ServiceClient`1" />
  <AssemblyInfo>
    <AssemblyName>Hyak.Common</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <BaseTypeName>Hyak.Common.ServiceClient&lt;T&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">Type of the ServiceClient.</typeparam>
    <summary>
            The base ServiceClient class used to call REST services.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Hyak.Common.ServiceClient`1.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the ServiceClient class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceClient (System.Net.Http.HttpClient httpClient);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.HttpClient httpClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Hyak.Common.ServiceClient`1.#ctor(System.Net.Http.HttpClient)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="httpClient" Type="System.Net.Http.HttpClient" />
      </Parameters>
      <Docs>
        <param name="httpClient">The http client.</param>
        <summary>
            Initializes a new instance of the ServiceClient class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandlerToPipeline">
      <MemberSignature Language="C#" Value="public void AddHandlerToPipeline (System.Net.Http.DelegatingHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandlerToPipeline(class System.Net.Http.DelegatingHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Hyak.Common.ServiceClient`1.AddHandlerToPipeline(System.Net.Http.DelegatingHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Net.Http.DelegatingHandler" />
      </Parameters>
      <Docs>
        <param name="handler">The handler to add.</param>
        <summary>
            Add a handler to the end of the client's HTTP pipeline.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected virtual void Clone (Hyak.Common.ServiceClient&lt;T&gt; client);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Clone(class Hyak.Common.ServiceClient`1&lt;!T&gt; client) cil managed" />
      <MemberSignature Language="DocId" Value="M:Hyak.Common.ServiceClient`1.Clone(Hyak.Common.ServiceClient{`0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Hyak.Common.ServiceClient&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="client">The client to clone.</param>
        <summary>
            Clone the service client.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Hyak.Common.ServiceClient`1.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Dispose the ServiceClient.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHttpPipeline">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Net.Http.HttpMessageHandler&gt; GetHttpPipeline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Net.Http.HttpMessageHandler&gt; GetHttpPipeline() cil managed" />
      <MemberSignature Language="DocId" Value="M:Hyak.Common.ServiceClient`1.GetHttpPipeline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Net.Http.HttpMessageHandler&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get the HTTP pipeline for the given service client.
            </summary>
        <returns>The client's HTTP pipeline.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpClient">
      <MemberSignature Language="C#" Value="public System.Net.Http.HttpClient HttpClient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.HttpClient HttpClient" />
      <MemberSignature Language="DocId" Value="P:Hyak.Common.ServiceClient`1.HttpClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the HttpClient used for making HTTP requests.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpMessageHandler">
      <MemberSignature Language="C#" Value="protected System.Net.Http.HttpMessageHandler HttpMessageHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.HttpMessageHandler HttpMessageHandler" />
      <MemberSignature Language="DocId" Value="P:Hyak.Common.ServiceClient`1.HttpMessageHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpMessageHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a reference to our HTTP handler (which is the start of our
            HTTP pipeline).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeHttpClient">
      <MemberSignature Language="C#" Value="protected void InitializeHttpClient (System.Net.Http.HttpMessageHandler httpMessageHandler);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializeHttpClient(class System.Net.Http.HttpMessageHandler httpMessageHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Hyak.Common.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpMessageHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpMessageHandler" Type="System.Net.Http.HttpMessageHandler" />
      </Parameters>
      <Docs>
        <param name="httpMessageHandler">Http message handler to use with Http client.</param>
        <summary>
            Initializes HttpClient.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRetryPolicy">
      <MemberSignature Language="C#" Value="public void SetRetryPolicy (Hyak.Common.TransientFaultHandling.RetryPolicy retryPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRetryPolicy(class Hyak.Common.TransientFaultHandling.RetryPolicy retryPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Hyak.Common.ServiceClient`1.SetRetryPolicy(Hyak.Common.TransientFaultHandling.RetryPolicy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="retryPolicy" Type="Hyak.Common.TransientFaultHandling.RetryPolicy" />
      </Parameters>
      <Docs>
        <param name="retryPolicy">Retry policy to set.</param>
        <summary>
            Sets retry policy for the client.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public System.Net.Http.Headers.HttpHeaderValueCollection&lt;System.Net.Http.Headers.ProductInfoHeaderValue&gt; UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.Headers.HttpHeaderValueCollection`1&lt;class System.Net.Http.Headers.ProductInfoHeaderValue&gt; UserAgent" />
      <MemberSignature Language="DocId" Value="P:Hyak.Common.ServiceClient`1.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.Headers.HttpHeaderValueCollection&lt;System.Net.Http.Headers.ProductInfoHeaderValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the UserAgent collection which can be augmented with custom
            user agent strings.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithHandler">
      <MemberSignature Language="C#" Value="public virtual T WithHandler (System.Net.Http.DelegatingHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T WithHandler(class System.Net.Http.DelegatingHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Hyak.Common.ServiceClient`1.WithHandler(System.Net.Http.DelegatingHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Net.Http.DelegatingHandler" />
      </Parameters>
      <Docs>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithHandler">
      <MemberSignature Language="C#" Value="protected virtual T WithHandler (Hyak.Common.ServiceClient&lt;T&gt; newClient, System.Net.Http.DelegatingHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !T WithHandler(class Hyak.Common.ServiceClient`1&lt;!T&gt; newClient, class System.Net.Http.DelegatingHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Hyak.Common.ServiceClient`1.WithHandler(Hyak.Common.ServiceClient{`0},System.Net.Http.DelegatingHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newClient" Type="Hyak.Common.ServiceClient&lt;T&gt;" />
        <Parameter Name="handler" Type="System.Net.Http.DelegatingHandler" />
      </Parameters>
      <Docs>
        <param name="newClient">The new client that will extend.</param>
        <param name="handler">The handler to extend with.</param>
        <summary>
            Extend the ServiceClient with a new handler.
            </summary>
        <returns>The extended client.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithHandlers">
      <MemberSignature Language="C#" Value="public T WithHandlers (System.Collections.Generic.IEnumerable&lt;System.Net.Http.DelegatingHandler&gt; handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T WithHandlers(class System.Collections.Generic.IEnumerable`1&lt;class System.Net.Http.DelegatingHandler&gt; handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Hyak.Common.ServiceClient`1.WithHandlers(System.Collections.Generic.IEnumerable{System.Net.Http.DelegatingHandler})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handlers" Type="System.Collections.Generic.IEnumerable&lt;System.Net.Http.DelegatingHandler&gt;" />
      </Parameters>
      <Docs>
        <param name="handlers">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

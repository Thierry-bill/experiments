<Type Name="EdifactOneWayAgreement" FullName="Microsoft.Azure.Management.Logic.Models.EdifactOneWayAgreement">
  <TypeSignature Language="C#" Value="public class EdifactOneWayAgreement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EdifactOneWayAgreement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Logic.Models.EdifactOneWayAgreement" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Logic</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The Edifact one way agreement.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EdifactOneWayAgreement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Logic.Models.EdifactOneWayAgreement.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the EdifactOneWayAgreement class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EdifactOneWayAgreement (Microsoft.Azure.Management.Logic.Models.BusinessIdentity senderBusinessIdentity, Microsoft.Azure.Management.Logic.Models.BusinessIdentity receiverBusinessIdentity, Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings protocolSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Azure.Management.Logic.Models.BusinessIdentity senderBusinessIdentity, class Microsoft.Azure.Management.Logic.Models.BusinessIdentity receiverBusinessIdentity, class Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings protocolSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Logic.Models.EdifactOneWayAgreement.#ctor(Microsoft.Azure.Management.Logic.Models.BusinessIdentity,Microsoft.Azure.Management.Logic.Models.BusinessIdentity,Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="senderBusinessIdentity" Type="Microsoft.Azure.Management.Logic.Models.BusinessIdentity" />
        <Parameter Name="receiverBusinessIdentity" Type="Microsoft.Azure.Management.Logic.Models.BusinessIdentity" />
        <Parameter Name="protocolSettings" Type="Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings" />
      </Parameters>
      <Docs>
        <param name="senderBusinessIdentity">The sender business
            identity</param>
        <param name="receiverBusinessIdentity">The receiver business
            identity</param>
        <param name="protocolSettings">The EDIFACT protocol
            settings.</param>
        <summary>
            Initializes a new instance of the EdifactOneWayAgreement class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtocolSettings">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings ProtocolSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings ProtocolSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Logic.Models.EdifactOneWayAgreement.ProtocolSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="protocolSettings")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Logic.Models.EdifactProtocolSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the EDIFACT protocol settings.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiverBusinessIdentity">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Logic.Models.BusinessIdentity ReceiverBusinessIdentity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.Logic.Models.BusinessIdentity ReceiverBusinessIdentity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Logic.Models.EdifactOneWayAgreement.ReceiverBusinessIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="receiverBusinessIdentity")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Logic.Models.BusinessIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the receiver business identity
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SenderBusinessIdentity">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Logic.Models.BusinessIdentity SenderBusinessIdentity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.Logic.Models.BusinessIdentity SenderBusinessIdentity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Logic.Models.EdifactOneWayAgreement.SenderBusinessIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="senderBusinessIdentity")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Logic.Models.BusinessIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the sender business identity
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Logic.Models.EdifactOneWayAgreement.Validate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="X12EnvelopeOverride" FullName="Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride">
  <TypeSignature Language="C#" Value="public class X12EnvelopeOverride" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X12EnvelopeOverride extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Logic</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The X12 envelope override settings.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X12EnvelopeOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the X12EnvelopeOverride class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X12EnvelopeOverride (string targetNamespace, string protocolVersion, string messageId, string responsibleAgencyCode, string headerVersion, string senderApplicationId, string receiverApplicationId, Microsoft.Azure.Management.Logic.Models.X12DateFormat dateFormat, Microsoft.Azure.Management.Logic.Models.X12TimeFormat timeFormat, string functionalIdentifierCode = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string targetNamespace, string protocolVersion, string messageId, string responsibleAgencyCode, string headerVersion, string senderApplicationId, string receiverApplicationId, valuetype Microsoft.Azure.Management.Logic.Models.X12DateFormat dateFormat, valuetype Microsoft.Azure.Management.Logic.Models.X12TimeFormat timeFormat, string functionalIdentifierCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.X12DateFormat,Microsoft.Azure.Management.Logic.Models.X12TimeFormat,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetNamespace" Type="System.String" />
        <Parameter Name="protocolVersion" Type="System.String" />
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="responsibleAgencyCode" Type="System.String" />
        <Parameter Name="headerVersion" Type="System.String" />
        <Parameter Name="senderApplicationId" Type="System.String" />
        <Parameter Name="receiverApplicationId" Type="System.String" />
        <Parameter Name="dateFormat" Type="Microsoft.Azure.Management.Logic.Models.X12DateFormat" />
        <Parameter Name="timeFormat" Type="Microsoft.Azure.Management.Logic.Models.X12TimeFormat" />
        <Parameter Name="functionalIdentifierCode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetNamespace">The target namespace on which this
            envelope settings has to be applied.</param>
        <param name="protocolVersion">The protocol version on which this
            envelope settings has to be applied.</param>
        <param name="messageId">The message id on which this envelope
            settings has to be applied.</param>
        <param name="responsibleAgencyCode">The responsible agency
            code.</param>
        <param name="headerVersion">The header version.</param>
        <param name="senderApplicationId">The sender application
            id.</param>
        <param name="receiverApplicationId">The receiver application
            id.</param>
        <param name="dateFormat">The date format. Possible values include:
            'NotSpecified', 'CCYYMMDD', 'YYMMDD'</param>
        <param name="timeFormat">The time format. Possible values include:
            'NotSpecified', 'HHMM', 'HHMMSS', 'HHMMSSdd', 'HHMMSSd'</param>
        <param name="functionalIdentifierCode">The functional identifier
            code.</param>
        <summary>
            Initializes a new instance of the X12EnvelopeOverride class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DateFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Logic.Models.X12DateFormat DateFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Azure.Management.Logic.Models.X12DateFormat DateFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.DateFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="dateFormat")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Logic.Models.X12DateFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the date format. Possible values include:
            'NotSpecified', 'CCYYMMDD', 'YYMMDD'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FunctionalIdentifierCode">
      <MemberSignature Language="C#" Value="public string FunctionalIdentifierCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FunctionalIdentifierCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.FunctionalIdentifierCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="functionalIdentifierCode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the functional identifier code.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderVersion">
      <MemberSignature Language="C#" Value="public string HeaderVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.HeaderVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="headerVersion")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the header version.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageId">
      <MemberSignature Language="C#" Value="public string MessageId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.MessageId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="messageId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the message id on which this envelope settings has to
            be applied.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public string ProtocolVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.ProtocolVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="protocolVersion")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the protocol version on which this envelope settings
            has to be applied.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiverApplicationId">
      <MemberSignature Language="C#" Value="public string ReceiverApplicationId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReceiverApplicationId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.ReceiverApplicationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="receiverApplicationId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the receiver application id.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponsibleAgencyCode">
      <MemberSignature Language="C#" Value="public string ResponsibleAgencyCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponsibleAgencyCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.ResponsibleAgencyCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="responsibleAgencyCode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the responsible agency code.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SenderApplicationId">
      <MemberSignature Language="C#" Value="public string SenderApplicationId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SenderApplicationId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.SenderApplicationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="senderApplicationId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the sender application id.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNamespace">
      <MemberSignature Language="C#" Value="public string TargetNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetNamespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.TargetNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="targetNamespace")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the target namespace on which this envelope settings
            has to be applied.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Logic.Models.X12TimeFormat TimeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Azure.Management.Logic.Models.X12TimeFormat TimeFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.TimeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="timeFormat")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Logic.Models.X12TimeFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the time format. Possible values include:
            'NotSpecified', 'HHMM', 'HHMMSS', 'HHMMSSdd', 'HHMMSSd'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Logic.Models.X12EnvelopeOverride.Validate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>

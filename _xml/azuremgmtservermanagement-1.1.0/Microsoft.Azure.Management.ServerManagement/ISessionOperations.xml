<Type Name="ISessionOperations" FullName="Microsoft.Azure.Management.ServerManagement.ISessionOperations">
  <TypeSignature Language="C#" Value="public interface ISessionOperations" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISessionOperations" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ServerManagement.ISessionOperations" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ServerManagement</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            SessionOperations operations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginCreateWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Management.ServerManagement.Models.SessionResource&gt;&gt; BeginCreateWithHttpMessagesAsync (string resourceGroupName, string nodeName, string session, string userName = null, string password = null, Nullable&lt;Microsoft.Azure.Management.ServerManagement.Models.RetentionPeriod&gt; retentionPeriod = null, Nullable&lt;Microsoft.Azure.Management.ServerManagement.Models.CredentialDataFormat&gt; credentialDataFormat = null, string encryptionCertificateThumbprint = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse`1&lt;class Microsoft.Azure.Management.ServerManagement.Models.SessionResource&gt;&gt; BeginCreateWithHttpMessagesAsync(string resourceGroupName, string nodeName, string session, string userName, string password, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Management.ServerManagement.Models.RetentionPeriod&gt; retentionPeriod, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Management.ServerManagement.Models.CredentialDataFormat&gt; credentialDataFormat, string encryptionCertificateThumbprint, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ServerManagement.ISessionOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.ServerManagement.Models.RetentionPeriod},System.Nullable{Microsoft.Azure.Management.ServerManagement.Models.CredentialDataFormat},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Management.ServerManagement.Models.SessionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="session" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="retentionPeriod" Type="System.Nullable&lt;Microsoft.Azure.Management.ServerManagement.Models.RetentionPeriod&gt;" />
        <Parameter Name="credentialDataFormat" Type="System.Nullable&lt;Microsoft.Azure.Management.ServerManagement.Models.CredentialDataFormat&gt;" />
        <Parameter Name="encryptionCertificateThumbprint" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">
            The resource group name uniquely identifies the resource group
            within the user subscriptionId.
            </param>
        <param name="nodeName">
            The node name (256 characters maximum).
            </param>
        <param name="session">
            The sessionId from the user
            </param>
        <param name="userName">
            encrypted User name to be used to connect to node
            </param>
        <param name="password">
            encrypted Password associated with user name
            </param>
        <param name="retentionPeriod">
            session retention period. Possible values include: 'Session',
            'Persistent'
            </param>
        <param name="credentialDataFormat">
            credential data format. Possible values include: 'RsaEncrypted'
            </param>
        <param name="encryptionCertificateThumbprint">
            encryption certificate thumbprint
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Creates a session for a node
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Management.ServerManagement.Models.ErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Management.ServerManagement.Models.SessionResource&gt;&gt; CreateWithHttpMessagesAsync (string resourceGroupName, string nodeName, string session, string userName = null, string password = null, Nullable&lt;Microsoft.Azure.Management.ServerManagement.Models.RetentionPeriod&gt; retentionPeriod = null, Nullable&lt;Microsoft.Azure.Management.ServerManagement.Models.CredentialDataFormat&gt; credentialDataFormat = null, string encryptionCertificateThumbprint = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse`1&lt;class Microsoft.Azure.Management.ServerManagement.Models.SessionResource&gt;&gt; CreateWithHttpMessagesAsync(string resourceGroupName, string nodeName, string session, string userName, string password, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Management.ServerManagement.Models.RetentionPeriod&gt; retentionPeriod, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Management.ServerManagement.Models.CredentialDataFormat&gt; credentialDataFormat, string encryptionCertificateThumbprint, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ServerManagement.ISessionOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.ServerManagement.Models.RetentionPeriod},System.Nullable{Microsoft.Azure.Management.ServerManagement.Models.CredentialDataFormat},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Management.ServerManagement.Models.SessionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="session" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="retentionPeriod" Type="System.Nullable&lt;Microsoft.Azure.Management.ServerManagement.Models.RetentionPeriod&gt;" />
        <Parameter Name="credentialDataFormat" Type="System.Nullable&lt;Microsoft.Azure.Management.ServerManagement.Models.CredentialDataFormat&gt;" />
        <Parameter Name="encryptionCertificateThumbprint" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">
            The resource group name uniquely identifies the resource group
            within the user subscriptionId.
            </param>
        <param name="nodeName">
            The node name (256 characters maximum).
            </param>
        <param name="session">
            The sessionId from the user
            </param>
        <param name="userName">
            encrypted User name to be used to connect to node
            </param>
        <param name="password">
            encrypted Password associated with user name
            </param>
        <param name="retentionPeriod">
            session retention period. Possible values include: 'Session',
            'Persistent'
            </param>
        <param name="credentialDataFormat">
            credential data format. Possible values include: 'RsaEncrypted'
            </param>
        <param name="encryptionCertificateThumbprint">
            encryption certificate thumbprint
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Creates a session for a node
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Management.ServerManagement.Models.ErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&gt; DeleteWithHttpMessagesAsync (string resourceGroupName, string nodeName, string session, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse&gt; DeleteWithHttpMessagesAsync(string resourceGroupName, string nodeName, string session, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ServerManagement.ISessionOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="session" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">
            The resource group name uniquely identifies the resource group
            within the user subscriptionId.
            </param>
        <param name="nodeName">
            The node name (256 characters maximum).
            </param>
        <param name="session">
            The sessionId from the user
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Deletes a session for a node
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Management.ServerManagement.Models.ErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Management.ServerManagement.Models.SessionResource&gt;&gt; GetWithHttpMessagesAsync (string resourceGroupName, string nodeName, string session, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse`1&lt;class Microsoft.Azure.Management.ServerManagement.Models.SessionResource&gt;&gt; GetWithHttpMessagesAsync(string resourceGroupName, string nodeName, string session, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ServerManagement.ISessionOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Management.ServerManagement.Models.SessionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="nodeName" Type="System.String" />
        <Parameter Name="session" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">
            The resource group name uniquely identifies the resource group
            within the user subscriptionId.
            </param>
        <param name="nodeName">
            The node name (256 characters maximum).
            </param>
        <param name="session">
            The sessionId from the user
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Gets a session for a node
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Management.ServerManagement.Models.ErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>

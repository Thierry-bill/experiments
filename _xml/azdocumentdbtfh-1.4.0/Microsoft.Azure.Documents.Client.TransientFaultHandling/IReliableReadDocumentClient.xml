<Type Name="IReliableReadDocumentClient" FullName="Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient">
  <TypeSignature Language="C#" Value="public interface IReliableReadDocumentClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReliableReadDocumentClient implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Documents.Client.TransientFaultHandling</AssemblyName>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Provides reliable read access to DocumentDB service.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateAttachmentQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Attachment&gt; CreateAttachmentQuery (string documentLink, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;class Microsoft.Azure.Documents.Attachment&gt; CreateAttachmentQuery(string documentLink, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateAttachmentQuery(System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Attachment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentLink" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentLink">The link to the parent document</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates create a query for attachments. It returns an <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query with the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttachmentQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Attachment&gt; CreateAttachmentQuery (Uri documentUri, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;class Microsoft.Azure.Documents.Attachment&gt; CreateAttachmentQuery(class System.Uri documentUri, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateAttachmentQuery(System.Uri,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Attachment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentUri" Type="System.Uri" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentUri">The URI of the parent document.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for attachments.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttachmentQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateAttachmentQuery (string documentLink, Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateAttachmentQuery(string documentLink, class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateAttachmentQuery(System.String,Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentLink" Type="System.String" />
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentLink">The link to the parent document resource.</param>
        <param name="querySpec">The SqlQuerySpec instance containing the SQL expression.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
             Overloaded. This method creates a query for attachments by using a SQL statement with parameterized values. It returns an <see cref="T:System.Linq.IQueryable`1" />.
             For more information on preparing SQL statements with parameterized values, please see <see cref="T:Microsoft.Azure.Documents.SqlQuerySpec" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query with the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttachmentQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateAttachmentQuery (string documentLink, string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateAttachmentQuery(string documentLink, string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateAttachmentQuery(System.String,System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentLink" Type="System.String" />
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentLink">The link to the parent document.</param>
        <param name="sqlExpression">The SQL statement.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates a query for attachments by using a SQL statement. It returns an <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query with the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttachmentQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateAttachmentQuery (Uri documentUri, Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateAttachmentQuery(class System.Uri documentUri, class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateAttachmentQuery(System.Uri,Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentUri" Type="System.Uri" />
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentUri">The URI of the parent document.</param>
        <param name="querySpec">The sql query.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for attachments.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttachmentQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateAttachmentQuery (Uri documentUri, string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateAttachmentQuery(class System.Uri documentUri, string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateAttachmentQuery(System.Uri,System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentUri" Type="System.Uri" />
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentUri">The URI of the parent document.</param>
        <param name="sqlExpression">The sql query.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for attachments.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttachmentQuery&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;T&gt; CreateAttachmentQuery&lt;T&gt; (string documentLink, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;!!T&gt; CreateAttachmentQuery&lt;T&gt;(string documentLink, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateAttachmentQuery``1(System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="documentLink" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of object to query.</typeparam>
        <param name="documentLink">The link of the parent document.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates a query for attachments.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttachmentQuery&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;T&gt; CreateAttachmentQuery&lt;T&gt; (Uri documentUri, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;!!T&gt; CreateAttachmentQuery&lt;T&gt;(class System.Uri documentUri, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateAttachmentQuery``1(System.Uri,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="documentUri" Type="System.Uri" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of object to query.</typeparam>
        <param name="documentUri">The URI of the parent document.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for attachments.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttachmentQuery&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;T&gt; CreateAttachmentQuery&lt;T&gt; (string documentLink, Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;!!T&gt; CreateAttachmentQuery&lt;T&gt;(string documentLink, class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateAttachmentQuery``1(System.String,Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="documentLink" Type="System.String" />
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="documentLink">The link of the parent document.</param>
        <param name="querySpec">The SqlQuerySpec instance containing the SQL expression.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
             Overloaded. This method creates a query for attachments by using a SQL statement with parameterized values.
             For more information on preparing SQL statements with parameterized values, please see <see cref="T:Microsoft.Azure.Documents.SqlQuerySpec" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query with the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttachmentQuery&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;T&gt; CreateAttachmentQuery&lt;T&gt; (string documentLink, string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;!!T&gt; CreateAttachmentQuery&lt;T&gt;(string documentLink, string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateAttachmentQuery``1(System.String,System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="documentLink" Type="System.String" />
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="documentLink">The link of the parent document.</param>
        <param name="sqlExpression">The SQL statement.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates a query for attachments by using a SQL statement. 
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query with the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttachmentQuery&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;T&gt; CreateAttachmentQuery&lt;T&gt; (Uri documentUri, Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;!!T&gt; CreateAttachmentQuery&lt;T&gt;(class System.Uri documentUri, class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateAttachmentQuery``1(System.Uri,Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="documentUri" Type="System.Uri" />
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="documentUri">The URI of the parent document.</param>
        <param name="querySpec">The sql query.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for attachments.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttachmentQuery&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;T&gt; CreateAttachmentQuery&lt;T&gt; (Uri documentUri, string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;!!T&gt; CreateAttachmentQuery&lt;T&gt;(class System.Uri documentUri, string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateAttachmentQuery``1(System.Uri,System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="documentUri" Type="System.Uri" />
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="documentUri">The URI of the parent document.</param>
        <param name="sqlExpression">The sql query.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for attachments.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConflictQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Conflict&gt; CreateConflictQuery (string collectionLink, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;class Microsoft.Azure.Documents.Conflict&gt; CreateConflictQuery(string collectionLink, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateConflictQuery(System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Conflict&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link to the parent collection resource.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates create a query for conflicts under a collection. It returns an <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query with the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConflictQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Conflict&gt; CreateConflictQuery (Uri conflictsUri, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;class Microsoft.Azure.Documents.Conflict&gt; CreateConflictQuery(class System.Uri conflictsUri, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateConflictQuery(System.Uri,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Conflict&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conflictsUri" Type="System.Uri" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="conflictsUri">The URI to the conflicts.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for conflicts.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConflictQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateConflictQuery (string collectionLink, Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateConflictQuery(string collectionLink, class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateConflictQuery(System.String,Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link to the parent collection resource.</param>
        <param name="querySpec">The SqlQuerySpec instance containing the SQL expression.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates create a query for conflicts under a collection with parameterized values.  It returns an IQueryable{dynamic}.
             For more information on preparing SQL statements with parameterized values, please see <see cref="T:Microsoft.Azure.Documents.SqlQuerySpec" />.
            </summary>
        <returns>An IQueryable{dynamic} that can evaluate the query with the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConflictQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateConflictQuery (string collectionLink, string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateConflictQuery(string collectionLink, string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateConflictQuery(System.String,System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link to the parent collection resource.</param>
        <param name="sqlExpression">The SQL statement.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates create a query for conflicts under a collection. It returns an <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query with the the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConflictQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateConflictQuery (Uri documentCollectionUri, Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateConflictQuery(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateConflictQuery(System.Uri,Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the parent document collection.</param>
        <param name="querySpec">The sql query.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for conflicts.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConflictQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateConflictQuery (Uri documentCollectionUri, string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateConflictQuery(class System.Uri documentCollectionUri, string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateConflictQuery(System.Uri,System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the parent document collection.</param>
        <param name="sqlExpression">The sql query.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for conflicts.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabaseQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Database&gt; CreateDatabaseQuery (Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;class Microsoft.Azure.Documents.Database&gt; CreateDatabaseQuery(class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateDatabaseQuery(Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Database&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates a query for database resources under an account. It returns an <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query with the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabaseQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateDatabaseQuery (Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateDatabaseQuery(class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateDatabaseQuery(Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="querySpec">The SqlQuerySpec instance containing the SQL expression.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates a query for database resources under an account by using a SQL statement with parameterized values. It returns an <see cref="T:System.Linq.IQueryable`1" />.
             For more information on preparing SQL statements with parameterized values, please see <see cref="T:Microsoft.Azure.Documents.SqlQuerySpec" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query with the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabaseQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateDatabaseQuery (string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateDatabaseQuery(string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateDatabaseQuery(System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="sqlExpression">The SQL statement.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates a query for database resources under an account by using a SQL statement. It returns an <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query with the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentCollectionQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;Microsoft.Azure.Documents.DocumentCollection&gt; CreateDocumentCollectionQuery (string databaseLink, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;class Microsoft.Azure.Documents.DocumentCollection&gt; CreateDocumentCollectionQuery(string databaseLink, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateDocumentCollectionQuery(System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;Microsoft.Azure.Documents.DocumentCollection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseLink" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="databaseLink">The link to the parent database resource.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates create a query for collections under a database. It returns an <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query with the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentCollectionQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;Microsoft.Azure.Documents.DocumentCollection&gt; CreateDocumentCollectionQuery (Uri databaseUri, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;class Microsoft.Azure.Documents.DocumentCollection&gt; CreateDocumentCollectionQuery(class System.Uri databaseUri, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateDocumentCollectionQuery(System.Uri,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;Microsoft.Azure.Documents.DocumentCollection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseUri" Type="System.Uri" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="databaseUri">The URI of the parent database.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for document collections.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentCollectionQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateDocumentCollectionQuery (string databaseLink, Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateDocumentCollectionQuery(string databaseLink, class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateDocumentCollectionQuery(System.String,Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseLink" Type="System.String" />
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="databaseLink">The link to the parent database resource.</param>
        <param name="querySpec">The SqlQuerySpec instance containing the SQL expression.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates create a query for collections under a database using a SQL statement with parameterized values. It returns an <see cref="T:System.Linq.IQueryable`1" />.
             For more information on preparing SQL statements with parameterized values, please see <see cref="T:Microsoft.Azure.Documents.SqlQuerySpec" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query with the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentCollectionQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateDocumentCollectionQuery (string databaseLink, string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateDocumentCollectionQuery(string databaseLink, string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateDocumentCollectionQuery(System.String,System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseLink" Type="System.String" />
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="databaseLink">The link to the parent database resource.</param>
        <param name="sqlExpression">The SQL statement.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates create a query for collections under a database using a SQL statement. It returns an <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query with the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentCollectionQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateDocumentCollectionQuery (Uri databaseUri, Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateDocumentCollectionQuery(class System.Uri databaseUri, class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateDocumentCollectionQuery(System.Uri,Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseUri" Type="System.Uri" />
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="databaseUri">The URI to the database.</param>
        <param name="querySpec">The sql query.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for document collections.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentCollectionQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateDocumentCollectionQuery (Uri databaseUri, string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateDocumentCollectionQuery(class System.Uri databaseUri, string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateDocumentCollectionQuery(System.Uri,System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseUri" Type="System.Uri" />
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="databaseUri">The URI to the database.</param>
        <param name="sqlExpression">The sql query.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for document collections.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Document&gt; CreateDocumentQuery (string collectionLink, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;class Microsoft.Azure.Documents.Document&gt; CreateDocumentQuery(string collectionLink, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateDocumentQuery(System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Document&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link to the parent document collection.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates a query for documents under a collection. It returns <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Document&gt; CreateDocumentQuery (Uri documentCollectionUri, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;class Microsoft.Azure.Documents.Document&gt; CreateDocumentQuery(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateDocumentQuery(System.Uri,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Document&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the document collection.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for documents.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateDocumentQuery (string collectionLink, Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateDocumentQuery(string collectionLink, class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateDocumentQuery(System.String,Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link to the parent document collection.</param>
        <param name="querySpec">The SqlQuerySpec instance containing the SQL expression.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates a query for documents under a collection using a SQL statement with parameterized values.  It returns an IQueryable{dynamic}.
            For more information on preparing SQL statements with parameterized values, please see <see cref="T:Microsoft.Azure.Documents.SqlQuerySpec" />.
            </summary>
        <returns>an IQueryable{dynamic&gt; that can evaluate the query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateDocumentQuery (string collectionLink, string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateDocumentQuery(string collectionLink, string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateDocumentQuery(System.String,System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link to the parent document collection.</param>
        <param name="sqlExpression">The SQL statement.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates a query for documents under a collection using a SQL statement. It returns an IQueryable{dynamic}.
            </summary>
        <returns>an IQueryable{dynamic&gt; that can evaluate the query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateDocumentQuery (Uri documentCollectionUri, Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateDocumentQuery(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateDocumentQuery(System.Uri,Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the document collection.</param>
        <param name="querySpec">The sql query.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for documents.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateDocumentQuery (Uri documentCollectionUri, string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateDocumentQuery(class System.Uri documentCollectionUri, string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateDocumentQuery(System.Uri,System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the document collection.</param>
        <param name="sqlExpression">The sql query.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for documents.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentQuery&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;T&gt; CreateDocumentQuery&lt;T&gt; (string collectionLink, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;!!T&gt; CreateDocumentQuery&lt;T&gt;(string collectionLink, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateDocumentQuery``1(System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of object to query.</typeparam>
        <param name="collectionLink">The link to the parent collection resource.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates a query for documents under a collection.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentQuery&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;T&gt; CreateDocumentQuery&lt;T&gt; (Uri documentCollectionUri, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;!!T&gt; CreateDocumentQuery&lt;T&gt;(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateDocumentQuery``1(System.Uri,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of object to query.</typeparam>
        <param name="documentCollectionUri">The URI of the parent document collection.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for documents.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentQuery&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;T&gt; CreateDocumentQuery&lt;T&gt; (string collectionLink, Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;!!T&gt; CreateDocumentQuery&lt;T&gt;(string collectionLink, class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateDocumentQuery``1(System.String,Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of object to query.</typeparam>
        <param name="collectionLink">The link to the parent document collection.</param>
        <param name="querySpec">The SqlQuerySpec instance containing the SQL expression.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates a query for documents under a collection using a SQL statement with parameterized values.  It returns an IQueryable{T}.
             For more information on preparing SQL statements with parameterized values, please see <see cref="T:Microsoft.Azure.Documents.SqlQuerySpec" />.
            </summary>
        <returns>An IQueryable{T} that can evaluate the query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentQuery&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;T&gt; CreateDocumentQuery&lt;T&gt; (string collectionLink, string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;!!T&gt; CreateDocumentQuery&lt;T&gt;(string collectionLink, string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateDocumentQuery``1(System.String,System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of object to query.</typeparam>
        <param name="collectionLink">The link to the parent collection.</param>
        <param name="sqlExpression">The SQL statement.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates a query for documents under a collection using a SQL statement. It returns an IQueryable{T}.
            </summary>
        <returns>An IQueryable{T} that can evaluate the query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentQuery&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;T&gt; CreateDocumentQuery&lt;T&gt; (Uri documentCollectionUri, Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;!!T&gt; CreateDocumentQuery&lt;T&gt;(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateDocumentQuery``1(System.Uri,Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of object to query.</typeparam>
        <param name="documentCollectionUri">The URI of the document collection.</param>
        <param name="querySpec">The sql query.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for documents.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentQuery&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;T&gt; CreateDocumentQuery&lt;T&gt; (Uri documentCollectionUri, string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;!!T&gt; CreateDocumentQuery&lt;T&gt;(class System.Uri documentCollectionUri, string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateDocumentQuery``1(System.Uri,System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of object to query.</typeparam>
        <param name="documentCollectionUri">The URI of the document collection.</param>
        <param name="sqlExpression">The sql query.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for documents.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOfferQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Offer&gt; CreateOfferQuery (Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;class Microsoft.Azure.Documents.Offer&gt; CreateOfferQuery(class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateOfferQuery(Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Offer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates a query for offers under an account. It returns <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOfferQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateOfferQuery (Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateOfferQuery(class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateOfferQuery(Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="querySpec">The <see cref="T:Microsoft.Azure.Documents.SqlQuerySpec" /> instance containing the SQL expression.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates a query for offers under an account using a SQL statement. It returns <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOfferQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateOfferQuery (string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateOfferQuery(string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateOfferQuery(System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="sqlExpression">The SQL statement.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates a query for offers under an account using a SQL statement. It returns <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermissionQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Permission&gt; CreatePermissionQuery (string permissionsLink, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;class Microsoft.Azure.Documents.Permission&gt; CreatePermissionQuery(string permissionsLink, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreatePermissionQuery(System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Permission&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissionsLink" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="permissionsLink">The path link for the persmissions under a user, e.g. dbs/db_rid/users/user_rid/permissions/.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates a query for permissions under a user. It returns <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermissionQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Permission&gt; CreatePermissionQuery (Uri userUri, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;class Microsoft.Azure.Documents.Permission&gt; CreatePermissionQuery(class System.Uri userUri, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreatePermissionQuery(System.Uri,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Permission&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userUri" Type="System.Uri" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="userUri">The URI of the parent user.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for permissions.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermissionQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreatePermissionQuery (string permissionsLink, Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreatePermissionQuery(string permissionsLink, class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreatePermissionQuery(System.String,Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissionsLink" Type="System.String" />
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="permissionsLink">The path link for the persmissions under a user, e.g. dbs/db_rid/users/user_rid/permissions/.</param>
        <param name="querySpec">The SqlQuerySpec instance containing the SQL expression.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates a query for permissions under a user using a SQL statement with parameterized values.  It returns an IQueryable{dynamic}.
            For more information on preparing SQL statements with parameterized values, please see <see cref="T:Microsoft.Azure.Documents.SqlQuerySpec" />.
            </summary>
        <returns>an IQueryable{dynamic} that can evaluate the query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermissionQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreatePermissionQuery (string permissionsLink, string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreatePermissionQuery(string permissionsLink, string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreatePermissionQuery(System.String,System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissionsLink" Type="System.String" />
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="permissionsLink">The path link for the persmissions under a user, e.g. dbs/db_rid/users/user_rid/permissions/.</param>
        <param name="sqlExpression">The SQL statement.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates a query for permissions under a user using a SQL statement.  It returns IQueryable{dynamic}.
            </summary>
        <returns>an IQueryable{dynamic} that can evaluate the query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermissionQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreatePermissionQuery (Uri userUri, Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreatePermissionQuery(class System.Uri userUri, class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreatePermissionQuery(System.Uri,Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userUri" Type="System.Uri" />
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="userUri">The URI of the parent user.</param>
        <param name="querySpec">The sql query.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for permissions.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermissionQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreatePermissionQuery (Uri userUri, string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreatePermissionQuery(class System.Uri userUri, string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreatePermissionQuery(System.Uri,System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userUri" Type="System.Uri" />
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="userUri">The URI of the parent user.</param>
        <param name="sqlExpression">The sql query.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for permissions.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStoredProcedureQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;Microsoft.Azure.Documents.StoredProcedure&gt; CreateStoredProcedureQuery (string collectionLink, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;class Microsoft.Azure.Documents.StoredProcedure&gt; CreateStoredProcedureQuery(string collectionLink, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateStoredProcedureQuery(System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;Microsoft.Azure.Documents.StoredProcedure&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link to the parent collection resource.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates create a query for stored procedures under a collection. It returns an <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query with the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStoredProcedureQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;Microsoft.Azure.Documents.StoredProcedure&gt; CreateStoredProcedureQuery (Uri documentCollectionUri, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;class Microsoft.Azure.Documents.StoredProcedure&gt; CreateStoredProcedureQuery(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateStoredProcedureQuery(System.Uri,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;Microsoft.Azure.Documents.StoredProcedure&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the parent document collection.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create query for stored procedures.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStoredProcedureQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateStoredProcedureQuery (string collectionLink, Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateStoredProcedureQuery(string collectionLink, class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateStoredProcedureQuery(System.String,Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link to the parent collection resource.</param>
        <param name="querySpec">The SqlQuerySpec instance containing the SQL expression.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates create a query for stored procedures under a collection using a SQL statement using a SQL statement with parameterized values. It returns an <see cref="T:System.Linq.IQueryable`1" />.
             For more information on preparing SQL statements with parameterized values, please see <see cref="T:Microsoft.Azure.Documents.SqlQuerySpec" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query with the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStoredProcedureQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateStoredProcedureQuery (string collectionLink, string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateStoredProcedureQuery(string collectionLink, string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateStoredProcedureQuery(System.String,System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link to the parent collection resource.</param>
        <param name="sqlExpression">The SQL statement.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates create a query for stored procedures under a collection using a SQL statement. It returns an <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query with the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStoredProcedureQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateStoredProcedureQuery (Uri documentCollectionUri, Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateStoredProcedureQuery(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateStoredProcedureQuery(System.Uri,Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the parent document collection.</param>
        <param name="querySpec">The sql query.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create query for stored procedures.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStoredProcedureQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateStoredProcedureQuery (Uri documentCollectionUri, string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateStoredProcedureQuery(class System.Uri documentCollectionUri, string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateStoredProcedureQuery(System.Uri,System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the parent document collection.</param>
        <param name="sqlExpression">The sql query.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create query for stored procedures.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTriggerQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Trigger&gt; CreateTriggerQuery (string collectionLink, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;class Microsoft.Azure.Documents.Trigger&gt; CreateTriggerQuery(string collectionLink, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateTriggerQuery(System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Trigger&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link to the parent collection resource.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates create a query for triggers under a collection. It returns an <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query with the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTriggerQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Trigger&gt; CreateTriggerQuery (Uri documentCollectionUri, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;class Microsoft.Azure.Documents.Trigger&gt; CreateTriggerQuery(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateTriggerQuery(System.Uri,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;Microsoft.Azure.Documents.Trigger&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the parent document collection.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create query for triggers.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTriggerQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateTriggerQuery (string collectionLink, Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateTriggerQuery(string collectionLink, class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateTriggerQuery(System.String,Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link to the parent collection resource.</param>
        <param name="querySpec">The SqlQuerySpec instance containing the SQL expression.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates create a query for triggers under a collection using a SQL statement with parameterized values. It returns an <see cref="T:System.Linq.IQueryable`1" />.
             For more information on preparing SQL statements with parameterized values, please see <see cref="T:Microsoft.Azure.Documents.SqlQuerySpec" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query with the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTriggerQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateTriggerQuery (string collectionLink, string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateTriggerQuery(string collectionLink, string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateTriggerQuery(System.String,System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link to the parent collection resource.</param>
        <param name="sqlExpression">The SQL statement.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates create a query for triggers under a collection. It returns an <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query with the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTriggerQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateTriggerQuery (Uri documentCollectionUri, Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateTriggerQuery(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateTriggerQuery(System.Uri,Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the parent document collection.</param>
        <param name="querySpec">The sql query.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create query for triggers.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTriggerQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateTriggerQuery (Uri documentCollectionUri, string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateTriggerQuery(class System.Uri documentCollectionUri, string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateTriggerQuery(System.Uri,System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the parent document collection.</param>
        <param name="sqlExpression">The sql query.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create query for triggers.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserDefinedFunctionQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt; CreateUserDefinedFunctionQuery (string collectionLink, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;class Microsoft.Azure.Documents.UserDefinedFunction&gt; CreateUserDefinedFunctionQuery(string collectionLink, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateUserDefinedFunctionQuery(System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link to the parent collection resource.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates create a query for udfs under a collection. It returns an <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query with the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserDefinedFunctionQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt; CreateUserDefinedFunctionQuery (Uri documentCollectionUri, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;class Microsoft.Azure.Documents.UserDefinedFunction&gt; CreateUserDefinedFunctionQuery(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateUserDefinedFunctionQuery(System.Uri,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the parent document collection.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for user-defined functions.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserDefinedFunctionQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateUserDefinedFunctionQuery (string collectionLink, Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateUserDefinedFunctionQuery(string collectionLink, class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateUserDefinedFunctionQuery(System.String,Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link to the parent collection resource.</param>
        <param name="querySpec">The SqlQuerySpec instance containing the SQL expression.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates create a query for udfs under a collection with parameterized values. It returns an <see cref="T:System.Linq.IQueryable`1" />.
            For more information on preparing SQL statements with parameterized values, please see <see cref="T:Microsoft.Azure.Documents.SqlQuerySpec" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query with the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserDefinedFunctionQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateUserDefinedFunctionQuery (string collectionLink, string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateUserDefinedFunctionQuery(string collectionLink, string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateUserDefinedFunctionQuery(System.String,System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link to the parent collection resource.</param>
        <param name="sqlExpression">The SQL statement.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates create a query for udfs under a collection using a SQL statement. It returns an <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query with the provided SQL statement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserDefinedFunctionQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateUserDefinedFunctionQuery (Uri documentCollectionUri, Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateUserDefinedFunctionQuery(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateUserDefinedFunctionQuery(System.Uri,Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the parent document collection.</param>
        <param name="querySpec">The sql query.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for user-defined functions.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserDefinedFunctionQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateUserDefinedFunctionQuery (Uri documentCollectionUri, string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateUserDefinedFunctionQuery(class System.Uri documentCollectionUri, string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateUserDefinedFunctionQuery(System.Uri,System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the parent document collection.</param>
        <param name="sqlExpression">The sql query.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for user-defined functions.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;Microsoft.Azure.Documents.User&gt; CreateUserQuery (string usersLink, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;class Microsoft.Azure.Documents.User&gt; CreateUserQuery(string usersLink, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateUserQuery(System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;Microsoft.Azure.Documents.User&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usersLink" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="usersLink">The path link for the users under a database, e.g. dbs/db_rid/users/.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates a query for users under a database. It returns <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;Microsoft.Azure.Documents.User&gt; CreateUserQuery (Uri documentCollectionUri, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;class Microsoft.Azure.Documents.User&gt; CreateUserQuery(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateUserQuery(System.Uri,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;Microsoft.Azure.Documents.User&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the parent document collection.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for users.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateUserQuery (string usersLink, Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateUserQuery(string usersLink, class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateUserQuery(System.String,Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usersLink" Type="System.String" />
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="usersLink">The path link for the users under a database, e.g. dbs/db_rid/users/.</param>
        <param name="querySpec">The SqlQuerySpec instance containing the SQL expression.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates a query for users under a database using a SQL statement with parameterized values. It returns an <see cref="T:System.Linq.IQueryable`1" />.
            For more information on preparing SQL statements with parameterized values, please see <see cref="T:Microsoft.Azure.Documents.SqlQuerySpec" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateUserQuery (string usersLink, string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateUserQuery(string usersLink, string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateUserQuery(System.String,System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usersLink" Type="System.String" />
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="usersLink">The path link for the users under a database, e.g. dbs/db_rid/users/.</param>
        <param name="sqlExpression">The SQL statement.</param>
        <param name="feedOptions">The options for processing the query result feed. For details, see <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /></param>
        <summary>
            Overloaded. This method creates a query for users under a database. It returns <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
        <returns>An <see cref="T:System.Linq.IQueryable`1" /> that can evaluate the query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateUserQuery (Uri documentCollectionUri, Microsoft.Azure.Documents.SqlQuerySpec querySpec, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateUserQuery(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.SqlQuerySpec querySpec, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateUserQuery(System.Uri,Microsoft.Azure.Documents.SqlQuerySpec,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="querySpec" Type="Microsoft.Azure.Documents.SqlQuerySpec" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the parent document collection.</param>
        <param name="querySpec">The sql query.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for users.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;dynamic&gt; CreateUserQuery (Uri documentCollectionUri, string sqlExpression, Microsoft.Azure.Documents.Client.FeedOptions feedOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;object&gt; CreateUserQuery(class System.Uri documentCollectionUri, string sqlExpression, class Microsoft.Azure.Documents.Client.FeedOptions feedOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.CreateUserQuery(System.Uri,System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="sqlExpression" Type="System.String" />
        <Parameter Name="feedOptions" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the parent document collection.</param>
        <param name="sqlExpression">The sql query.</param>
        <param name="feedOptions">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for processing the query results feed.</param>
        <summary>
            Method to create a query for users.
            </summary>
        <returns>The query result set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReadAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;T&gt; ExecuteReadAsync&lt;T&gt; (Func&lt;Microsoft.Azure.Documents.Client.DocumentClient,System.Threading.Tasks.Task&lt;T&gt;&gt; idempotentAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!!T&gt; ExecuteReadAsync&lt;T&gt;(class System.Func`2&lt;class Microsoft.Azure.Documents.Client.DocumentClient, class System.Threading.Tasks.Task`1&lt;!!T&gt;&gt; idempotentAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ExecuteReadAsync``1(System.Func{Microsoft.Azure.Documents.Client.DocumentClient,System.Threading.Tasks.Task{``0}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="idempotentAction" Type="System.Func&lt;Microsoft.Azure.Documents.Client.DocumentClient,System.Threading.Tasks.Task&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">Return type of the read operation.</typeparam>
        <param name="idempotentAction">Read operation to execute.</param>
        <summary>
            Executes any idempotent read operation with retry on transient failures.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents asynchronous read operation.</returns>
        <remarks>
            This method is useful when underlying <see cref="T:Microsoft.Azure.Documents.Client.DocumentClient" /> has a read method
            that is not represented by any member of this interface.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseAccountAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.DatabaseAccount&gt; GetDatabaseAccountAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.DatabaseAccount&gt; GetDatabaseAccountAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.GetDatabaseAccountAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate", Justification="Same interface as original DocumentClient has should be preserved for ease of use.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.DatabaseAccount&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Read the <see cref="T:Microsoft.Azure.Documents.DatabaseAccount" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="T:Microsoft.Azure.Documents.DatabaseAccount" /> wrapped in a <see cref="T:System.Threading.Tasks.Task" /> object.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task OpenAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OpenAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.OpenAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Opens the connection to validate that the client initialization is successful.
            </summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task" /> that represents an asynchronous operation that opens the connection.
            </returns>
        <remarks>
            This method is recommended to be called, after the constructor, but before calling any other methods on the client instance.
            If there are any initialization exceptions, this method will throw them (set on the task). 
            Alternately, calling any API will throw initialization exception at the first call.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAttachmentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt; ReadAttachmentAsync (string attachmentLink, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Attachment&gt;&gt; ReadAttachmentAsync(string attachmentLink, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadAttachmentAsync(System.String,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachmentLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="attachmentLink">The link to the attachment to be read.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Reads an <see cref="T:Microsoft.Azure.Documents.Attachment" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Attachment" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAttachmentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt; ReadAttachmentAsync (Uri attachmentUri, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Attachment&gt;&gt; ReadAttachmentAsync(class System.Uri attachmentUri, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadAttachmentAsync(System.Uri,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachmentUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="attachmentUri">A URI to the Attachment resource to be read.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Reads an <see cref="T:Microsoft.Azure.Documents.Attachment" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps an <see cref="T:Microsoft.Azure.Documents.Attachment" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAttachmentFeedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt; ReadAttachmentFeedAsync (string documentLink, Microsoft.Azure.Documents.Client.FeedOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.FeedResponse`1&lt;class Microsoft.Azure.Documents.Attachment&gt;&gt; ReadAttachmentFeedAsync(string documentLink, class Microsoft.Azure.Documents.Client.FeedOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadAttachmentFeedAsync(System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentLink">The link of the parent document resource.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" />for this request.</param>
        <summary>
            Reads the feed (sequence) of <see cref="T:Microsoft.Azure.Documents.Attachment" /> for a document as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Attachment" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAttachmentFeedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt; ReadAttachmentFeedAsync (Uri documentUri, Microsoft.Azure.Documents.Client.FeedOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.FeedResponse`1&lt;class Microsoft.Azure.Documents.Attachment&gt;&gt; ReadAttachmentFeedAsync(class System.Uri documentUri, class Microsoft.Azure.Documents.Client.FeedOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadAttachmentFeedAsync(System.Uri,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentUri">The URI of the parent document.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for the request.</param>
        <summary>
            Reads the feed (sequence) of attachments for a document as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadConflictAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Conflict&gt;&gt; ReadConflictAsync (string conflictLink, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Conflict&gt;&gt; ReadConflictAsync(string conflictLink, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadConflictAsync(System.String,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Conflict&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conflictLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="conflictLink">The link to the Conflict to be read.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Reads a <see cref="T:Microsoft.Azure.Documents.Conflict" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Conflict" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadConflictAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Conflict&gt;&gt; ReadConflictAsync (Uri conflictUri, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Conflict&gt;&gt; ReadConflictAsync(class System.Uri conflictUri, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadConflictAsync(System.Uri,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Conflict&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conflictUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="conflictUri">A URI to the Conflict resource to be read.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Reads a <see cref="T:Microsoft.Azure.Documents.Conflict" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Conflict" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadConflictFeedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.Conflict&gt;&gt; ReadConflictFeedAsync (string collectionLink, Microsoft.Azure.Documents.Client.FeedOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.FeedResponse`1&lt;class Microsoft.Azure.Documents.Conflict&gt;&gt; ReadConflictFeedAsync(string collectionLink, class Microsoft.Azure.Documents.Client.FeedOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadConflictFeedAsync(System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.Conflict&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link of the parent document collection resource.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" />for this request.</param>
        <summary>
            Reads the feed (sequence) of <see cref="T:Microsoft.Azure.Documents.Conflict" /> for a collection as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Conflict" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadConflictFeedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.Conflict&gt;&gt; ReadConflictFeedAsync (Uri documentCollectionUri, Microsoft.Azure.Documents.Client.FeedOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.FeedResponse`1&lt;class Microsoft.Azure.Documents.Conflict&gt;&gt; ReadConflictFeedAsync(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.Client.FeedOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadConflictFeedAsync(System.Uri,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.Conflict&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the parent document collection.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for the request.</param>
        <summary>
            Reads the feed (sequence) of conflicts for a collection as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadDatabaseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Database&gt;&gt; ReadDatabaseAsync (string databaseLink, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Database&gt;&gt; ReadDatabaseAsync(string databaseLink, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadDatabaseAsync(System.String,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Database&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="databaseLink">The link of the Database resource to be read.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Reads a <see cref="T:Microsoft.Azure.Documents.Database" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Database" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadDatabaseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Database&gt;&gt; ReadDatabaseAsync (Uri databaseUri, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Database&gt;&gt; ReadDatabaseAsync(class System.Uri databaseUri, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadDatabaseAsync(System.Uri,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Database&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="databaseUri">A URI to the Database resource to be read.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Reads a <see cref="T:Microsoft.Azure.Documents.Database" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Database" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadDatabaseFeedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.Database&gt;&gt; ReadDatabaseFeedAsync (Microsoft.Azure.Documents.Client.FeedOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.FeedResponse`1&lt;class Microsoft.Azure.Documents.Database&gt;&gt; ReadDatabaseFeedAsync(class Microsoft.Azure.Documents.Client.FeedOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadDatabaseFeedAsync(Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.Database&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" />for this request.</param>
        <summary>
            Reads the feed (sequence) of <see cref="T:Microsoft.Azure.Documents.Database" /> for a database account as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Database" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadDocumentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Document&gt;&gt; ReadDocumentAsync (string documentLink, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Document&gt;&gt; ReadDocumentAsync(string documentLink, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadDocumentAsync(System.String,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Document&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentLink">The link for the document to be read.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Reads a <see cref="T:Microsoft.Azure.Documents.Document" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Document" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadDocumentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Document&gt;&gt; ReadDocumentAsync (Uri documentUri, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Document&gt;&gt; ReadDocumentAsync(class System.Uri documentUri, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadDocumentAsync(System.Uri,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Document&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentUri">A URI to the Document resource to be read.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Reads a <see cref="T:Microsoft.Azure.Documents.Document" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Document" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadDocumentCollectionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt; ReadDocumentCollectionAsync (string documentCollectionLink, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.DocumentCollection&gt;&gt; ReadDocumentCollectionAsync(string documentCollectionLink, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadDocumentCollectionAsync(System.String,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionLink">The link for the DocumentCollection to be read.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Reads a <see cref="T:Microsoft.Azure.Documents.DocumentCollection" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.DocumentCollection" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadDocumentCollectionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt; ReadDocumentCollectionAsync (Uri documentCollectionUri, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.DocumentCollection&gt;&gt; ReadDocumentCollectionAsync(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadDocumentCollectionAsync(System.Uri,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">A URI to the DocumentCollection resource to be read.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Reads a <see cref="T:Microsoft.Azure.Documents.DocumentCollection" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.DocumentCollection" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadDocumentCollectionFeedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt; ReadDocumentCollectionFeedAsync (string databaseLink, Microsoft.Azure.Documents.Client.FeedOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.FeedResponse`1&lt;class Microsoft.Azure.Documents.DocumentCollection&gt;&gt; ReadDocumentCollectionFeedAsync(string databaseLink, class Microsoft.Azure.Documents.Client.FeedOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadDocumentCollectionFeedAsync(System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="databaseLink">The link of the parent database resource.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" />for this request.</param>
        <summary>
            Reads the feed (sequence) of <see cref="T:Microsoft.Azure.Documents.DocumentCollection" /> for a database as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.DocumentCollection" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadDocumentCollectionFeedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt; ReadDocumentCollectionFeedAsync (Uri databaseUri, Microsoft.Azure.Documents.Client.FeedOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.FeedResponse`1&lt;class Microsoft.Azure.Documents.DocumentCollection&gt;&gt; ReadDocumentCollectionFeedAsync(class System.Uri databaseUri, class Microsoft.Azure.Documents.Client.FeedOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadDocumentCollectionFeedAsync(System.Uri,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="databaseUri">The URI of the parent Database.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for the request.</param>
        <summary>
            Reads the feed (sequence) of collections for a database as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadDocumentFeedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;dynamic&gt;&gt; ReadDocumentFeedAsync (string collectionLink, Microsoft.Azure.Documents.Client.FeedOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.FeedResponse`1&lt;object&gt;&gt; ReadDocumentFeedAsync(string collectionLink, class Microsoft.Azure.Documents.Client.FeedOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadDocumentFeedAsync(System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link of the parent document collection resource.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" />for this request.</param>
        <summary>
            Reads the feed (sequence) of documents for a specified collection. This takes returns a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which will contain an enumerable list of dynamic objects.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> containing dynamic objects representing the items in the feed.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadDocumentFeedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;dynamic&gt;&gt; ReadDocumentFeedAsync (Uri documentCollectionUri, Microsoft.Azure.Documents.Client.FeedOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.FeedResponse`1&lt;object&gt;&gt; ReadDocumentFeedAsync(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.Client.FeedOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadDocumentFeedAsync(System.Uri,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the parent document collection.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for the request.</param>
        <summary>
            Reads the feed (sequence) of documents for a collection as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadMediaAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.MediaResponse&gt; ReadMediaAsync (string mediaLink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.MediaResponse&gt; ReadMediaAsync(string mediaLink) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadMediaAsync(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.MediaResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaLink" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mediaLink">The link for the media to read. E.g. /medias/media_rid</param>
        <summary>
            Retrieves the specified attachment content (aka media).
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If <paramref name="mediaLink" /> is not set.</exception>
        <exception cref="T:System.ArgumentException">If <paramref name="mediaLink" /> is not in the form of /medias/{mediaId}.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadMediaMetadataAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.MediaResponse&gt; ReadMediaMetadataAsync (string mediaLink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.MediaResponse&gt; ReadMediaMetadataAsync(string mediaLink) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadMediaMetadataAsync(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.MediaResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaLink" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mediaLink">The link for the media to read metadata for. E.g. /medias/media_rid </param>
        <summary>
            Retrieves the metadata associated with the specified attachment content (aka media) as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If <paramref name="mediaLink" /> is not set.</exception>
        <exception cref="T:System.ArgumentException">If <paramref name="mediaLink" /> is not in the form of /medias/{mediaId}.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadOfferAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Offer&gt;&gt; ReadOfferAsync (string offerLink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Offer&gt;&gt; ReadOfferAsync(string offerLink) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadOfferAsync(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Offer&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offerLink" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="offerLink">The link to the Offer to be read.</param>
        <summary>
            Reads an <see cref="T:Microsoft.Azure.Documents.Offer" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Offer" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOffersFeedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.Offer&gt;&gt; ReadOffersFeedAsync (Microsoft.Azure.Documents.Client.FeedOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.FeedResponse`1&lt;class Microsoft.Azure.Documents.Offer&gt;&gt; ReadOffersFeedAsync(class Microsoft.Azure.Documents.Client.FeedOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadOffersFeedAsync(Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.Offer&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" />for this request.</param>
        <summary>
            Reads the feed (sequence) of <see cref="T:Microsoft.Azure.Documents.Offer" /> for a database account as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Offer" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPermissionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt; ReadPermissionAsync (string permissionLink, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Permission&gt;&gt; ReadPermissionAsync(string permissionLink, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadPermissionAsync(System.String,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissionLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="permissionLink">The link for the Permission resource to be read.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Reads a <see cref="T:Microsoft.Azure.Documents.Permission" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Permission" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPermissionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt; ReadPermissionAsync (Uri permissionUri, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Permission&gt;&gt; ReadPermissionAsync(class System.Uri permissionUri, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadPermissionAsync(System.Uri,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissionUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="permissionUri">A URI to the Permission resource to be read.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Reads a <see cref="T:Microsoft.Azure.Documents.Permission" /> resource as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Permission" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPermissionFeedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt; ReadPermissionFeedAsync (string userLink, Microsoft.Azure.Documents.Client.FeedOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.FeedResponse`1&lt;class Microsoft.Azure.Documents.Permission&gt;&gt; ReadPermissionFeedAsync(string userLink, class Microsoft.Azure.Documents.Client.FeedOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadPermissionFeedAsync(System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="userLink">The link of the parent user resource.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" />for this request.</param>
        <summary>
            Reads the feed (sequence) of <see cref="T:Microsoft.Azure.Documents.Permission" /> for a user as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Permission" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPermissionFeedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt; ReadPermissionFeedAsync (Uri userUri, Microsoft.Azure.Documents.Client.FeedOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.FeedResponse`1&lt;class Microsoft.Azure.Documents.Permission&gt;&gt; ReadPermissionFeedAsync(class System.Uri userUri, class Microsoft.Azure.Documents.Client.FeedOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadPermissionFeedAsync(System.Uri,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="userUri">The URI of the parent user.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for the request.</param>
        <summary>
            Reads the feed (sequence) of permissions for a user as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadStoredProcedureAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt; ReadStoredProcedureAsync (string storedProcedureLink, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.StoredProcedure&gt;&gt; ReadStoredProcedureAsync(string storedProcedureLink, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadStoredProcedureAsync(System.String,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storedProcedureLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="storedProcedureLink">The link of the stored procedure to be read.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Reads a <see cref="T:Microsoft.Azure.Documents.StoredProcedure" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.StoredProcedure" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadStoredProcedureAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt; ReadStoredProcedureAsync (Uri storedProcedureUri, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.StoredProcedure&gt;&gt; ReadStoredProcedureAsync(class System.Uri storedProcedureUri, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadStoredProcedureAsync(System.Uri,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storedProcedureUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="storedProcedureUri">A URI to the StoredProcedure resource to be read.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Reads a <see cref="T:Microsoft.Azure.Documents.StoredProcedure" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.StoredProcedure" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadStoredProcedureFeedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt; ReadStoredProcedureFeedAsync (string collectionLink, Microsoft.Azure.Documents.Client.FeedOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.FeedResponse`1&lt;class Microsoft.Azure.Documents.StoredProcedure&gt;&gt; ReadStoredProcedureFeedAsync(string collectionLink, class Microsoft.Azure.Documents.Client.FeedOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadStoredProcedureFeedAsync(System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link of the parent document collection resource.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" />for this request.</param>
        <summary>
            Reads the feed (sequence) of <see cref="T:Microsoft.Azure.Documents.StoredProcedure" /> for a collection as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.StoredProcedure" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadStoredProcedureFeedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt; ReadStoredProcedureFeedAsync (Uri documentCollectionUri, Microsoft.Azure.Documents.Client.FeedOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.FeedResponse`1&lt;class Microsoft.Azure.Documents.StoredProcedure&gt;&gt; ReadStoredProcedureFeedAsync(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.Client.FeedOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadStoredProcedureFeedAsync(System.Uri,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the parent document collection.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for the request.</param>
        <summary>
            Reads the feed (sequence) of stored procedures for a collection as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadTriggerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt; ReadTriggerAsync (string triggerLink, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Trigger&gt;&gt; ReadTriggerAsync(string triggerLink, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadTriggerAsync(System.String,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="triggerLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="triggerLink">The link to the Trigger to be read.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Reads a <see cref="T:Microsoft.Azure.Documents.Trigger" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Trigger" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadTriggerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt; ReadTriggerAsync (Uri triggerUri, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Trigger&gt;&gt; ReadTriggerAsync(class System.Uri triggerUri, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadTriggerAsync(System.Uri,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="triggerUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="triggerUri">A URI to the Trigger resource to be read.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Reads a <see cref="T:Microsoft.Azure.Documents.Trigger" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Trigger" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadTriggerFeedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt; ReadTriggerFeedAsync (string collectionLink, Microsoft.Azure.Documents.Client.FeedOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.FeedResponse`1&lt;class Microsoft.Azure.Documents.Trigger&gt;&gt; ReadTriggerFeedAsync(string collectionLink, class Microsoft.Azure.Documents.Client.FeedOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadTriggerFeedAsync(System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link of the parent document collection resource.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" />for this request.</param>
        <summary>
            Reads the feed (sequence) of <see cref="T:Microsoft.Azure.Documents.Trigger" /> for a collection as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Trigger" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadTriggerFeedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt; ReadTriggerFeedAsync (Uri documentCollectionUri, Microsoft.Azure.Documents.Client.FeedOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.FeedResponse`1&lt;class Microsoft.Azure.Documents.Trigger&gt;&gt; ReadTriggerFeedAsync(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.Client.FeedOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadTriggerFeedAsync(System.Uri,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the parent document collection.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for the request.</param>
        <summary>
            Reads the feed (sequence) of triggers for a collection as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadUserAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.User&gt;&gt; ReadUserAsync (string userLink, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.User&gt;&gt; ReadUserAsync(string userLink, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadUserAsync(System.String,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.User&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="userLink">The link to the User resource to be read.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Reads a <see cref="T:Microsoft.Azure.Documents.User" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.User" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadUserAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.User&gt;&gt; ReadUserAsync (Uri userUri, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.User&gt;&gt; ReadUserAsync(class System.Uri userUri, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadUserAsync(System.Uri,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.User&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="userUri">A URI to the User resource to be read.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Reads a <see cref="T:Microsoft.Azure.Documents.User" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.User" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadUserDefinedFunctionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; ReadUserDefinedFunctionAsync (string functionLink, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; ReadUserDefinedFunctionAsync(string functionLink, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadUserDefinedFunctionAsync(System.String,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="functionLink">The link to the User Defined Function to be read.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Reads a <see cref="T:Microsoft.Azure.Documents.UserDefinedFunction" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.UserDefinedFunction" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadUserDefinedFunctionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; ReadUserDefinedFunctionAsync (Uri functionUri, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; ReadUserDefinedFunctionAsync(class System.Uri functionUri, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadUserDefinedFunctionAsync(System.Uri,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="functionUri">A URI to the User Defined Function resource to be read.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Reads a <see cref="T:Microsoft.Azure.Documents.UserDefinedFunction" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.UserDefinedFunction" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadUserDefinedFunctionFeedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; ReadUserDefinedFunctionFeedAsync (string collectionLink, Microsoft.Azure.Documents.Client.FeedOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.FeedResponse`1&lt;class Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; ReadUserDefinedFunctionFeedAsync(string collectionLink, class Microsoft.Azure.Documents.Client.FeedOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadUserDefinedFunctionFeedAsync(System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link of the parent document collection resource.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" />for this request.</param>
        <summary>
            Reads the feed (sequence) of <see cref="T:Microsoft.Azure.Documents.UserDefinedFunction" /> for a collection as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.UserDefinedFunction" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadUserDefinedFunctionFeedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; ReadUserDefinedFunctionFeedAsync (Uri documentCollectionUri, Microsoft.Azure.Documents.Client.FeedOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.FeedResponse`1&lt;class Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; ReadUserDefinedFunctionFeedAsync(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.Client.FeedOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadUserDefinedFunctionFeedAsync(System.Uri,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the parent document collection.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for the request.</param>
        <summary>
            Reads the feed (sequence) of user defined functions for a collection as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadUserFeedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.User&gt;&gt; ReadUserFeedAsync (string databaseLink, Microsoft.Azure.Documents.Client.FeedOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.FeedResponse`1&lt;class Microsoft.Azure.Documents.User&gt;&gt; ReadUserFeedAsync(string databaseLink, class Microsoft.Azure.Documents.Client.FeedOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadUserFeedAsync(System.String,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.User&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="databaseLink">The link of the parent database resource.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" />for this request.</param>
        <summary>
            Reads the feed (sequence) of <see cref="T:Microsoft.Azure.Documents.User" /> for a database as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.User" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadUserFeedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.User&gt;&gt; ReadUserFeedAsync (Uri databaseUri, Microsoft.Azure.Documents.Client.FeedOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.FeedResponse`1&lt;class Microsoft.Azure.Documents.User&gt;&gt; ReadUserFeedAsync(class System.Uri databaseUri, class Microsoft.Azure.Documents.Client.FeedOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.ReadUserFeedAsync(System.Uri,Microsoft.Azure.Documents.Client.FeedOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.FeedResponse&lt;Microsoft.Azure.Documents.User&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.FeedOptions" />
      </Parameters>
      <Docs>
        <param name="databaseUri">The URI of the parent database.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.FeedOptions" /> for the request.</param>
        <summary>
            Reads the feed (sequence) of users for a database as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingClient">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Documents.Client.DocumentClient UnderlyingClient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Documents.Client.DocumentClient UnderlyingClient" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient.UnderlyingClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Documents.Client.DocumentClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets an underlying <see cref="T:Microsoft.Azure.Documents.Client.DocumentClient" /> instance.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

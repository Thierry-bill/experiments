<Type Name="IActivityLogsOperations" FullName="Microsoft.Azure.Insights.IActivityLogsOperations">
  <TypeSignature Language="C#" Value="public interface IActivityLogsOperations" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IActivityLogsOperations" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Insights.IActivityLogsOperations" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Monitor</AssemblyName>
    <AssemblyVersion>0.15.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            ActivityLogsOperations operations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ListNextWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Insights.Models.EventData&gt;&gt;&gt; ListNextWithHttpMessagesAsync (string nextPageLink, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Insights.Models.EventData&gt;&gt;&gt; ListNextWithHttpMessagesAsync(string nextPageLink, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Insights.IActivityLogsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.15.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Insights.Models.EventData&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nextPageLink" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Provides the list of events. The **$filter** is very restricted and
            allows only the following patterns. - List events for a resource
            group: $filter=eventTimestamp ge '&lt;Start Time&gt;' and
            eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin,
            Operation' and resourceGroupName eq '&lt;ResourceGroupName&gt;'. -
            List events for resource: $filter=eventTimestamp ge '&lt;Start
            Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and
            eventChannels eq 'Admin, Operation' and resourceUri eq
            '&lt;ResourceURI&gt;'. - List events for a subscription:
            $filter=eventTimestamp ge '&lt;Start Time&gt;' and eventTimestamp
            le '&lt;End Time&gt;' and eventChannels eq 'Admin, Operation'.
            -List events for a resource provider: $filter=eventTimestamp ge
            '&lt;Start Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and
            eventChannels eq 'Admin, Operation' and resourceProvider eq
            '&lt;ResourceProviderName&gt;'. - List events for a correlation Id:
            api-version=2014-04-01&amp;$filter=eventTimestamp ge
            '2014-07-16T04:36:37.6407898Z' and eventTimestamp le
            '2014-07-20T04:36:37.6407898Z' and eventChannels eq 'Admin,
            Operation' and correlationId eq '&lt;CorrelationID&gt;'. No other
            syntax is allowed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ListWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Insights.Models.EventData&gt;&gt;&gt; ListWithHttpMessagesAsync (Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Insights.Models.EventData&gt; odataQuery = null, string select = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Insights.Models.EventData&gt;&gt;&gt; ListWithHttpMessagesAsync(class Microsoft.Rest.Azure.OData.ODataQuery`1&lt;class Microsoft.Azure.Insights.Models.EventData&gt; odataQuery, string select, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Insights.IActivityLogsOperations.ListWithHttpMessagesAsync(Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Insights.Models.EventData},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.15.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Insights.Models.EventData&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="odataQuery" Type="Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Insights.Models.EventData&gt;" />
        <Parameter Name="select" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="odataQuery">
            OData parameters to apply to the operation.
            </param>
        <param name="select">
            Used to fetch events with only the given properties. The filter is
            a comma separated list of property names to be returned. Possible
            values are: authorization, channels, claims, correlationId,
            description, eventDataId, eventName, eventTimestamp, httpRequest,
            level, operationId, operationName, properties, resourceGroupName,
            resourceProviderName, resourceId, status, submissionTimestamp,
            subStatus, subscriptionId
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Provides the list of events. The **$filter** is very restricted and
            allows only the following patterns. - List events for a resource
            group: $filter=eventTimestamp ge '&lt;Start Time&gt;' and
            eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin,
            Operation' and resourceGroupName eq '&lt;ResourceGroupName&gt;'. -
            List events for resource: $filter=eventTimestamp ge '&lt;Start
            Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and
            eventChannels eq 'Admin, Operation' and resourceUri eq
            '&lt;ResourceURI&gt;'. - List events for a subscription:
            $filter=eventTimestamp ge '&lt;Start Time&gt;' and eventTimestamp
            le '&lt;End Time&gt;' and eventChannels eq 'Admin, Operation'.
            -List events for a resource provider: $filter=eventTimestamp ge
            '&lt;Start Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and
            eventChannels eq 'Admin, Operation' and resourceProvider eq
            '&lt;ResourceProviderName&gt;'. - List events for a correlation Id:
            api-version=2014-04-01&amp;$filter=eventTimestamp ge
            '2014-07-16T04:36:37.6407898Z' and eventTimestamp le
            '2014-07-20T04:36:37.6407898Z' and eventChannels eq 'Admin,
            Operation' and correlationId eq '&lt;CorrelationID&gt;'. No other
            syntax is allowed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>

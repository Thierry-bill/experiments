<Type Name="KeyVaultKeyResolver" FullName="Microsoft.Azure.KeyVault.KeyVaultKeyResolver">
  <TypeSignature Language="C#" Value="public class KeyVaultKeyResolver : Microsoft.Azure.KeyVault.Core.IKeyResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyVaultKeyResolver extends System.Object implements class Microsoft.Azure.KeyVault.Core.IKeyResolver" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.KeyVault.KeyVaultKeyResolver" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.KeyVault.Extensions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.KeyVault.Core.IKeyResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Azure Key Vault KeyResolver. This class resolves Key Vault Key Identifiers and
            Secret Identifiers to implementations of IKey. Secret Identifiers can only
            be resolved if the Secret is a byte array with a length matching one of the AES
            key lengths (128, 192, 256) and the content-type of the secret is application/octet-stream.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyVaultKeyResolver (Microsoft.Azure.KeyVault.KeyVaultClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Azure.KeyVault.KeyVaultClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultKeyResolver.#ctor(Microsoft.Azure.KeyVault.KeyVaultClient)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="client" Type="Microsoft.Azure.KeyVault.KeyVaultClient" />
      </Parameters>
      <Docs>
        <param name="client">Key Vault client</param>
        <summary>
            Create a new Key Vault KeyResolver that uses the specified KeyVaultClient
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyVaultKeyResolver (Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback authenticationCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Azure.KeyVault.KeyVaultClient/AuthenticationCallback authenticationCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultKeyResolver.#ctor(Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authenticationCallback" Type="Microsoft.Azure.KeyVault.KeyVaultClient+AuthenticationCallback" />
      </Parameters>
      <Docs>
        <param name="authenticationCallback">Key Vault authentication callback</param>
        <summary>
            Creates a new Key Vault KeyResolver that uses a KeyVaultClient constructed
            with the provided authentication callback.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyVaultKeyResolver (string vaultName, Microsoft.Azure.KeyVault.KeyVaultClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string vaultName, class Microsoft.Azure.KeyVault.KeyVaultClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultKeyResolver.#ctor(System.String,Microsoft.Azure.KeyVault.KeyVaultClient)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="client" Type="Microsoft.Azure.KeyVault.KeyVaultClient" />
      </Parameters>
      <Docs>
        <param name="vaultName">The URL for the Key Vault, e.g. https://myvault.vault.azure.net/ </param>
        <param name="client">Key Vault client</param>
        <summary>
            Creates a new Key Vault KeyResolver that uses the specified KeyVaultClient
            and only resolves keys for the specified key vault
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyVaultKeyResolver (string vaultName, Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback authenticationCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string vaultName, class Microsoft.Azure.KeyVault.KeyVaultClient/AuthenticationCallback authenticationCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultKeyResolver.#ctor(System.String,Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="authenticationCallback" Type="Microsoft.Azure.KeyVault.KeyVaultClient+AuthenticationCallback" />
      </Parameters>
      <Docs>
        <param name="vaultName">The URL for the Key Vault, e.g. https://myvault.vault.azure.net/ </param>
        <param name="authenticationCallback">Key Vault authentication callback</param>
        <summary>
            Creates a new Key Vault KeyResolver that uses a KeyVaultClient constructed
            with the provided authentication callback and only resolves keys for the 
            specified key vault
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveKeyAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Core.IKey&gt; ResolveKeyAsync (string kid, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Core.IKey&gt; ResolveKeyAsync(string kid, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultKeyResolver.ResolveKeyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Azure.KeyVault.KeyVaultKeyResolver/&lt;ResolveKeyAsync&gt;d__6))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Core.IKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kid" Type="System.String" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="kid">The key or secret identifier to resolve</param>
        <param name="token">Cancellation token</param>
        <summary>
            Provides an IKey implementation for the specified key or secret identifier.
            </summary>
        <returns>The resolved IKey implementation or null</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

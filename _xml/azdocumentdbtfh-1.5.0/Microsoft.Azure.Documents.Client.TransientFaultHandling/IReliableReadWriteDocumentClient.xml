<Type Name="IReliableReadWriteDocumentClient" FullName="Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient">
  <TypeSignature Language="C#" Value="public interface IReliableReadWriteDocumentClient : IDisposable, Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReliableReadWriteDocumentClient implements class Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Documents.Client.TransientFaultHandling</AssemblyName>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadDocumentClient</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Provides reliable read/write access to DocumentDB service.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateAttachmentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt; CreateAttachmentAsync (string documentLink, object attachment, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Attachment&gt;&gt; CreateAttachmentAsync(string documentLink, object attachment, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.CreateAttachmentAsync(System.String,System.Object,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentLink" Type="System.String" />
        <Parameter Name="attachment" Type="System.Object" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentLink">The link of the parent document for this new attachment. E.g. dbs/db_rid/colls/col_rid/docs/doc_rid/ </param>
        <param name="attachment">The attachment object.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Creates an attachment as an asychronous operation.
            </summary>
        <returns>
            The <see cref="T:System.Threading.Tasks.Task" /> object representing the service response for the asynchronous operation.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttachmentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt; CreateAttachmentAsync (Uri documentUri, object attachment, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Attachment&gt;&gt; CreateAttachmentAsync(class System.Uri documentUri, object attachment, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.CreateAttachmentAsync(System.Uri,System.Object,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentUri" Type="System.Uri" />
        <Parameter Name="attachment" Type="System.Object" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentUri">The URI of the document to create an attachment for.</param>
        <param name="attachment">The attachment object.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Creates an attachment as an asychronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttachmentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt; CreateAttachmentAsync (string documentLink, System.IO.Stream mediaStream, Microsoft.Azure.Documents.Client.MediaOptions options = null, Microsoft.Azure.Documents.Client.RequestOptions requestOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Attachment&gt;&gt; CreateAttachmentAsync(string documentLink, class System.IO.Stream mediaStream, class Microsoft.Azure.Documents.Client.MediaOptions options, class Microsoft.Azure.Documents.Client.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.CreateAttachmentAsync(System.String,System.IO.Stream,Microsoft.Azure.Documents.Client.MediaOptions,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentLink" Type="System.String" />
        <Parameter Name="mediaStream" Type="System.IO.Stream" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.MediaOptions" />
        <Parameter Name="requestOptions" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentLink">The link to the parent document.</param>
        <param name="mediaStream">the <see cref="T:System.IO.Stream" /> of the attachment media.</param>
        <param name="options">the <see cref="T:Microsoft.Azure.Documents.Client.MediaOptions" /> for the request.</param>
        <param name="requestOptions">Request options.</param>
        <summary>
            Creates an <see cref="T:Microsoft.Azure.Documents.Attachment" /> with the contents of the provided <paramref name="mediaStream" /> as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If either <paramref name="documentLink" /> or <paramref name="mediaStream" /> is not set.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAttachmentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt; CreateAttachmentAsync (Uri documentUri, System.IO.Stream mediaStream, Microsoft.Azure.Documents.Client.MediaOptions options = null, Microsoft.Azure.Documents.Client.RequestOptions requestOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Attachment&gt;&gt; CreateAttachmentAsync(class System.Uri documentUri, class System.IO.Stream mediaStream, class Microsoft.Azure.Documents.Client.MediaOptions options, class Microsoft.Azure.Documents.Client.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.CreateAttachmentAsync(System.Uri,System.IO.Stream,Microsoft.Azure.Documents.Client.MediaOptions,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentUri" Type="System.Uri" />
        <Parameter Name="mediaStream" Type="System.IO.Stream" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.MediaOptions" />
        <Parameter Name="requestOptions" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentUri">The URI of the document to create an attachment for.</param>
        <param name="mediaStream">The stream of the attachment media.</param>
        <param name="options">The media options for the request.</param>
        <param name="requestOptions">Request options.</param>
        <summary>
            Creates an attachment as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabaseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Database&gt;&gt; CreateDatabaseAsync (Microsoft.Azure.Documents.Database database, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Database&gt;&gt; CreateDatabaseAsync(class Microsoft.Azure.Documents.Database database, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.CreateDatabaseAsync(Microsoft.Azure.Documents.Database,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Database&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="database" Type="Microsoft.Azure.Documents.Database" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="database">The specification for the <see cref="T:Microsoft.Azure.Documents.Database" /> to create.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Creates a database resource as an asychronous operation.
            </summary>
        <returns>The <see cref="T:Microsoft.Azure.Documents.Database" /> that was created within a task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabaseIfNotExistsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Database&gt;&gt; CreateDatabaseIfNotExistsAsync (Microsoft.Azure.Documents.Database database, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Database&gt;&gt; CreateDatabaseIfNotExistsAsync(class Microsoft.Azure.Documents.Database database, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.CreateDatabaseIfNotExistsAsync(Microsoft.Azure.Documents.Database,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Database&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="database" Type="Microsoft.Azure.Documents.Database" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="database">The specification for the <see cref="T:Microsoft.Azure.Documents.Database" /> to create.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Creates(if doesn't exist) or gets(if already exists) a database resource as an asychronous operation.
            You can check the status code from the response to determine whether the database was newly created(201) or existing database was returned(200)
            </summary>
        <returns>The <see cref="T:Microsoft.Azure.Documents.Database" /> that was created within a task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Document&gt;&gt; CreateDocumentAsync (string collectionLink, object document, Microsoft.Azure.Documents.Client.RequestOptions options = null, bool disableAutomaticIdGeneration = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Document&gt;&gt; CreateDocumentAsync(string collectionLink, object document, class Microsoft.Azure.Documents.Client.RequestOptions options, bool disableAutomaticIdGeneration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.CreateDocumentAsync(System.String,System.Object,Microsoft.Azure.Documents.Client.RequestOptions,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Document&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="document" Type="System.Object" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
        <Parameter Name="disableAutomaticIdGeneration" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link of the <see cref="T:Microsoft.Azure.Documents.DocumentCollection" /> to create the document in. E.g. dbs/db_rid/colls/coll_rid/ </param>
        <param name="document">The document object to create.</param>
        <param name="options">(Optional) The request options you wish to set. E.g. Specifying a Trigger to execute when creating the document. <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /></param>
        <param name="disableAutomaticIdGeneration">(Optional) Disables the automatic id generation, If this is True the system will throw an exception if the id property is missing from the Document.</param>
        <summary>
            Creates a Document as an asychronous operation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Document&gt;&gt; CreateDocumentAsync (Uri documentCollectionUri, object document, Microsoft.Azure.Documents.Client.RequestOptions options = null, bool disableAutomaticIdGeneration = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Document&gt;&gt; CreateDocumentAsync(class System.Uri documentCollectionUri, object document, class Microsoft.Azure.Documents.Client.RequestOptions options, bool disableAutomaticIdGeneration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.CreateDocumentAsync(System.Uri,System.Object,Microsoft.Azure.Documents.Client.RequestOptions,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Document&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="document" Type="System.Object" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
        <Parameter Name="disableAutomaticIdGeneration" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the document collection to create the document in.</param>
        <param name="document">The document object.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <param name="disableAutomaticIdGeneration">A flag to disable automatic id generation.</param>
        <summary>
            Creates a document as an asychronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentCollectionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt; CreateDocumentCollectionAsync (string databaseLink, Microsoft.Azure.Documents.DocumentCollection documentCollection, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.DocumentCollection&gt;&gt; CreateDocumentCollectionAsync(string databaseLink, class Microsoft.Azure.Documents.DocumentCollection documentCollection, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.CreateDocumentCollectionAsync(System.String,Microsoft.Azure.Documents.DocumentCollection,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseLink" Type="System.String" />
        <Parameter Name="documentCollection" Type="Microsoft.Azure.Documents.DocumentCollection" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="databaseLink">The link of the database to create the collection in. E.g. dbs/db_rid/</param>
        <param name="documentCollection">The <see cref="T:Microsoft.Azure.Documents.DocumentCollection" /> object.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> you wish to provide when creating a Collection. E.g. RequestOptions.OfferType="S1". </param>
        <summary>
            Creates a collection as an asychronous operation.
            </summary>
        <returns>The <see cref="T:Microsoft.Azure.Documents.DocumentCollection" /> that was created contained within a <see cref="T:System.Threading.Tasks.Task" /> object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentCollectionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt; CreateDocumentCollectionAsync (Uri databaseUri, Microsoft.Azure.Documents.DocumentCollection documentCollection, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.DocumentCollection&gt;&gt; CreateDocumentCollectionAsync(class System.Uri databaseUri, class Microsoft.Azure.Documents.DocumentCollection documentCollection, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.CreateDocumentCollectionAsync(System.Uri,Microsoft.Azure.Documents.DocumentCollection,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseUri" Type="System.Uri" />
        <Parameter Name="documentCollection" Type="Microsoft.Azure.Documents.DocumentCollection" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="databaseUri">The URI of the database to create the collection in.</param>
        <param name="documentCollection">The <see cref="T:Microsoft.Azure.Documents.DocumentCollection" /> object.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Creates a collection as an asychronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentCollectionIfNotExistsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt; CreateDocumentCollectionIfNotExistsAsync (string databaseLink, Microsoft.Azure.Documents.DocumentCollection documentCollection, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.DocumentCollection&gt;&gt; CreateDocumentCollectionIfNotExistsAsync(string databaseLink, class Microsoft.Azure.Documents.DocumentCollection documentCollection, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.CreateDocumentCollectionIfNotExistsAsync(System.String,Microsoft.Azure.Documents.DocumentCollection,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseLink" Type="System.String" />
        <Parameter Name="documentCollection" Type="Microsoft.Azure.Documents.DocumentCollection" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="databaseLink">The link of the database to create the collection in. E.g. dbs/db_rid/</param>
        <param name="documentCollection">The <see cref="T:Microsoft.Azure.Documents.DocumentCollection" /> object.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> you wish to provide when creating a Collection. E.g. RequestOptions.OfferType="S1". </param>
        <summary>
            Creates(if doesn't exist) or gets(if already exists) a collection as an asychronous operation.
            You can check the status code from the response to determine whether the collection was newly created(201) or existing collection was returned(200).
            </summary>
        <returns>The <see cref="T:Microsoft.Azure.Documents.DocumentCollection" /> that was created contained within a <see cref="T:System.Threading.Tasks.Task" /> object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentCollectionIfNotExistsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt; CreateDocumentCollectionIfNotExistsAsync (Uri databaseUri, Microsoft.Azure.Documents.DocumentCollection documentCollection, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.DocumentCollection&gt;&gt; CreateDocumentCollectionIfNotExistsAsync(class System.Uri databaseUri, class Microsoft.Azure.Documents.DocumentCollection documentCollection, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.CreateDocumentCollectionIfNotExistsAsync(System.Uri,Microsoft.Azure.Documents.DocumentCollection,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseUri" Type="System.Uri" />
        <Parameter Name="documentCollection" Type="Microsoft.Azure.Documents.DocumentCollection" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="databaseUri">The URI of the database to create the collection in.</param>
        <param name="documentCollection">The <see cref="T:Microsoft.Azure.Documents.DocumentCollection" /> object.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Creates(if doesn't exist) or gets(if already exists) a collection as an asychronous operation.
            You can check the status code from the response to determine whether the collection was newly created(201) or existing collection was returned(200).
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermissionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt; CreatePermissionAsync (string userLink, Microsoft.Azure.Documents.Permission permission, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Permission&gt;&gt; CreatePermissionAsync(string userLink, class Microsoft.Azure.Documents.Permission permission, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.CreatePermissionAsync(System.String,Microsoft.Azure.Documents.Permission,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userLink" Type="System.String" />
        <Parameter Name="permission" Type="Microsoft.Azure.Documents.Permission" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="userLink">The link of the user to create the permission for. E.g. dbs/db_rid/users/user_rid/ </param>
        <param name="permission">The <see cref="T:Microsoft.Azure.Documents.Permission" /> object.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Creates a permission on a user object as an asychronous operation.
            </summary>
        <returns>A task object representing the service response for the asynchronous operation which contains the created <see cref="T:Microsoft.Azure.Documents.Permission" /> object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermissionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt; CreatePermissionAsync (Uri userUri, Microsoft.Azure.Documents.Permission permission, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Permission&gt;&gt; CreatePermissionAsync(class System.Uri userUri, class Microsoft.Azure.Documents.Permission permission, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.CreatePermissionAsync(System.Uri,Microsoft.Azure.Documents.Permission,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userUri" Type="System.Uri" />
        <Parameter Name="permission" Type="Microsoft.Azure.Documents.Permission" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="userUri">The URI of the user to create the permission for.</param>
        <param name="permission">The <see cref="T:Microsoft.Azure.Documents.Permission" /> object.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Creates a permission as an asychronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStoredProcedureAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt; CreateStoredProcedureAsync (string collectionLink, Microsoft.Azure.Documents.StoredProcedure storedProcedure, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.StoredProcedure&gt;&gt; CreateStoredProcedureAsync(string collectionLink, class Microsoft.Azure.Documents.StoredProcedure storedProcedure, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.CreateStoredProcedureAsync(System.String,Microsoft.Azure.Documents.StoredProcedure,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="storedProcedure" Type="Microsoft.Azure.Documents.StoredProcedure" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link of the collection to create the stored procedure in. E.g. dbs/db_rid/colls/col_rid/</param>
        <param name="storedProcedure">The <see cref="T:Microsoft.Azure.Documents.StoredProcedure" /> object to create.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Creates a stored procedure as an asychronous operation.
            </summary>
        <returns>The <see cref="T:Microsoft.Azure.Documents.StoredProcedure" /> that was created contained within a <see cref="T:System.Threading.Tasks.Task" /> object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStoredProcedureAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt; CreateStoredProcedureAsync (Uri documentCollectionUri, Microsoft.Azure.Documents.StoredProcedure storedProcedure, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.StoredProcedure&gt;&gt; CreateStoredProcedureAsync(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.StoredProcedure storedProcedure, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.CreateStoredProcedureAsync(System.Uri,Microsoft.Azure.Documents.StoredProcedure,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="storedProcedure" Type="Microsoft.Azure.Documents.StoredProcedure" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the document collection to create the stored procedure in.</param>
        <param name="storedProcedure">The <see cref="T:Microsoft.Azure.Documents.StoredProcedure" /> object.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Creates a stored procedure as an asychronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTriggerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt; CreateTriggerAsync (string collectionLink, Microsoft.Azure.Documents.Trigger trigger, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Trigger&gt;&gt; CreateTriggerAsync(string collectionLink, class Microsoft.Azure.Documents.Trigger trigger, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.CreateTriggerAsync(System.String,Microsoft.Azure.Documents.Trigger,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="trigger" Type="Microsoft.Azure.Documents.Trigger" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link of the <see cref="T:Microsoft.Azure.Documents.DocumentCollection" /> to create the trigger in. E.g. dbs/db_rid/colls/col_rid/ </param>
        <param name="trigger">The <see cref="T:Microsoft.Azure.Documents.Trigger" /> object to create.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Creates a trigger as an asychronous operation.
            </summary>
        <returns>A task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTriggerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt; CreateTriggerAsync (Uri documentCollectionUri, Microsoft.Azure.Documents.Trigger trigger, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Trigger&gt;&gt; CreateTriggerAsync(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.Trigger trigger, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.CreateTriggerAsync(System.Uri,Microsoft.Azure.Documents.Trigger,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="trigger" Type="Microsoft.Azure.Documents.Trigger" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the document collection to create the trigger in.</param>
        <param name="trigger">The <see cref="T:Microsoft.Azure.Documents.Trigger" /> object.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Creates a trigger as an asychronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.User&gt;&gt; CreateUserAsync (string databaseLink, Microsoft.Azure.Documents.User user, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.User&gt;&gt; CreateUserAsync(string databaseLink, class Microsoft.Azure.Documents.User user, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.CreateUserAsync(System.String,Microsoft.Azure.Documents.User,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.User&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseLink" Type="System.String" />
        <Parameter Name="user" Type="Microsoft.Azure.Documents.User" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="databaseLink">The link of the database to create the user in. E.g. dbs/db_rid/ </param>
        <param name="user">The <see cref="T:Microsoft.Azure.Documents.User" /> object to create.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Creates a user object as an asychronous operation.
            </summary>
        <returns>A task object representing the service response for the asynchronous operation which contains the created <see cref="T:Microsoft.Azure.Documents.User" /> object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.User&gt;&gt; CreateUserAsync (Uri databaseUri, Microsoft.Azure.Documents.User user, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.User&gt;&gt; CreateUserAsync(class System.Uri databaseUri, class Microsoft.Azure.Documents.User user, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.CreateUserAsync(System.Uri,Microsoft.Azure.Documents.User,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.User&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseUri" Type="System.Uri" />
        <Parameter Name="user" Type="Microsoft.Azure.Documents.User" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="databaseUri">The URI of the database to create the user in.</param>
        <param name="user">The <see cref="T:Microsoft.Azure.Documents.User" /> object.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Creates a user as an asychronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserDefinedFunctionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; CreateUserDefinedFunctionAsync (string collectionLink, Microsoft.Azure.Documents.UserDefinedFunction function, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; CreateUserDefinedFunctionAsync(string collectionLink, class Microsoft.Azure.Documents.UserDefinedFunction function, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.CreateUserDefinedFunctionAsync(System.String,Microsoft.Azure.Documents.UserDefinedFunction,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="function" Type="Microsoft.Azure.Documents.UserDefinedFunction" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link of the <see cref="T:Microsoft.Azure.Documents.DocumentCollection" /> to create the user defined function in. E.g. dbs/db_rid/colls/col_rid/ </param>
        <param name="function">The <see cref="T:Microsoft.Azure.Documents.UserDefinedFunction" /> object to create.</param>
        <param name="options">(Optional) Any <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Creates a user defined function as an asychronous operation.
            </summary>
        <returns>A task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserDefinedFunctionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; CreateUserDefinedFunctionAsync (Uri documentCollectionUri, Microsoft.Azure.Documents.UserDefinedFunction function, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; CreateUserDefinedFunctionAsync(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.UserDefinedFunction function, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.CreateUserDefinedFunctionAsync(System.Uri,Microsoft.Azure.Documents.UserDefinedFunction,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="function" Type="Microsoft.Azure.Documents.UserDefinedFunction" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the document collection to create the user defined function in.</param>
        <param name="function">The <see cref="T:Microsoft.Azure.Documents.UserDefinedFunction" /> object.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Creates a user defined function as an asychronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAttachmentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt; DeleteAttachmentAsync (string attachmentLink, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Attachment&gt;&gt; DeleteAttachmentAsync(string attachmentLink, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.DeleteAttachmentAsync(System.String,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachmentLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="attachmentLink">The link of the <see cref="T:Microsoft.Azure.Documents.Attachment" /> to delete. E.g. dbs/db_rid/colls/col_rid/docs/doc_rid/attachments/attachment_rid/ </param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Delete an <see cref="T:Microsoft.Azure.Documents.Attachment" /> from the database as an asynchronous operation.
            </summary>
        <returns>A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which will contain information about the request issued.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAttachmentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt; DeleteAttachmentAsync (Uri attachmentUri, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Attachment&gt;&gt; DeleteAttachmentAsync(class System.Uri attachmentUri, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.DeleteAttachmentAsync(System.Uri,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachmentUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="attachmentUri">The URI of the attachment to delete.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Delete an attachment as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteConflictAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Conflict&gt;&gt; DeleteConflictAsync (string conflictLink, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Conflict&gt;&gt; DeleteConflictAsync(string conflictLink, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.DeleteConflictAsync(System.String,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Conflict&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conflictLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="conflictLink">The link of the <see cref="T:Microsoft.Azure.Documents.Conflict" /> to delete. E.g. dbs/db_rid/colls/coll_rid/conflicts/ </param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Delete a <see cref="T:Microsoft.Azure.Documents.Conflict" /> as an asynchronous operation.
            </summary>
        <returns>A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which will contain information about the request issued.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteConflictAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Conflict&gt;&gt; DeleteConflictAsync (Uri conflictUri, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Conflict&gt;&gt; DeleteConflictAsync(class System.Uri conflictUri, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.DeleteConflictAsync(System.Uri,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Conflict&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conflictUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="conflictUri">The URI of the conflict to delete.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Delete a conflict as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDatabaseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Database&gt;&gt; DeleteDatabaseAsync (string databaseLink, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Database&gt;&gt; DeleteDatabaseAsync(string databaseLink, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.DeleteDatabaseAsync(System.String,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Database&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="databaseLink">The link of the <see cref="T:Microsoft.Azure.Documents.Database" /> to delete. E.g. dbs/db_rid/ </param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Delete a <see cref="T:Microsoft.Azure.Documents.Database" /> as an asynchronous operation.
            </summary>
        <returns>A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which will contain information about the request issued.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDatabaseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Database&gt;&gt; DeleteDatabaseAsync (Uri databaseUri, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Database&gt;&gt; DeleteDatabaseAsync(class System.Uri databaseUri, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.DeleteDatabaseAsync(System.Uri,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Database&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="databaseUri">The URI of the database to delete.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Delete a database as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDocumentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Document&gt;&gt; DeleteDocumentAsync (string documentLink, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Document&gt;&gt; DeleteDocumentAsync(string documentLink, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.DeleteDocumentAsync(System.String,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Document&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentLink">The link of the <see cref="T:Microsoft.Azure.Documents.Document" /> to delete. E.g. dbs/db_rid/colls/col_rid/docs/doc_rid/ </param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Delete a <see cref="T:Microsoft.Azure.Documents.Document" /> as an asynchronous operation.
            </summary>
        <returns>A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which will contain information about the request issued.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDocumentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Document&gt;&gt; DeleteDocumentAsync (Uri documentUri, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Document&gt;&gt; DeleteDocumentAsync(class System.Uri documentUri, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.DeleteDocumentAsync(System.Uri,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Document&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentUri">The URI of the document to delete.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Delete a document as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDocumentCollectionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt; DeleteDocumentCollectionAsync (string documentCollectionLink, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.DocumentCollection&gt;&gt; DeleteDocumentCollectionAsync(string documentCollectionLink, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.DeleteDocumentCollectionAsync(System.String,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionLink">The link of the <see cref="T:Microsoft.Azure.Documents.Document" /> to delete. E.g. dbs/db_rid/colls/col_rid/ </param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Delete a <see cref="T:Microsoft.Azure.Documents.DocumentCollection" /> as an asynchronous operation.
            </summary>
        <returns>A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which will contain information about the request issued.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDocumentCollectionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt; DeleteDocumentCollectionAsync (Uri documentCollectionUri, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.DocumentCollection&gt;&gt; DeleteDocumentCollectionAsync(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.DeleteDocumentCollectionAsync(System.Uri,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the document collection to delete.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Delete a collection as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeletePermissionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt; DeletePermissionAsync (string permissionLink, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Permission&gt;&gt; DeletePermissionAsync(string permissionLink, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.DeletePermissionAsync(System.String,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissionLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="permissionLink">The link of the <see cref="T:Microsoft.Azure.Documents.Permission" /> to delete. E.g. dbs/db_rid/users/user_rid/permissions/permission_rid/ </param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Delete a <see cref="T:Microsoft.Azure.Documents.Permission" /> as an asynchronous operation.
            </summary>
        <returns>A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which will contain information about the request issued.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeletePermissionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt; DeletePermissionAsync (Uri permissionUri, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Permission&gt;&gt; DeletePermissionAsync(class System.Uri permissionUri, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.DeletePermissionAsync(System.Uri,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissionUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="permissionUri">The URI of the permission to delete.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Delete a permission as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteStoredProcedureAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt; DeleteStoredProcedureAsync (string storedProcedureLink, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.StoredProcedure&gt;&gt; DeleteStoredProcedureAsync(string storedProcedureLink, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.DeleteStoredProcedureAsync(System.String,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storedProcedureLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="storedProcedureLink">The link of the <see cref="T:Microsoft.Azure.Documents.StoredProcedure" /> to delete. E.g. dbs/db_rid/colls/col_rid/sprocs/sproc_rid/ </param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Delete a <see cref="T:Microsoft.Azure.Documents.StoredProcedure" /> as an asynchronous operation.
            </summary>
        <returns>A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which will contain information about the request issued.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteStoredProcedureAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt; DeleteStoredProcedureAsync (Uri storedProcedureUri, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.StoredProcedure&gt;&gt; DeleteStoredProcedureAsync(class System.Uri storedProcedureUri, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.DeleteStoredProcedureAsync(System.Uri,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storedProcedureUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="storedProcedureUri">The URI of the stored procedure to delete.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Delete a stored procedure as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTriggerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt; DeleteTriggerAsync (string triggerLink, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Trigger&gt;&gt; DeleteTriggerAsync(string triggerLink, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.DeleteTriggerAsync(System.String,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="triggerLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="triggerLink">The link of the <see cref="T:Microsoft.Azure.Documents.Trigger" /> to delete. E.g. dbs/db_rid/colls/col_rid/triggers/trigger_rid/ </param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Delete a <see cref="T:Microsoft.Azure.Documents.Trigger" /> as an asynchronous operation.
            </summary>
        <returns>A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which will contain information about the request issued.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTriggerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt; DeleteTriggerAsync (Uri triggerUri, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Trigger&gt;&gt; DeleteTriggerAsync(class System.Uri triggerUri, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.DeleteTriggerAsync(System.Uri,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="triggerUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="triggerUri">The URI of the trigger to delete.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Delete a trigger as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteUserAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.User&gt;&gt; DeleteUserAsync (string userLink, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.User&gt;&gt; DeleteUserAsync(string userLink, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.DeleteUserAsync(System.String,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.User&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="userLink">The link of the <see cref="T:Microsoft.Azure.Documents.User" /> to delete. E.g. dbs/db_rid/users/user_rid/ </param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Delete a <see cref="T:Microsoft.Azure.Documents.User" /> as an asynchronous operation.
            </summary>
        <returns>A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which will contain information about the request issued.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteUserAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.User&gt;&gt; DeleteUserAsync (Uri userUri, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.User&gt;&gt; DeleteUserAsync(class System.Uri userUri, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.DeleteUserAsync(System.Uri,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.User&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="userUri">The URI of the user to delete.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Delete a user as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteUserDefinedFunctionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; DeleteUserDefinedFunctionAsync (string functionLink, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; DeleteUserDefinedFunctionAsync(string functionLink, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.DeleteUserDefinedFunctionAsync(System.String,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="functionLink">The link of the <see cref="T:Microsoft.Azure.Documents.UserDefinedFunction" /> to delete. E.g. dbs/db_rid/colls/col_rid/udfs/udf_rid/ </param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Delete a <see cref="T:Microsoft.Azure.Documents.UserDefinedFunction" /> as an asynchronous operation.
            </summary>
        <returns>A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which will contain information about the request issued.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteUserDefinedFunctionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; DeleteUserDefinedFunctionAsync (Uri functionUri, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; DeleteUserDefinedFunctionAsync(class System.Uri functionUri, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.DeleteUserDefinedFunctionAsync(System.Uri,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="functionUri">The URI of the user defined function to delete.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Delete a user defined function as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteStoredProcedureAsync&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.StoredProcedureResponse&lt;TValue&gt;&gt; ExecuteStoredProcedureAsync&lt;TValue&gt; (string storedProcedureLink, object[] procedureParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.StoredProcedureResponse`1&lt;!!TValue&gt;&gt; ExecuteStoredProcedureAsync&lt;TValue&gt;(string storedProcedureLink, object[] procedureParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ExecuteStoredProcedureAsync``1(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Params")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.StoredProcedureResponse&lt;TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="storedProcedureLink" Type="System.String" />
        <Parameter Name="procedureParams" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of the stored procedure's return value.</typeparam>
        <param name="storedProcedureLink">The link to the stored procedure to execute.</param>
        <param name="procedureParams">(Optional) An array of dynamic objects representing the parameters for the stored procedure.</param>
        <summary>
            Executes a stored procedure against a collection as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation which would contain any response set in the stored procedure.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If <paramref name="storedProcedureLink" /> is not set.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteStoredProcedureAsync&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.StoredProcedureResponse&lt;TValue&gt;&gt; ExecuteStoredProcedureAsync&lt;TValue&gt; (Uri storedProcedureUri, object[] procedureParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.StoredProcedureResponse`1&lt;!!TValue&gt;&gt; ExecuteStoredProcedureAsync&lt;TValue&gt;(class System.Uri storedProcedureUri, object[] procedureParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ExecuteStoredProcedureAsync``1(System.Uri,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Params")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.StoredProcedureResponse&lt;TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="storedProcedureUri" Type="System.Uri" />
        <Parameter Name="procedureParams" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of the stored procedure's return value.</typeparam>
        <param name="storedProcedureUri">The URI of the stored procedure to be executed.</param>
        <param name="procedureParams">The parameters for the stored procedure execution.</param>
        <summary>
            Executes a stored procedure against a collection as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteStoredProcedureAsync&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.StoredProcedureResponse&lt;TValue&gt;&gt; ExecuteStoredProcedureAsync&lt;TValue&gt; (string storedProcedureLink, Microsoft.Azure.Documents.Client.RequestOptions options, object[] procedureParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.StoredProcedureResponse`1&lt;!!TValue&gt;&gt; ExecuteStoredProcedureAsync&lt;TValue&gt;(string storedProcedureLink, class Microsoft.Azure.Documents.Client.RequestOptions options, object[] procedureParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ExecuteStoredProcedureAsync``1(System.String,Microsoft.Azure.Documents.Client.RequestOptions,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Params")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.StoredProcedureResponse&lt;TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="storedProcedureLink" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
        <Parameter Name="procedureParams" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of the stored procedure's return value.</typeparam>
        <param name="storedProcedureLink">The link to the stored procedure to execute.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <param name="procedureParams">(Optional) An array of dynamic objects representing the parameters for the stored procedure.</param>
        <summary>
            Executes a stored procedure against a partitioned collection as an asynchronous operation, specifiying a target partition.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation which would contain any response set in the stored procedure.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If <paramref name="storedProcedureLink" /> is not set.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteStoredProcedureAsync&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.StoredProcedureResponse&lt;TValue&gt;&gt; ExecuteStoredProcedureAsync&lt;TValue&gt; (Uri storedProcedureUri, Microsoft.Azure.Documents.Client.RequestOptions options, object[] procedureParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.StoredProcedureResponse`1&lt;!!TValue&gt;&gt; ExecuteStoredProcedureAsync&lt;TValue&gt;(class System.Uri storedProcedureUri, class Microsoft.Azure.Documents.Client.RequestOptions options, object[] procedureParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ExecuteStoredProcedureAsync``1(System.Uri,Microsoft.Azure.Documents.Client.RequestOptions,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Params")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.StoredProcedureResponse&lt;TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="storedProcedureUri" Type="System.Uri" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
        <Parameter Name="procedureParams" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of the stored procedure's return value.</typeparam>
        <param name="storedProcedureUri">The URI of the stored procedure to be executed.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <param name="procedureParams">The parameters for the stored procedure execution.</param>
        <summary>
            Executes a stored procedure against a collection as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteWriteAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;T&gt; ExecuteWriteAsync&lt;T&gt; (Func&lt;Microsoft.Azure.Documents.Client.DocumentClient,System.Threading.Tasks.Task&lt;T&gt;&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!!T&gt; ExecuteWriteAsync&lt;T&gt;(class System.Func`2&lt;class Microsoft.Azure.Documents.Client.DocumentClient, class System.Threading.Tasks.Task`1&lt;!!T&gt;&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ExecuteWriteAsync``1(System.Func{Microsoft.Azure.Documents.Client.DocumentClient,System.Threading.Tasks.Task{``0}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;Microsoft.Azure.Documents.Client.DocumentClient,System.Threading.Tasks.Task&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">Return type of the write operation.</typeparam>
        <param name="action">Write operation to execute.</param>
        <summary>
            Executes any write operation with retry on transient failures.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents asynchronous write operation.</returns>
        <remarks>
            This method is useful when underlying <see cref="T:Microsoft.Azure.Documents.Client.DocumentClient" /> has a write method
            that is not represented by any member of this interface.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceAttachmentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt; ReplaceAttachmentAsync (Microsoft.Azure.Documents.Attachment attachment, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Attachment&gt;&gt; ReplaceAttachmentAsync(class Microsoft.Azure.Documents.Attachment attachment, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ReplaceAttachmentAsync(Microsoft.Azure.Documents.Attachment,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachment" Type="Microsoft.Azure.Documents.Attachment" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="attachment">The updated <see cref="T:Microsoft.Azure.Documents.Attachment" /> to replace the existing resource with.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Replaces a <see cref="T:Microsoft.Azure.Documents.Attachment" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Attachment" /> containing the updated resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceAttachmentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt; ReplaceAttachmentAsync (Uri attachmentUri, Microsoft.Azure.Documents.Attachment attachment, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Attachment&gt;&gt; ReplaceAttachmentAsync(class System.Uri attachmentUri, class Microsoft.Azure.Documents.Attachment attachment, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ReplaceAttachmentAsync(System.Uri,Microsoft.Azure.Documents.Attachment,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachmentUri" Type="System.Uri" />
        <Parameter Name="attachment" Type="Microsoft.Azure.Documents.Attachment" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="attachmentUri">The URI of the attachment to be updated.</param>
        <param name="attachment">The attachment resource.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Replaces an attachment as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceDocumentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Document&gt;&gt; ReplaceDocumentAsync (Microsoft.Azure.Documents.Document document, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Document&gt;&gt; ReplaceDocumentAsync(class Microsoft.Azure.Documents.Document document, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ReplaceDocumentAsync(Microsoft.Azure.Documents.Document,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Document&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="Microsoft.Azure.Documents.Document" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="document">The updated <see cref="T:Microsoft.Azure.Documents.Document" /> to replace the existing resource with.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Replaces a <see cref="T:Microsoft.Azure.Documents.Document" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Document" /> containing the updated resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceDocumentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Document&gt;&gt; ReplaceDocumentAsync (string documentLink, object document, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Document&gt;&gt; ReplaceDocumentAsync(string documentLink, object document, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ReplaceDocumentAsync(System.String,System.Object,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Document&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentLink" Type="System.String" />
        <Parameter Name="document" Type="System.Object" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentLink">The link of the document to be updated. E.g. dbs/db_rid/colls/col_rid/docs/doc_rid/ </param>
        <param name="document">The updated <see cref="T:Microsoft.Azure.Documents.Document" /> to replace the existing resource with.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Replaces a <see cref="T:Microsoft.Azure.Documents.Document" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Document" /> containing the updated resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceDocumentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Document&gt;&gt; ReplaceDocumentAsync (Uri documentCollectionUri, object document, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Document&gt;&gt; ReplaceDocumentAsync(class System.Uri documentCollectionUri, object document, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ReplaceDocumentAsync(System.Uri,System.Object,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Document&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="document" Type="System.Object" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the document collection in which the document to be updated resides.</param>
        <param name="document">The updated document.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Replaces a document as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceDocumentCollectionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt; ReplaceDocumentCollectionAsync (Microsoft.Azure.Documents.DocumentCollection documentCollection, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.DocumentCollection&gt;&gt; ReplaceDocumentCollectionAsync(class Microsoft.Azure.Documents.DocumentCollection documentCollection, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ReplaceDocumentCollectionAsync(Microsoft.Azure.Documents.DocumentCollection,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollection" Type="Microsoft.Azure.Documents.DocumentCollection" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollection">The updated document collection.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Replaces a document collection as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceDocumentCollectionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt; ReplaceDocumentCollectionAsync (Uri documentCollectionUri, Microsoft.Azure.Documents.DocumentCollection documentCollection, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.DocumentCollection&gt;&gt; ReplaceDocumentCollectionAsync(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.DocumentCollection documentCollection, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ReplaceDocumentCollectionAsync(System.Uri,Microsoft.Azure.Documents.DocumentCollection,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.DocumentCollection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="documentCollection" Type="Microsoft.Azure.Documents.DocumentCollection" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the document collection to be updated.</param>
        <param name="documentCollection">The updated document collection.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Replaces a document collection as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceOfferAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Offer&gt;&gt; ReplaceOfferAsync (Microsoft.Azure.Documents.Offer offer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Offer&gt;&gt; ReplaceOfferAsync(class Microsoft.Azure.Documents.Offer offer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ReplaceOfferAsync(Microsoft.Azure.Documents.Offer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Offer&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offer" Type="Microsoft.Azure.Documents.Offer" />
      </Parameters>
      <Docs>
        <param name="offer">The updated <see cref="T:Microsoft.Azure.Documents.Offer" /> to replace the existing resource with.</param>
        <summary>
            Replaces a <see cref="T:Microsoft.Azure.Documents.Offer" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Offer" /> containing the updated resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplacePermissionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt; ReplacePermissionAsync (Microsoft.Azure.Documents.Permission permission, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Permission&gt;&gt; ReplacePermissionAsync(class Microsoft.Azure.Documents.Permission permission, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ReplacePermissionAsync(Microsoft.Azure.Documents.Permission,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permission" Type="Microsoft.Azure.Documents.Permission" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="permission">The updated <see cref="T:Microsoft.Azure.Documents.Permission" /> to replace the existing resource with.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Replaces a <see cref="T:Microsoft.Azure.Documents.Permission" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Permission" /> containing the updated resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplacePermissionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt; ReplacePermissionAsync (Uri permissionUri, Microsoft.Azure.Documents.Permission permission, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Permission&gt;&gt; ReplacePermissionAsync(class System.Uri permissionUri, class Microsoft.Azure.Documents.Permission permission, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ReplacePermissionAsync(System.Uri,Microsoft.Azure.Documents.Permission,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissionUri" Type="System.Uri" />
        <Parameter Name="permission" Type="Microsoft.Azure.Documents.Permission" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="permissionUri">The URI for the permission to be updated.</param>
        <param name="permission">The updated permission.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Replaces a permission as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceStoredProcedureAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt; ReplaceStoredProcedureAsync (Microsoft.Azure.Documents.StoredProcedure storedProcedure, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.StoredProcedure&gt;&gt; ReplaceStoredProcedureAsync(class Microsoft.Azure.Documents.StoredProcedure storedProcedure, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ReplaceStoredProcedureAsync(Microsoft.Azure.Documents.StoredProcedure,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storedProcedure" Type="Microsoft.Azure.Documents.StoredProcedure" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="storedProcedure">The updated <see cref="T:Microsoft.Azure.Documents.StoredProcedure" /> to replace the existing resource with.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Replaces a <see cref="T:Microsoft.Azure.Documents.StoredProcedure" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.StoredProcedure" /> containing the updated resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceStoredProcedureAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt; ReplaceStoredProcedureAsync (Uri storedProcedureUri, Microsoft.Azure.Documents.StoredProcedure storedProcedure, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.StoredProcedure&gt;&gt; ReplaceStoredProcedureAsync(class System.Uri storedProcedureUri, class Microsoft.Azure.Documents.StoredProcedure storedProcedure, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ReplaceStoredProcedureAsync(System.Uri,Microsoft.Azure.Documents.StoredProcedure,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storedProcedureUri" Type="System.Uri" />
        <Parameter Name="storedProcedure" Type="Microsoft.Azure.Documents.StoredProcedure" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="storedProcedureUri">The URI for the stored procedure to be updated.</param>
        <param name="storedProcedure">The updated stored procedure.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Replace the specified stored procedure.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceTriggerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt; ReplaceTriggerAsync (Microsoft.Azure.Documents.Trigger trigger, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Trigger&gt;&gt; ReplaceTriggerAsync(class Microsoft.Azure.Documents.Trigger trigger, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ReplaceTriggerAsync(Microsoft.Azure.Documents.Trigger,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="Microsoft.Azure.Documents.Trigger" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="trigger">The updated <see cref="T:Microsoft.Azure.Documents.Trigger" /> to replace the existing resource with.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Replaces a <see cref="T:Microsoft.Azure.Documents.Trigger" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.Trigger" /> containing the updated resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceTriggerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt; ReplaceTriggerAsync (Uri triggerUri, Microsoft.Azure.Documents.Trigger trigger, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Trigger&gt;&gt; ReplaceTriggerAsync(class System.Uri triggerUri, class Microsoft.Azure.Documents.Trigger trigger, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ReplaceTriggerAsync(System.Uri,Microsoft.Azure.Documents.Trigger,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="triggerUri" Type="System.Uri" />
        <Parameter Name="trigger" Type="Microsoft.Azure.Documents.Trigger" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="triggerUri">The URI for the trigger to be updated.</param>
        <param name="trigger">The updated trigger.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Replaces a trigger as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceUserAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.User&gt;&gt; ReplaceUserAsync (Microsoft.Azure.Documents.User user, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.User&gt;&gt; ReplaceUserAsync(class Microsoft.Azure.Documents.User user, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ReplaceUserAsync(Microsoft.Azure.Documents.User,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.User&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="Microsoft.Azure.Documents.User" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="user">The updated <see cref="T:Microsoft.Azure.Documents.User" /> to replace the existing resource with.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Replaces a <see cref="T:Microsoft.Azure.Documents.User" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.User" /> containing the updated resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceUserAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.User&gt;&gt; ReplaceUserAsync (Uri userUri, Microsoft.Azure.Documents.User user, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.User&gt;&gt; ReplaceUserAsync(class System.Uri userUri, class Microsoft.Azure.Documents.User user, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ReplaceUserAsync(System.Uri,Microsoft.Azure.Documents.User,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.User&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userUri" Type="System.Uri" />
        <Parameter Name="user" Type="Microsoft.Azure.Documents.User" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="userUri">The URI for the user to be updated.</param>
        <param name="user">The updated user.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Replaces a user as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceUserDefinedFunctionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; ReplaceUserDefinedFunctionAsync (Microsoft.Azure.Documents.UserDefinedFunction function, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; ReplaceUserDefinedFunctionAsync(class Microsoft.Azure.Documents.UserDefinedFunction function, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ReplaceUserDefinedFunctionAsync(Microsoft.Azure.Documents.UserDefinedFunction,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="Microsoft.Azure.Documents.UserDefinedFunction" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="function">The updated <see cref="T:Microsoft.Azure.Documents.UserDefinedFunction" /> to replace the existing resource with.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Replaces a <see cref="T:Microsoft.Azure.Documents.UserDefinedFunction" /> as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="N:System.Threading.Tasks" /> containing a <see cref="T:Microsoft.Azure.Documents.Client.ResourceResponse`1" /> which wraps a <see cref="T:Microsoft.Azure.Documents.UserDefinedFunction" /> containing the updated resource record.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceUserDefinedFunctionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; ReplaceUserDefinedFunctionAsync (Uri userDefinedFunctionUri, Microsoft.Azure.Documents.UserDefinedFunction function, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; ReplaceUserDefinedFunctionAsync(class System.Uri userDefinedFunctionUri, class Microsoft.Azure.Documents.UserDefinedFunction function, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.ReplaceUserDefinedFunctionAsync(System.Uri,Microsoft.Azure.Documents.UserDefinedFunction,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userDefinedFunctionUri" Type="System.Uri" />
        <Parameter Name="function" Type="Microsoft.Azure.Documents.UserDefinedFunction" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="userDefinedFunctionUri">The URI for the user defined function to be updated.</param>
        <param name="function">The updated user defined function.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Replaces a user defined function as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateMediaAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.MediaResponse&gt; UpdateMediaAsync (string mediaLink, System.IO.Stream mediaStream, Microsoft.Azure.Documents.Client.MediaOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.MediaResponse&gt; UpdateMediaAsync(string mediaLink, class System.IO.Stream mediaStream, class Microsoft.Azure.Documents.Client.MediaOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.UpdateMediaAsync(System.String,System.IO.Stream,Microsoft.Azure.Documents.Client.MediaOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.MediaResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaLink" Type="System.String" />
        <Parameter Name="mediaStream" Type="System.IO.Stream" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.MediaOptions" />
      </Parameters>
      <Docs>
        <param name="mediaLink">The link for the media to be updated. /medias/media_rid </param>
        <param name="mediaStream">The <see cref="T:System.IO.Stream" /> of the attachment media.</param>
        <param name="options">The <see cref="T:Microsoft.Azure.Documents.Client.MediaOptions" /> for the request.</param>
        <summary>
            Replaces the specified media's content as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If either <paramref name="mediaLink" /> or <paramref name="mediaStream" /> is not set.</exception>
        <exception cref="T:System.ArgumentException">If <paramref name="mediaLink" /> is not in the form of /medias/{mediaId}.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpsertAttachmentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt; UpsertAttachmentAsync (string documentLink, object attachment, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Attachment&gt;&gt; UpsertAttachmentAsync(string documentLink, object attachment, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.UpsertAttachmentAsync(System.String,System.Object,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Upsert")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentLink" Type="System.String" />
        <Parameter Name="attachment" Type="System.Object" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentLink">The link of the parent document for this new attachment. E.g. dbs/db_rid/colls/col_rid/docs/doc_rid/</param>
        <param name="attachment">The attachment object.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Upserts an attachment as an asychronous operation.
            </summary>
        <returns>
            The <see cref="T:System.Threading.Tasks.Task" /> object representing the service response for the asynchronous operation.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpsertAttachmentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt; UpsertAttachmentAsync (Uri documentUri, object attachment, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Attachment&gt;&gt; UpsertAttachmentAsync(class System.Uri documentUri, object attachment, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.UpsertAttachmentAsync(System.Uri,System.Object,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Upsert")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentUri" Type="System.Uri" />
        <Parameter Name="attachment" Type="System.Object" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentUri">The URI of the document to upsert an attachment for.</param>
        <param name="attachment">The <see cref="T:Microsoft.Azure.Documents.Attachment" /> object.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Upserts an attachment as an asychronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpsertAttachmentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt; UpsertAttachmentAsync (string documentLink, System.IO.Stream mediaStream, Microsoft.Azure.Documents.Client.MediaOptions options = null, Microsoft.Azure.Documents.Client.RequestOptions requestOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Attachment&gt;&gt; UpsertAttachmentAsync(string documentLink, class System.IO.Stream mediaStream, class Microsoft.Azure.Documents.Client.MediaOptions options, class Microsoft.Azure.Documents.Client.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.UpsertAttachmentAsync(System.String,System.IO.Stream,Microsoft.Azure.Documents.Client.MediaOptions,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Upsert")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentLink" Type="System.String" />
        <Parameter Name="mediaStream" Type="System.IO.Stream" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.MediaOptions" />
        <Parameter Name="requestOptions" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentLink">The link of the parent document for this new attachment. E.g. dbs/db_rid/colls/col_rid/docs/doc_rid/</param>
        <param name="mediaStream">The stream of the attachment media.</param>
        <param name="options">The <see cref="T:Microsoft.Azure.Documents.Client.MediaOptions" /> for the request.</param>
        <param name="requestOptions">The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Upserts an attachment as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpsertAttachmentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt; UpsertAttachmentAsync (Uri documentUri, System.IO.Stream mediaStream, Microsoft.Azure.Documents.Client.MediaOptions options = null, Microsoft.Azure.Documents.Client.RequestOptions requestOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Attachment&gt;&gt; UpsertAttachmentAsync(class System.Uri documentUri, class System.IO.Stream mediaStream, class Microsoft.Azure.Documents.Client.MediaOptions options, class Microsoft.Azure.Documents.Client.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.UpsertAttachmentAsync(System.Uri,System.IO.Stream,Microsoft.Azure.Documents.Client.MediaOptions,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Upsert")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Attachment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentUri" Type="System.Uri" />
        <Parameter Name="mediaStream" Type="System.IO.Stream" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.MediaOptions" />
        <Parameter Name="requestOptions" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentUri">The URI of the document to upsert an attachment for.</param>
        <param name="mediaStream">The stream of the attachment media.</param>
        <param name="options">The <see cref="T:Microsoft.Azure.Documents.Client.MediaOptions" /> for the request.</param>
        <param name="requestOptions">The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Upserts an attachment as an asynchronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpsertDocumentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Document&gt;&gt; UpsertDocumentAsync (string collectionLink, object document, Microsoft.Azure.Documents.Client.RequestOptions options = null, bool disableAutomaticIdGeneration = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Document&gt;&gt; UpsertDocumentAsync(string collectionLink, object document, class Microsoft.Azure.Documents.Client.RequestOptions options, bool disableAutomaticIdGeneration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.UpsertDocumentAsync(System.String,System.Object,Microsoft.Azure.Documents.Client.RequestOptions,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Upsert")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Document&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="document" Type="System.Object" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
        <Parameter Name="disableAutomaticIdGeneration" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link of the <see cref="T:Microsoft.Azure.Documents.DocumentCollection" /> to upsert the document in. E.g. dbs/db_rid/colls/coll_rid/ </param>
        <param name="document">The document object to upsert.</param>
        <param name="options">(Optional) Any request options you wish to set. E.g. Specifying a Trigger to execute when creating the document. <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /></param>
        <param name="disableAutomaticIdGeneration">(Optional) Disables the automatic id generation, If this is True the system will throw an exception if the id property is missing from the Document.</param>
        <summary>
            Upserts a Document as an asychronous operation.
            </summary>
        <returns>The <see cref="T:Microsoft.Azure.Documents.Document" /> that was upserted contained within a <see cref="T:System.Threading.Tasks.Task" /> object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpsertDocumentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Document&gt;&gt; UpsertDocumentAsync (Uri documentCollectionUri, object document, Microsoft.Azure.Documents.Client.RequestOptions options = null, bool disableAutomaticIdGeneration = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Document&gt;&gt; UpsertDocumentAsync(class System.Uri documentCollectionUri, object document, class Microsoft.Azure.Documents.Client.RequestOptions options, bool disableAutomaticIdGeneration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.UpsertDocumentAsync(System.Uri,System.Object,Microsoft.Azure.Documents.Client.RequestOptions,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Upsert")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Document&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="document" Type="System.Object" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
        <Parameter Name="disableAutomaticIdGeneration" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the document collection to upsert the document in.</param>
        <param name="document">The document object.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <param name="disableAutomaticIdGeneration">A flag to disable the automatic id generation.</param>
        <summary>
            Upserts a document as an asychronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpsertPermissionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt; UpsertPermissionAsync (string userLink, Microsoft.Azure.Documents.Permission permission, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Permission&gt;&gt; UpsertPermissionAsync(string userLink, class Microsoft.Azure.Documents.Permission permission, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.UpsertPermissionAsync(System.String,Microsoft.Azure.Documents.Permission,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Upsert")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userLink" Type="System.String" />
        <Parameter Name="permission" Type="Microsoft.Azure.Documents.Permission" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="userLink">The link of the user to Upsert the permission for. E.g. dbs/db_rid/users/user_rid/ </param>
        <param name="permission">The <see cref="T:Microsoft.Azure.Documents.Permission" /> object.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Upserts a permission on a user object as an asychronous operation.
            </summary>
        <returns>A task object representing the service response for the asynchronous operation which contains the upserted <see cref="T:Microsoft.Azure.Documents.Permission" /> object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpsertPermissionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt; UpsertPermissionAsync (Uri userUri, Microsoft.Azure.Documents.Permission permission, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Permission&gt;&gt; UpsertPermissionAsync(class System.Uri userUri, class Microsoft.Azure.Documents.Permission permission, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.UpsertPermissionAsync(System.Uri,Microsoft.Azure.Documents.Permission,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Upsert")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Permission&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userUri" Type="System.Uri" />
        <Parameter Name="permission" Type="Microsoft.Azure.Documents.Permission" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="userUri">The URI of the user to upsert the permission for.</param>
        <param name="permission">The <see cref="T:Microsoft.Azure.Documents.Permission" /> object.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Upserts a permission as an asychronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpsertStoredProcedureAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt; UpsertStoredProcedureAsync (string collectionLink, Microsoft.Azure.Documents.StoredProcedure storedProcedure, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.StoredProcedure&gt;&gt; UpsertStoredProcedureAsync(string collectionLink, class Microsoft.Azure.Documents.StoredProcedure storedProcedure, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.UpsertStoredProcedureAsync(System.String,Microsoft.Azure.Documents.StoredProcedure,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Upsert")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="storedProcedure" Type="Microsoft.Azure.Documents.StoredProcedure" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link of the collection to upsert the stored procedure in. E.g. dbs/db_rid/colls/col_rid/</param>
        <param name="storedProcedure">The <see cref="T:Microsoft.Azure.Documents.StoredProcedure" /> object to upsert.</param>
        <param name="options">(Optional) Any <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Upserts a stored procedure as an asychronous operation.
            </summary>
        <returns>The <see cref="T:Microsoft.Azure.Documents.StoredProcedure" /> that was upserted contained within a <see cref="T:System.Threading.Tasks.Task" /> object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpsertStoredProcedureAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt; UpsertStoredProcedureAsync (Uri documentCollectionUri, Microsoft.Azure.Documents.StoredProcedure storedProcedure, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.StoredProcedure&gt;&gt; UpsertStoredProcedureAsync(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.StoredProcedure storedProcedure, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.UpsertStoredProcedureAsync(System.Uri,Microsoft.Azure.Documents.StoredProcedure,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Upsert")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.StoredProcedure&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="storedProcedure" Type="Microsoft.Azure.Documents.StoredProcedure" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the document collection to upsert the stored procedure in.</param>
        <param name="storedProcedure">The <see cref="T:Microsoft.Azure.Documents.StoredProcedure" /> object.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Upserts a stored procedure as an asychronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpsertTriggerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt; UpsertTriggerAsync (string collectionLink, Microsoft.Azure.Documents.Trigger trigger, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Trigger&gt;&gt; UpsertTriggerAsync(string collectionLink, class Microsoft.Azure.Documents.Trigger trigger, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.UpsertTriggerAsync(System.String,Microsoft.Azure.Documents.Trigger,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Upsert")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="trigger" Type="Microsoft.Azure.Documents.Trigger" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link of the <see cref="T:Microsoft.Azure.Documents.DocumentCollection" /> to upsert the trigger in. E.g. dbs/db_rid/colls/col_rid/ </param>
        <param name="trigger">The <see cref="T:Microsoft.Azure.Documents.Trigger" /> object to upsert.</param>
        <param name="options">(Optional) Any <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Upserts a trigger as an asychronous operation.
            </summary>
        <returns>A task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpsertTriggerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt; UpsertTriggerAsync (Uri documentCollectionUri, Microsoft.Azure.Documents.Trigger trigger, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.Trigger&gt;&gt; UpsertTriggerAsync(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.Trigger trigger, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.UpsertTriggerAsync(System.Uri,Microsoft.Azure.Documents.Trigger,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Upsert")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.Trigger&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="trigger" Type="Microsoft.Azure.Documents.Trigger" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the document collection to upsert the trigger in.</param>
        <param name="trigger">The <see cref="T:Microsoft.Azure.Documents.Trigger" /> object.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Upserts a trigger as an asychronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpsertUserAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.User&gt;&gt; UpsertUserAsync (string databaseLink, Microsoft.Azure.Documents.User user, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.User&gt;&gt; UpsertUserAsync(string databaseLink, class Microsoft.Azure.Documents.User user, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.UpsertUserAsync(System.String,Microsoft.Azure.Documents.User,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Upsert")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.User&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseLink" Type="System.String" />
        <Parameter Name="user" Type="Microsoft.Azure.Documents.User" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="databaseLink">The link of the database to upsert the user in. E.g. dbs/db_rid/ </param>
        <param name="user">The <see cref="T:Microsoft.Azure.Documents.User" /> object to upsert.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Upserts a permission on a user object as an asychronous operation.
            </summary>
        <returns>A task object representing the service response for the asynchronous operation which contains the upserted <see cref="T:Microsoft.Azure.Documents.User" /> object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpsertUserAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.User&gt;&gt; UpsertUserAsync (Uri databaseUri, Microsoft.Azure.Documents.User user, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.User&gt;&gt; UpsertUserAsync(class System.Uri databaseUri, class Microsoft.Azure.Documents.User user, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.UpsertUserAsync(System.Uri,Microsoft.Azure.Documents.User,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Upsert")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.User&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseUri" Type="System.Uri" />
        <Parameter Name="user" Type="Microsoft.Azure.Documents.User" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="databaseUri">The URI of the database to upsert the user in.</param>
        <param name="user">The <see cref="T:Microsoft.Azure.Documents.User" /> object.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Upserts a user as an asychronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpsertUserDefinedFunctionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; UpsertUserDefinedFunctionAsync (string collectionLink, Microsoft.Azure.Documents.UserDefinedFunction function, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; UpsertUserDefinedFunctionAsync(string collectionLink, class Microsoft.Azure.Documents.UserDefinedFunction function, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.UpsertUserDefinedFunctionAsync(System.String,Microsoft.Azure.Documents.UserDefinedFunction,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Upsert")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionLink" Type="System.String" />
        <Parameter Name="function" Type="Microsoft.Azure.Documents.UserDefinedFunction" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="collectionLink">The link of the <see cref="T:Microsoft.Azure.Documents.DocumentCollection" /> to upsert the user defined function in. E.g. dbs/db_rid/colls/col_rid/ </param>
        <param name="function">The <see cref="T:Microsoft.Azure.Documents.UserDefinedFunction" /> object to upsert.</param>
        <param name="options">(Optional) Any <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" />for this request.</param>
        <summary>
            Upserts a user defined function as an asychronous operation.
            </summary>
        <returns>A task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpsertUserDefinedFunctionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; UpsertUserDefinedFunctionAsync (Uri documentCollectionUri, Microsoft.Azure.Documents.UserDefinedFunction function, Microsoft.Azure.Documents.Client.RequestOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.Client.ResourceResponse`1&lt;class Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt; UpsertUserDefinedFunctionAsync(class System.Uri documentCollectionUri, class Microsoft.Azure.Documents.UserDefinedFunction function, class Microsoft.Azure.Documents.Client.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.Client.TransientFaultHandling.IReliableReadWriteDocumentClient.UpsertUserDefinedFunctionAsync(System.Uri,Microsoft.Azure.Documents.UserDefinedFunction,Microsoft.Azure.Documents.Client.RequestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Upsert")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.Client.ResourceResponse&lt;Microsoft.Azure.Documents.UserDefinedFunction&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentCollectionUri" Type="System.Uri" />
        <Parameter Name="function" Type="Microsoft.Azure.Documents.UserDefinedFunction" />
        <Parameter Name="options" Type="Microsoft.Azure.Documents.Client.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="documentCollectionUri">The URI of the document collection to upsert the user defined function in.</param>
        <param name="function">The <see cref="T:Microsoft.Azure.Documents.UserDefinedFunction" /> object.</param>
        <param name="options">(Optional) The <see cref="T:Microsoft.Azure.Documents.Client.RequestOptions" /> for the request.</param>
        <summary>
            Upserts a user defined function as an asychronous operation.
            </summary>
        <returns>The task object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Overview>
  <Assemblies>
    <Assembly Name="Microsoft.Azure.Mobile.Server" Version="2.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 b5 fc 90 e7 02 7f 67 87 1e 77 3a 8f de 89 38 c8 1d d4 02 ba 65 b9 20 1d 60 59 3e 96 c4 92 65 1e 88 9c c1 3f 14 15 eb b5 3f ac 11 31 ae 0b d3 33 c5 ee 60 21 67 2d 97 18 ea 31 a8 ae bd 0d a0 07 2f 25 d8 7d ba 6f c9 0f fd 59 8e d4 da 35 e4 4c 39 8c 45 43 07 e8 e3 3b 84 26 14 3d ae c9 f5 96 83 6f 97 c8 f7 47 50 e5 97 5c 64 e2 18 9f 45 de f4 6b 2a 2b 12 47 ad c3 65 2b f5 c3 08 05 5d a9 ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("© Microsoft Corporation.  All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("rev 3d4d94d from branch master at 1/9/2017 10:07:54 PM")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("2.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("2.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyMetadata("Serviceable", "True")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft® Azure Mobile Apps Server SDK")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.Azure.Mobile.Server")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Resources.NeutralResourcesLanguage("en-US")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.InternalsVisibleTo("Microsoft.Azure.Mobile.Server.Test, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.InternalsVisibleTo("Microsoft.Azure.Mobile.Server.Quickstart.Test, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.InternalsVisibleTo("DynamicProxyGenAssembly2, PublicKey=0024000004800000940000000602000000240000525341310004000001000100c547cac37abd99c8db225ef2f6c8a3602f3b3606cc9891605d02baa56104f4cfc0734aa39b93bf7852f7d9266654753cc297e7d2edfe0bac1cdcf9f717241550e0a7b191195b7667bb4f64bcb8e2121380fd1d9d46ad2d92d2d15605093924cceaf74c4861eff62abf69b9291ed0a340e113be11e6a7d3113e92484cf7045cc7")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETFramework,Version=v4.6", FrameworkDisplayName="")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
  </Assemblies>
  <Remarks>To be added.</Remarks>
  <Copyright>To be added.</Copyright>
  <Types>
    <Namespace Name="Microsoft.Azure.Mobile.Server">
      <Type Name="ConnectionSettings" Kind="Class" />
      <Type Name="LogCategories" Kind="Class" />
      <Type Name="MobileAppSettingsDictionary" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Azure.Mobile.Server.Cache">
      <Type Name="CacheOptions" Kind="Enumeration" />
      <Type Name="CachePolicy" Kind="Class" />
      <Type Name="CachePolicyProvider" Kind="Class" />
      <Type Name="ICachePolicyProvider" Kind="Interface" />
    </Namespace>
    <Namespace Name="Microsoft.Azure.Mobile.Server.Config">
      <Type Name="AppConfiguration" Kind="Class" />
      <Type Name="IAppConfiguration" Kind="Interface" />
      <Type Name="IMobileAppControllerConfigProvider" Kind="Interface" />
      <Type Name="IMobileAppExtensionConfigProvider" Kind="Interface" />
      <Type Name="IMobileAppSettingsProvider" Kind="Interface" />
      <Type Name="MobileAppConfiguration" Kind="Class" />
      <Type Name="MobileAppControllerAttribute" Kind="Class" />
      <Type Name="MobileAppControllerConfigProvider" Kind="Class" />
      <Type Name="MobileAppSettingsKeys" Kind="Class" />
      <Type Name="MobileAppSettingsProvider" Kind="Class" />
      <Type Name="SetRouteConstraint`1" DisplayName="SetRouteConstraint&lt;TSet&gt;" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Azure.Mobile.Server.Content">
      <Type Name="StaticHtmlActionResult" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Azure.Mobile.Server.Serialization">
      <Type Name="ServiceContractResolver" Kind="Class" />
    </Namespace>
    <Namespace Name="System.Net.Http">
      <Type Name="HttpRequestMessageExtensions" Kind="Class" />
    </Namespace>
    <Namespace Name="System.Web.Http">
      <Type Name="HttpConfigurationExtensions" Kind="Class" />
      <Type Name="TraceWriterExtensions" Kind="Class" />
    </Namespace>
  </Types>
  <Title>Microsoft.Azure.Mobile.Server</Title>
  <ExtensionMethods>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Net.Http.HttpRequestMessage" />
      </Targets>
      <Member MemberName="CreateBadRequestResponse">
        <MemberSignature Language="C#" Value="public static System.Net.Http.HttpResponseMessage CreateBadRequestResponse (this System.Net.Http.HttpRequestMessage request);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Http.HttpResponseMessage CreateBadRequestResponse(class System.Net.Http.HttpRequestMessage request) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpRequestMessageExtensions.CreateBadRequestResponse(System.Net.Http.HttpRequestMessage)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" RefType="this" />
        </Parameters>
        <Docs>
          <param name="request">The current <see cref="T:System.Net.Http.HttpRequestMessage" />.</param>
          <summary>
            Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> with an <see cref="F:System.Net.HttpStatusCode.BadRequest" /> status code and a  default
            <see cref="T:System.Web.Http.HttpError" /> as HTTP response body.
            </summary>
        </Docs>
        <Link Type="System.Net.Http.HttpRequestMessageExtensions" Member="M:System.Net.Http.HttpRequestMessageExtensions.CreateBadRequestResponse(System.Net.Http.HttpRequestMessage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Net.Http.HttpRequestMessage" />
      </Targets>
      <Member MemberName="CreateBadRequestResponse">
        <MemberSignature Language="C#" Value="public static System.Net.Http.HttpResponseMessage CreateBadRequestResponse (this System.Net.Http.HttpRequestMessage request, string format, object[] args);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Http.HttpResponseMessage CreateBadRequestResponse(class System.Net.Http.HttpRequestMessage request, string format, object[] args) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpRequestMessageExtensions.CreateBadRequestResponse(System.Net.Http.HttpRequestMessage,System.String,System.Object[])" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" RefType="this" />
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="request">The current <see cref="T:System.Net.Http.HttpRequestMessage" />.</param>
          <param name="format">A composite format string.</param>
          <param name="args">An object array that contains zero or more objects to format.</param>
          <summary>
            Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> with an <see cref="F:System.Net.HttpStatusCode.BadRequest" /> status code and a
            <see cref="T:System.Web.Http.HttpError" /> containing the provided message as HTTP response body.
            </summary>
        </Docs>
        <Link Type="System.Net.Http.HttpRequestMessageExtensions" Member="M:System.Net.Http.HttpRequestMessageExtensions.CreateBadRequestResponse(System.Net.Http.HttpRequestMessage,System.String,System.Object[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Net.Http.HttpRequestMessage" />
      </Targets>
      <Member MemberName="CreateNotFoundResponse">
        <MemberSignature Language="C#" Value="public static System.Net.Http.HttpResponseMessage CreateNotFoundResponse (this System.Net.Http.HttpRequestMessage request);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Http.HttpResponseMessage CreateNotFoundResponse(class System.Net.Http.HttpRequestMessage request) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpRequestMessageExtensions.CreateNotFoundResponse(System.Net.Http.HttpRequestMessage)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" RefType="this" />
        </Parameters>
        <Docs>
          <param name="request">The current <see cref="T:System.Net.Http.HttpRequestMessage" />.</param>
          <summary>
            Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> with an <see cref="F:System.Net.HttpStatusCode.NotFound" /> status code and a default
            <see cref="T:System.Web.Http.HttpError" /> as HTTP response body.
            </summary>
        </Docs>
        <Link Type="System.Net.Http.HttpRequestMessageExtensions" Member="M:System.Net.Http.HttpRequestMessageExtensions.CreateNotFoundResponse(System.Net.Http.HttpRequestMessage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Net.Http.HttpRequestMessage" />
      </Targets>
      <Member MemberName="CreateNotFoundResponse">
        <MemberSignature Language="C#" Value="public static System.Net.Http.HttpResponseMessage CreateNotFoundResponse (this System.Net.Http.HttpRequestMessage request, string format, object[] args);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Http.HttpResponseMessage CreateNotFoundResponse(class System.Net.Http.HttpRequestMessage request, string format, object[] args) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpRequestMessageExtensions.CreateNotFoundResponse(System.Net.Http.HttpRequestMessage,System.String,System.Object[])" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" RefType="this" />
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="request">The current <see cref="T:System.Net.Http.HttpRequestMessage" />.</param>
          <param name="format">A composite format string.</param>
          <param name="args">An object array that contains zero or more objects to format.</param>
          <summary>
            Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> with an <see cref="F:System.Net.HttpStatusCode.NotFound" /> status code and a
            <see cref="T:System.Web.Http.HttpError" /> containing the provided message as HTTP response body.
            </summary>
        </Docs>
        <Link Type="System.Net.Http.HttpRequestMessageExtensions" Member="M:System.Net.Http.HttpRequestMessageExtensions.CreateNotFoundResponse(System.Net.Http.HttpRequestMessage,System.String,System.Object[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Net.Http.HttpRequestMessage" />
      </Targets>
      <Member MemberName="CreateUnauthorizedResponse">
        <MemberSignature Language="C#" Value="public static System.Net.Http.HttpResponseMessage CreateUnauthorizedResponse (this System.Net.Http.HttpRequestMessage request);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Http.HttpResponseMessage CreateUnauthorizedResponse(class System.Net.Http.HttpRequestMessage request) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpRequestMessageExtensions.CreateUnauthorizedResponse(System.Net.Http.HttpRequestMessage)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" RefType="this" />
        </Parameters>
        <Docs>
          <param name="request">The current <see cref="T:System.Net.Http.HttpRequestMessage" />.</param>
          <summary>
            Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> with an <see cref="F:System.Net.HttpStatusCode.Unauthorized" /> status code and a  default
            <see cref="T:System.Web.Http.HttpError" /> as HTTP response body.
            </summary>
        </Docs>
        <Link Type="System.Net.Http.HttpRequestMessageExtensions" Member="M:System.Net.Http.HttpRequestMessageExtensions.CreateUnauthorizedResponse(System.Net.Http.HttpRequestMessage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Net.Http.HttpRequestMessage" />
      </Targets>
      <Member MemberName="CreateUnauthorizedResponse">
        <MemberSignature Language="C#" Value="public static System.Net.Http.HttpResponseMessage CreateUnauthorizedResponse (this System.Net.Http.HttpRequestMessage request, string format, object[] args);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Http.HttpResponseMessage CreateUnauthorizedResponse(class System.Net.Http.HttpRequestMessage request, string format, object[] args) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpRequestMessageExtensions.CreateUnauthorizedResponse(System.Net.Http.HttpRequestMessage,System.String,System.Object[])" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" RefType="this" />
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]">
            <Attributes>
              <Attribute>
                <AttributeName>System.ParamArray</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="request">The current <see cref="T:System.Net.Http.HttpRequestMessage" />.</param>
          <param name="format">A composite format string.</param>
          <param name="args">An object array that contains zero or more objects to format.</param>
          <summary>
            Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> with an <see cref="F:System.Net.HttpStatusCode.Unauthorized" /> status code and a
            <see cref="T:System.Web.Http.HttpError" /> containing the provided message as HTTP response body.
            </summary>
        </Docs>
        <Link Type="System.Net.Http.HttpRequestMessageExtensions" Member="M:System.Net.Http.HttpRequestMessageExtensions.CreateUnauthorizedResponse(System.Net.Http.HttpRequestMessage,System.String,System.Object[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Net.Http.HttpRequestMessage" />
      </Targets>
      <Member MemberName="GetHeaderOrDefault">
        <MemberSignature Language="C#" Value="public static string GetHeaderOrDefault (this System.Net.Http.HttpRequestMessage request, string name);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetHeaderOrDefault(class System.Net.Http.HttpRequestMessage request, string name) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpRequestMessageExtensions.GetHeaderOrDefault(System.Net.Http.HttpRequestMessage,System.String)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" RefType="this" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="request">The request for where to look for the header.</param>
          <param name="name">The name of the header.</param>
          <summary>
            Gets the first HTTP header value as a single value or <c>null</c> if not present.
            </summary>
        </Docs>
        <Link Type="System.Net.Http.HttpRequestMessageExtensions" Member="M:System.Net.Http.HttpRequestMessageExtensions.GetHeaderOrDefault(System.Net.Http.HttpRequestMessage,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Net.Http.HttpRequestMessage" />
      </Targets>
      <Member MemberName="IsIfNoneMatch">
        <MemberSignature Language="C#" Value="public static bool IsIfNoneMatch (this System.Net.Http.HttpRequestMessage request, System.Net.Http.Headers.EntityTagHeaderValue current);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsIfNoneMatch(class System.Net.Http.HttpRequestMessage request, class System.Net.Http.Headers.EntityTagHeaderValue current) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpRequestMessageExtensions.IsIfNoneMatch(System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.EntityTagHeaderValue)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" RefType="this" />
          <Parameter Name="current" Type="System.Net.Http.Headers.EntityTagHeaderValue" />
        </Parameters>
        <Docs>
          <param name="request">The request to match.</param>
          <param name="current">The current etag for the resource. If there is no current etag (i.e. the resource does not yet
            exist) then use <c>null</c>.</param>
          <summary>
            Checks if the request is conditional having a <c>If-None-Match</c> HTTP header field with a value that matches the
            <paramref name="current" /> value. In the case of <c>true</c> this can be used to indicate that a
            304 (Not Modified) or a 412 (Precondition Failed) status code should be used.
            </summary>
        </Docs>
        <Link Type="System.Net.Http.HttpRequestMessageExtensions" Member="M:System.Net.Http.HttpRequestMessageExtensions.IsIfNoneMatch(System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.EntityTagHeaderValue)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Http.HttpConfiguration" />
      </Targets>
      <Member MemberName="GetCachePolicyProvider">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Mobile.Server.Cache.ICachePolicyProvider GetCachePolicyProvider (this System.Web.Http.HttpConfiguration config);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Mobile.Server.Cache.ICachePolicyProvider GetCachePolicyProvider(class System.Web.Http.HttpConfiguration config) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Http.HttpConfigurationExtensions.GetCachePolicyProvider(System.Web.Http.HttpConfiguration)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Mobile.Server.Cache.ICachePolicyProvider</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="config" Type="System.Web.Http.HttpConfiguration" RefType="this" />
        </Parameters>
        <Docs>
          <param name="config">The current <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
          <summary>
            Gets the <see cref="T:Microsoft.Azure.Mobile.Server.Cache.ICachePolicyProvider" /> registered with the current <see cref="T:System.Web.Http.HttpConfiguration" />.
            </summary>
        </Docs>
        <Link Type="System.Web.Http.HttpConfigurationExtensions" Member="M:System.Web.Http.HttpConfigurationExtensions.GetCachePolicyProvider(System.Web.Http.HttpConfiguration)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Http.HttpConfiguration" />
      </Targets>
      <Member MemberName="GetMobileAppConfiguration">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Mobile.Server.Config.MobileAppConfiguration GetMobileAppConfiguration (this System.Web.Http.HttpConfiguration config);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Mobile.Server.Config.MobileAppConfiguration GetMobileAppConfiguration(class System.Web.Http.HttpConfiguration config) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Http.HttpConfigurationExtensions.GetMobileAppConfiguration(System.Web.Http.HttpConfiguration)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Mobile.Server.Config.MobileAppConfiguration</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="config" Type="System.Web.Http.HttpConfiguration" RefType="this" />
        </Parameters>
        <Docs>
          <param name="config">The current <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
          <summary>
            Gets the <see cref="T:Microsoft.Azure.Mobile.Server.Config.MobileAppConfiguration" /> registered with the current <see cref="T:System.Web.Http.HttpConfiguration" />.
            </summary>
        </Docs>
        <Link Type="System.Web.Http.HttpConfigurationExtensions" Member="M:System.Web.Http.HttpConfigurationExtensions.GetMobileAppConfiguration(System.Web.Http.HttpConfiguration)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Http.HttpConfiguration" />
      </Targets>
      <Member MemberName="GetMobileAppControllerConfigProvider">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Mobile.Server.Config.IMobileAppControllerConfigProvider GetMobileAppControllerConfigProvider (this System.Web.Http.HttpConfiguration config);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Mobile.Server.Config.IMobileAppControllerConfigProvider GetMobileAppControllerConfigProvider(class System.Web.Http.HttpConfiguration config) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Http.HttpConfigurationExtensions.GetMobileAppControllerConfigProvider(System.Web.Http.HttpConfiguration)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Mobile.Server.Config.IMobileAppControllerConfigProvider</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="config" Type="System.Web.Http.HttpConfiguration" RefType="this" />
        </Parameters>
        <Docs>
          <param name="config">The current <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
          <summary>
            Gets the <see cref="T:Microsoft.Azure.Mobile.Server.Config.IMobileAppControllerConfigProvider" /> registered with the current <see cref="T:System.Web.Http.HttpConfiguration" />.
            </summary>
        </Docs>
        <Link Type="System.Web.Http.HttpConfigurationExtensions" Member="M:System.Web.Http.HttpConfigurationExtensions.GetMobileAppControllerConfigProvider(System.Web.Http.HttpConfiguration)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Http.HttpConfiguration" />
      </Targets>
      <Member MemberName="GetMobileAppSettingsProvider">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Mobile.Server.Config.IMobileAppSettingsProvider GetMobileAppSettingsProvider (this System.Web.Http.HttpConfiguration config);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Mobile.Server.Config.IMobileAppSettingsProvider GetMobileAppSettingsProvider(class System.Web.Http.HttpConfiguration config) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Http.HttpConfigurationExtensions.GetMobileAppSettingsProvider(System.Web.Http.HttpConfiguration)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Mobile.Server.Config.IMobileAppSettingsProvider</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="config" Type="System.Web.Http.HttpConfiguration" RefType="this" />
        </Parameters>
        <Docs>
          <param name="config">The current <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
          <summary>
            Gets the <see cref="T:Microsoft.Azure.Mobile.Server.Config.IMobileAppSettingsProvider" /> registered with the current <see cref="T:System.Web.Http.HttpConfiguration" />.
            </summary>
        </Docs>
        <Link Type="System.Web.Http.HttpConfigurationExtensions" Member="M:System.Web.Http.HttpConfigurationExtensions.GetMobileAppSettingsProvider(System.Web.Http.HttpConfiguration)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Http.HttpConfiguration" />
      </Targets>
      <Member MemberName="SetCachePolicyProvider">
        <MemberSignature Language="C#" Value="public static void SetCachePolicyProvider (this System.Web.Http.HttpConfiguration config, Microsoft.Azure.Mobile.Server.Cache.ICachePolicyProvider provider);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCachePolicyProvider(class System.Web.Http.HttpConfiguration config, class Microsoft.Azure.Mobile.Server.Cache.ICachePolicyProvider provider) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Http.HttpConfigurationExtensions.SetCachePolicyProvider(System.Web.Http.HttpConfiguration,Microsoft.Azure.Mobile.Server.Cache.ICachePolicyProvider)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="config" Type="System.Web.Http.HttpConfiguration" RefType="this" />
          <Parameter Name="provider" Type="Microsoft.Azure.Mobile.Server.Cache.ICachePolicyProvider" />
        </Parameters>
        <Docs>
          <param name="config">The current <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
          <param name="provider">The instance to register.</param>
          <summary>
            Registers an <see cref="T:Microsoft.Azure.Mobile.Server.Cache.ICachePolicyProvider" /> with the current <see cref="T:System.Web.Http.HttpConfiguration" />.
            </summary>
        </Docs>
        <Link Type="System.Web.Http.HttpConfigurationExtensions" Member="M:System.Web.Http.HttpConfigurationExtensions.SetCachePolicyProvider(System.Web.Http.HttpConfiguration,Microsoft.Azure.Mobile.Server.Cache.ICachePolicyProvider)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Http.HttpConfiguration" />
      </Targets>
      <Member MemberName="SetMobileAppConfiguration">
        <MemberSignature Language="C#" Value="public static void SetMobileAppConfiguration (this System.Web.Http.HttpConfiguration config, Microsoft.Azure.Mobile.Server.Config.MobileAppConfiguration options);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetMobileAppConfiguration(class System.Web.Http.HttpConfiguration config, class Microsoft.Azure.Mobile.Server.Config.MobileAppConfiguration options) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Http.HttpConfigurationExtensions.SetMobileAppConfiguration(System.Web.Http.HttpConfiguration,Microsoft.Azure.Mobile.Server.Config.MobileAppConfiguration)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="config" Type="System.Web.Http.HttpConfiguration" RefType="this" />
          <Parameter Name="options" Type="Microsoft.Azure.Mobile.Server.Config.MobileAppConfiguration" />
        </Parameters>
        <Docs>
          <param name="config">The current <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
          <param name="options">The instance to register.</param>
          <summary>
            Registers a <see cref="T:Microsoft.Azure.Mobile.Server.Config.MobileAppConfiguration" /> with the current <see cref="T:System.Web.Http.HttpConfiguration" />.
            </summary>
        </Docs>
        <Link Type="System.Web.Http.HttpConfigurationExtensions" Member="M:System.Web.Http.HttpConfigurationExtensions.SetMobileAppConfiguration(System.Web.Http.HttpConfiguration,Microsoft.Azure.Mobile.Server.Config.MobileAppConfiguration)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Http.HttpConfiguration" />
      </Targets>
      <Member MemberName="SetMobileAppControllerConfigProvider">
        <MemberSignature Language="C#" Value="public static void SetMobileAppControllerConfigProvider (this System.Web.Http.HttpConfiguration config, Microsoft.Azure.Mobile.Server.Config.IMobileAppControllerConfigProvider configProvider);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetMobileAppControllerConfigProvider(class System.Web.Http.HttpConfiguration config, class Microsoft.Azure.Mobile.Server.Config.IMobileAppControllerConfigProvider configProvider) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Http.HttpConfigurationExtensions.SetMobileAppControllerConfigProvider(System.Web.Http.HttpConfiguration,Microsoft.Azure.Mobile.Server.Config.IMobileAppControllerConfigProvider)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="config" Type="System.Web.Http.HttpConfiguration" RefType="this" />
          <Parameter Name="configProvider" Type="Microsoft.Azure.Mobile.Server.Config.IMobileAppControllerConfigProvider" />
        </Parameters>
        <Docs>
          <param name="config">The current <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
          <param name="configProvider">The instance to register.</param>
          <summary>
            Registers an <see cref="T:Microsoft.Azure.Mobile.Server.Config.IMobileAppControllerConfigProvider" /> with the current <see cref="T:System.Web.Http.HttpConfiguration" />.
            The registered class provides the base settings for controllers using the <see cref="T:Microsoft.Azure.Mobile.Server.Config.MobileAppControllerAttribute" />.
            </summary>
        </Docs>
        <Link Type="System.Web.Http.HttpConfigurationExtensions" Member="M:System.Web.Http.HttpConfigurationExtensions.SetMobileAppControllerConfigProvider(System.Web.Http.HttpConfiguration,Microsoft.Azure.Mobile.Server.Config.IMobileAppControllerConfigProvider)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Http.HttpConfiguration" />
      </Targets>
      <Member MemberName="SetMobileAppSettingsProvider">
        <MemberSignature Language="C#" Value="public static void SetMobileAppSettingsProvider (this System.Web.Http.HttpConfiguration config, Microsoft.Azure.Mobile.Server.Config.IMobileAppSettingsProvider provider);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetMobileAppSettingsProvider(class System.Web.Http.HttpConfiguration config, class Microsoft.Azure.Mobile.Server.Config.IMobileAppSettingsProvider provider) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Http.HttpConfigurationExtensions.SetMobileAppSettingsProvider(System.Web.Http.HttpConfiguration,Microsoft.Azure.Mobile.Server.Config.IMobileAppSettingsProvider)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="config" Type="System.Web.Http.HttpConfiguration" RefType="this" />
          <Parameter Name="provider" Type="Microsoft.Azure.Mobile.Server.Config.IMobileAppSettingsProvider" />
        </Parameters>
        <Docs>
          <param name="config">The current <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
          <param name="provider">The instance to register.</param>
          <summary>
            Registers an <see cref="T:Microsoft.Azure.Mobile.Server.Config.IMobileAppSettingsProvider" /> with the current <see cref="T:System.Web.Http.HttpConfiguration" />.
            </summary>
        </Docs>
        <Link Type="System.Web.Http.HttpConfigurationExtensions" Member="M:System.Web.Http.HttpConfigurationExtensions.SetMobileAppSettingsProvider(System.Web.Http.HttpConfiguration,Microsoft.Azure.Mobile.Server.Config.IMobileAppSettingsProvider)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Http.Tracing.ITraceWriter" />
      </Targets>
      <Member MemberName="Debug">
        <MemberSignature Language="C#" Value="public static void Debug (this System.Web.Http.Tracing.ITraceWriter traceWriter, string message, System.Net.Http.HttpRequestMessage request = null, string category = &quot;&quot;);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Debug(class System.Web.Http.Tracing.ITraceWriter traceWriter, string message, class System.Net.Http.HttpRequestMessage request, string category) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Http.TraceWriterExtensions.Debug(System.Web.Http.Tracing.ITraceWriter,System.String,System.Net.Http.HttpRequestMessage,System.String)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="traceWriter" Type="System.Web.Http.Tracing.ITraceWriter" RefType="this" />
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
          <Parameter Name="category" Type="System.String">
            <Attributes>
              <Attribute>
                <AttributeName>System.Runtime.CompilerServices.CallerMemberName</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="traceWriter">The <see cref="T:System.Web.Http.Tracing.ITraceWriter" /></param>
          <param name="message">The message to log.</param>
          <param name="request">Request used for message correlation. Defaults to null.</param>
          <param name="category">The category for the trace. Defaults to the method or property name of the caller.</param>
          <summary>
            Writes a <see cref="T:System.Web.Http.Tracing.TraceRecord" /> at <see cref="F:System.Web.Http.Tracing.TraceLevel.Debug" /> with the given message.
            </summary>
        </Docs>
        <Link Type="System.Web.Http.TraceWriterExtensions" Member="M:System.Web.Http.TraceWriterExtensions.Debug(System.Web.Http.Tracing.ITraceWriter,System.String,System.Net.Http.HttpRequestMessage,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Http.Tracing.ITraceWriter" />
      </Targets>
      <Member MemberName="Error">
        <MemberSignature Language="C#" Value="public static void Error (this System.Web.Http.Tracing.ITraceWriter traceWriter, Exception exception, System.Net.Http.HttpRequestMessage request = null, string category = &quot;&quot;);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Error(class System.Web.Http.Tracing.ITraceWriter traceWriter, class System.Exception exception, class System.Net.Http.HttpRequestMessage request, string category) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Http.TraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.Exception,System.Net.Http.HttpRequestMessage,System.String)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="traceWriter" Type="System.Web.Http.Tracing.ITraceWriter" RefType="this" />
          <Parameter Name="exception" Type="System.Exception" />
          <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
          <Parameter Name="category" Type="System.String">
            <Attributes>
              <Attribute>
                <AttributeName>System.Runtime.CompilerServices.CallerMemberName</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="traceWriter">The <see cref="T:System.Web.Http.Tracing.ITraceWriter" /></param>
          <param name="exception">The exception to log.</param>
          <param name="request">Request used for message correlation. Defaults to null.</param>
          <param name="category">The category for the trace. Defaults to the method or property name of the caller.</param>
          <summary>
            Writes a <see cref="T:System.Web.Http.Tracing.TraceRecord" /> at <see cref="F:System.Web.Http.Tracing.TraceLevel.Error" /> with the given <paramref name="exception" />.
            </summary>
        </Docs>
        <Link Type="System.Web.Http.TraceWriterExtensions" Member="M:System.Web.Http.TraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.Exception,System.Net.Http.HttpRequestMessage,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Http.Tracing.ITraceWriter" />
      </Targets>
      <Member MemberName="Error">
        <MemberSignature Language="C#" Value="public static void Error (this System.Web.Http.Tracing.ITraceWriter traceWriter, string message, Exception exception, System.Net.Http.HttpRequestMessage request = null, string category = &quot;&quot;);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Error(class System.Web.Http.Tracing.ITraceWriter traceWriter, string message, class System.Exception exception, class System.Net.Http.HttpRequestMessage request, string category) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Http.TraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.String,System.Exception,System.Net.Http.HttpRequestMessage,System.String)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="traceWriter" Type="System.Web.Http.Tracing.ITraceWriter" RefType="this" />
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="exception" Type="System.Exception" />
          <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
          <Parameter Name="category" Type="System.String">
            <Attributes>
              <Attribute>
                <AttributeName>System.Runtime.CompilerServices.CallerMemberName</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="traceWriter">The <see cref="T:System.Web.Http.Tracing.ITraceWriter" /></param>
          <param name="message">The message to log.</param>
          <param name="exception">The exception to log.</param>
          <param name="request">Request used for message correlation. Defaults to null.</param>
          <param name="category">The category for the trace. Defaults to the method or property name of the caller.</param>
          <summary>
            Writes a <see cref="T:System.Web.Http.Tracing.TraceRecord" /> at <see cref="F:System.Web.Http.Tracing.TraceLevel.Error" /> with the given message and exception.
            </summary>
        </Docs>
        <Link Type="System.Web.Http.TraceWriterExtensions" Member="M:System.Web.Http.TraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.String,System.Exception,System.Net.Http.HttpRequestMessage,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Http.Tracing.ITraceWriter" />
      </Targets>
      <Member MemberName="Error">
        <MemberSignature Language="C#" Value="public static void Error (this System.Web.Http.Tracing.ITraceWriter traceWriter, string message, System.Net.Http.HttpRequestMessage request = null, string category = &quot;&quot;);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Error(class System.Web.Http.Tracing.ITraceWriter traceWriter, string message, class System.Net.Http.HttpRequestMessage request, string category) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Http.TraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.String,System.Net.Http.HttpRequestMessage,System.String)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="traceWriter" Type="System.Web.Http.Tracing.ITraceWriter" RefType="this" />
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
          <Parameter Name="category" Type="System.String">
            <Attributes>
              <Attribute>
                <AttributeName>System.Runtime.CompilerServices.CallerMemberName</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="traceWriter">The <see cref="T:System.Web.Http.Tracing.ITraceWriter" /></param>
          <param name="message">The message to log.</param>
          <param name="request">Request used for message correlation. Defaults to null.</param>
          <param name="category">The category for the trace. Defaults to the method or property name of the caller.</param>
          <summary>
            Writes a <see cref="T:System.Web.Http.Tracing.TraceRecord" /> at <see cref="F:System.Web.Http.Tracing.TraceLevel.Error" /> with the given message.
            </summary>
        </Docs>
        <Link Type="System.Web.Http.TraceWriterExtensions" Member="M:System.Web.Http.TraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.String,System.Net.Http.HttpRequestMessage,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Http.Tracing.ITraceWriter" />
      </Targets>
      <Member MemberName="Info">
        <MemberSignature Language="C#" Value="public static void Info (this System.Web.Http.Tracing.ITraceWriter traceWriter, string message, System.Net.Http.HttpRequestMessage request = null, string category = &quot;&quot;);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Info(class System.Web.Http.Tracing.ITraceWriter traceWriter, string message, class System.Net.Http.HttpRequestMessage request, string category) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Http.TraceWriterExtensions.Info(System.Web.Http.Tracing.ITraceWriter,System.String,System.Net.Http.HttpRequestMessage,System.String)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="traceWriter" Type="System.Web.Http.Tracing.ITraceWriter" RefType="this" />
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
          <Parameter Name="category" Type="System.String">
            <Attributes>
              <Attribute>
                <AttributeName>System.Runtime.CompilerServices.CallerMemberName</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="traceWriter">The <see cref="T:System.Web.Http.Tracing.ITraceWriter" /></param>
          <param name="message">The message to log.</param>
          <param name="request">Request used for message correlation. Defaults to null.</param>
          <param name="category">The category for the trace. Defaults to the method or property name of the caller.</param>
          <summary>
            Writes a <see cref="T:System.Web.Http.Tracing.TraceRecord" /> at <see cref="F:System.Web.Http.Tracing.TraceLevel.Info" /> with the given message.
            </summary>
        </Docs>
        <Link Type="System.Web.Http.TraceWriterExtensions" Member="M:System.Web.Http.TraceWriterExtensions.Info(System.Web.Http.Tracing.ITraceWriter,System.String,System.Net.Http.HttpRequestMessage,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Http.Tracing.ITraceWriter" />
      </Targets>
      <Member MemberName="Trace">
        <MemberSignature Language="C#" Value="public static void Trace (this System.Web.Http.Tracing.ITraceWriter traceWriter, System.Web.Http.Tracing.TraceLevel level, string message, Exception exception, System.Net.Http.HttpRequestMessage request = null, string category = &quot;&quot;);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Trace(class System.Web.Http.Tracing.ITraceWriter traceWriter, valuetype System.Web.Http.Tracing.TraceLevel level, string message, class System.Exception exception, class System.Net.Http.HttpRequestMessage request, string category) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Http.TraceWriterExtensions.Trace(System.Web.Http.Tracing.ITraceWriter,System.Web.Http.Tracing.TraceLevel,System.String,System.Exception,System.Net.Http.HttpRequestMessage,System.String)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="traceWriter" Type="System.Web.Http.Tracing.ITraceWriter" RefType="this" />
          <Parameter Name="level" Type="System.Web.Http.Tracing.TraceLevel" />
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="exception" Type="System.Exception" />
          <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
          <Parameter Name="category" Type="System.String">
            <Attributes>
              <Attribute>
                <AttributeName>System.Runtime.CompilerServices.CallerMemberName</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="traceWriter">The <see cref="T:System.Web.Http.Tracing.ITraceWriter" /></param>
          <param name="level">The <see cref="T:System.Web.Http.Tracing.TraceLevel" /> for the trace.</param>
          <param name="message">The message to log (or null).</param>
          <param name="exception">The exception to log (or null).</param>
          <param name="request">Request used for message correlation. Defaults to null.</param>
          <param name="category">The category for the trace. Defaults to the method or property name of the caller.</param>
          <summary>
            Writes a single <see cref="T:System.Web.Http.Tracing.TraceRecord" /> to the given <see cref="T:System.Web.Http.Tracing.ITraceWriter" /> if the trace writer
            is enabled for the given <paramref name="category" /> and <paramref name="level" />.
            </summary>
        </Docs>
        <Link Type="System.Web.Http.TraceWriterExtensions" Member="M:System.Web.Http.TraceWriterExtensions.Trace(System.Web.Http.Tracing.ITraceWriter,System.Web.Http.Tracing.TraceLevel,System.String,System.Exception,System.Net.Http.HttpRequestMessage,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Http.Tracing.ITraceWriter" />
      </Targets>
      <Member MemberName="Warn">
        <MemberSignature Language="C#" Value="public static void Warn (this System.Web.Http.Tracing.ITraceWriter traceWriter, string message, System.Net.Http.HttpRequestMessage request = null, string category = &quot;&quot;);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Warn(class System.Web.Http.Tracing.ITraceWriter traceWriter, string message, class System.Net.Http.HttpRequestMessage request, string category) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Http.TraceWriterExtensions.Warn(System.Web.Http.Tracing.ITraceWriter,System.String,System.Net.Http.HttpRequestMessage,System.String)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="traceWriter" Type="System.Web.Http.Tracing.ITraceWriter" RefType="this" />
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
          <Parameter Name="category" Type="System.String">
            <Attributes>
              <Attribute>
                <AttributeName>System.Runtime.CompilerServices.CallerMemberName</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="traceWriter">The <see cref="T:System.Web.Http.Tracing.ITraceWriter" /></param>
          <param name="message">The message to log.</param>
          <param name="request">Request used for message correlation. Defaults to null.</param>
          <param name="category">The category for the trace. Defaults to the method or property name of the caller.</param>
          <summary>
            Writes a <see cref="T:System.Web.Http.Tracing.TraceRecord" /> at <see cref="F:System.Web.Http.Tracing.TraceLevel.Warn" /> with the given message.
            </summary>
        </Docs>
        <Link Type="System.Web.Http.TraceWriterExtensions" Member="M:System.Web.Http.TraceWriterExtensions.Warn(System.Web.Http.Tracing.ITraceWriter,System.String,System.Net.Http.HttpRequestMessage,System.String)" />
      </Member>
    </ExtensionMethod>
  </ExtensionMethods>
</Overview>

<Type Name="TenantEventsOperationsExtensions" FullName="Microsoft.Azure.Insights.TenantEventsOperationsExtensions">
  <TypeSignature Language="C#" Value="public static class TenantEventsOperationsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TenantEventsOperationsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Insights.TenantEventsOperationsExtensions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Insights</AssemblyName>
    <AssemblyVersion>0.15.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for TenantEventsOperations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Insights.Models.EventData&gt; List (this Microsoft.Azure.Insights.ITenantEventsOperations operations, Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Insights.Models.EventData&gt; odataQuery = null, string select = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Insights.Models.EventData&gt; List(class Microsoft.Azure.Insights.ITenantEventsOperations operations, class Microsoft.Rest.Azure.OData.ODataQuery`1&lt;class Microsoft.Azure.Insights.Models.EventData&gt; odataQuery, string select) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Insights.TenantEventsOperationsExtensions.List(Microsoft.Azure.Insights.ITenantEventsOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Insights.Models.EventData},System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.15.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Insights.Models.EventData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Insights.ITenantEventsOperations" RefType="this" />
        <Parameter Name="odataQuery" Type="Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Insights.Models.EventData&gt;" />
        <Parameter Name="select" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="odataQuery">
            OData parameters to apply to the operation.
            </param>
        <param name="select">
            Used to fetch events with only the given properties. The filter is a comma
            separated list of property names to be returned. Possible values are:
            authorization, channels, claims, correlationId, description, eventDataId,
            eventName, eventTimestamp, httpRequest, level, operationId, operationName,
            properties, resourceGroupName, resourceProviderName, resourceId, status,
            submissionTimestamp, subStatus, subscriptionId
            </param>
        <summary>
            get the Activity Logs for the Tenant. Everything that is applicable to the
            API to get the Activity Log for the subscription is applicable to this API
            (the parameters, $filter, etc.). One thing to point out here is that this
            API does *not* retrieve the logs at the individual subscription of the
            tenant but only surfaces the logs that were generated at the tenant level.
            The **$filter** is very restricted and allows only the following patterns.
            - List events for a resource group: $filter=eventTimestamp ge '&lt;Start
            Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq
            'Admin, Operation' and resourceGroupName eq '&lt;ResourceGroupName&gt;'. -
            List events for resource: $filter=eventTimestamp ge '&lt;Start Time&gt;'
            and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin,
            Operation' and resourceUri eq '&lt;ResourceURI&gt;'. - List events for a
            subscription: $filter=eventTimestamp ge '&lt;Start Time&gt;' and
            eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin,
            Operation'. - List evetns for a resource provider: $filter=eventTimestamp
            ge '&lt;Start Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and
            eventChannels eq 'Admin, Operation' and resourceProvider eq
            '&lt;ResourceProviderName&gt;'. - List events for a correlation Id:
            api-version=2014-04-01&amp;$filter=eventTimestamp ge
            '2014-07-16T04:36:37.6407898Z' and eventTimestamp le
            '2014-07-20T04:36:37.6407898Z' and eventChannels eq 'Admin, Operation' and
            correlationId eq '&lt;CorrelationID&gt;'. No other syntax is allowed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Insights.Models.EventData&gt;&gt; ListAsync (this Microsoft.Azure.Insights.ITenantEventsOperations operations, Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Insights.Models.EventData&gt; odataQuery = null, string select = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Insights.Models.EventData&gt;&gt; ListAsync(class Microsoft.Azure.Insights.ITenantEventsOperations operations, class Microsoft.Rest.Azure.OData.ODataQuery`1&lt;class Microsoft.Azure.Insights.Models.EventData&gt; odataQuery, string select, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Insights.TenantEventsOperationsExtensions.ListAsync(Microsoft.Azure.Insights.ITenantEventsOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Insights.Models.EventData},System.String,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.15.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Azure.Insights.TenantEventsOperationsExtensions/&lt;ListAsync&gt;d__1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Insights.Models.EventData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Insights.ITenantEventsOperations" RefType="this" />
        <Parameter Name="odataQuery" Type="Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Insights.Models.EventData&gt;" />
        <Parameter Name="select" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="odataQuery">
            OData parameters to apply to the operation.
            </param>
        <param name="select">
            Used to fetch events with only the given properties. The filter is a comma
            separated list of property names to be returned. Possible values are:
            authorization, channels, claims, correlationId, description, eventDataId,
            eventName, eventTimestamp, httpRequest, level, operationId, operationName,
            properties, resourceGroupName, resourceProviderName, resourceId, status,
            submissionTimestamp, subStatus, subscriptionId
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            get the Activity Logs for the Tenant. Everything that is applicable to the
            API to get the Activity Log for the subscription is applicable to this API
            (the parameters, $filter, etc.). One thing to point out here is that this
            API does *not* retrieve the logs at the individual subscription of the
            tenant but only surfaces the logs that were generated at the tenant level.
            The **$filter** is very restricted and allows only the following patterns.
            - List events for a resource group: $filter=eventTimestamp ge '&lt;Start
            Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq
            'Admin, Operation' and resourceGroupName eq '&lt;ResourceGroupName&gt;'. -
            List events for resource: $filter=eventTimestamp ge '&lt;Start Time&gt;'
            and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin,
            Operation' and resourceUri eq '&lt;ResourceURI&gt;'. - List events for a
            subscription: $filter=eventTimestamp ge '&lt;Start Time&gt;' and
            eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin,
            Operation'. - List evetns for a resource provider: $filter=eventTimestamp
            ge '&lt;Start Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and
            eventChannels eq 'Admin, Operation' and resourceProvider eq
            '&lt;ResourceProviderName&gt;'. - List events for a correlation Id:
            api-version=2014-04-01&amp;$filter=eventTimestamp ge
            '2014-07-16T04:36:37.6407898Z' and eventTimestamp le
            '2014-07-20T04:36:37.6407898Z' and eventChannels eq 'Admin, Operation' and
            correlationId eq '&lt;CorrelationID&gt;'. No other syntax is allowed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListNext">
      <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Insights.Models.EventData&gt; ListNext (this Microsoft.Azure.Insights.ITenantEventsOperations operations, string nextPageLink);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Insights.Models.EventData&gt; ListNext(class Microsoft.Azure.Insights.ITenantEventsOperations operations, string nextPageLink) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Insights.TenantEventsOperationsExtensions.ListNext(Microsoft.Azure.Insights.ITenantEventsOperations,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.15.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Insights.Models.EventData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Insights.ITenantEventsOperations" RefType="this" />
        <Parameter Name="nextPageLink" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
        <summary>
            get the Activity Logs for the Tenant. Everything that is applicable to the
            API to get the Activity Log for the subscription is applicable to this API
            (the parameters, $filter, etc.). One thing to point out here is that this
            API does *not* retrieve the logs at the individual subscription of the
            tenant but only surfaces the logs that were generated at the tenant level.
            The **$filter** is very restricted and allows only the following patterns.
            - List events for a resource group: $filter=eventTimestamp ge '&lt;Start
            Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq
            'Admin, Operation' and resourceGroupName eq '&lt;ResourceGroupName&gt;'. -
            List events for resource: $filter=eventTimestamp ge '&lt;Start Time&gt;'
            and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin,
            Operation' and resourceUri eq '&lt;ResourceURI&gt;'. - List events for a
            subscription: $filter=eventTimestamp ge '&lt;Start Time&gt;' and
            eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin,
            Operation'. - List evetns for a resource provider: $filter=eventTimestamp
            ge '&lt;Start Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and
            eventChannels eq 'Admin, Operation' and resourceProvider eq
            '&lt;ResourceProviderName&gt;'. - List events for a correlation Id:
            api-version=2014-04-01&amp;$filter=eventTimestamp ge
            '2014-07-16T04:36:37.6407898Z' and eventTimestamp le
            '2014-07-20T04:36:37.6407898Z' and eventChannels eq 'Admin, Operation' and
            correlationId eq '&lt;CorrelationID&gt;'. No other syntax is allowed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListNextAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Insights.Models.EventData&gt;&gt; ListNextAsync (this Microsoft.Azure.Insights.ITenantEventsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Insights.Models.EventData&gt;&gt; ListNextAsync(class Microsoft.Azure.Insights.ITenantEventsOperations operations, string nextPageLink, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Insights.TenantEventsOperationsExtensions.ListNextAsync(Microsoft.Azure.Insights.ITenantEventsOperations,System.String,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.15.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Azure.Insights.TenantEventsOperationsExtensions/&lt;ListNextAsync&gt;d__3))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Insights.Models.EventData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Insights.ITenantEventsOperations" RefType="this" />
        <Parameter Name="nextPageLink" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            get the Activity Logs for the Tenant. Everything that is applicable to the
            API to get the Activity Log for the subscription is applicable to this API
            (the parameters, $filter, etc.). One thing to point out here is that this
            API does *not* retrieve the logs at the individual subscription of the
            tenant but only surfaces the logs that were generated at the tenant level.
            The **$filter** is very restricted and allows only the following patterns.
            - List events for a resource group: $filter=eventTimestamp ge '&lt;Start
            Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq
            'Admin, Operation' and resourceGroupName eq '&lt;ResourceGroupName&gt;'. -
            List events for resource: $filter=eventTimestamp ge '&lt;Start Time&gt;'
            and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin,
            Operation' and resourceUri eq '&lt;ResourceURI&gt;'. - List events for a
            subscription: $filter=eventTimestamp ge '&lt;Start Time&gt;' and
            eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin,
            Operation'. - List evetns for a resource provider: $filter=eventTimestamp
            ge '&lt;Start Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and
            eventChannels eq 'Admin, Operation' and resourceProvider eq
            '&lt;ResourceProviderName&gt;'. - List events for a correlation Id:
            api-version=2014-04-01&amp;$filter=eventTimestamp ge
            '2014-07-16T04:36:37.6407898Z' and eventTimestamp le
            '2014-07-20T04:36:37.6407898Z' and eventChannels eq 'Admin, Operation' and
            correlationId eq '&lt;CorrelationID&gt;'. No other syntax is allowed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

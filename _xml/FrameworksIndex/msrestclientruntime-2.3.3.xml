<?xml version="1.0" encoding="utf-8"?>
<Framework Name="msrestclientruntime-2.3.3">
  <Namespace Name="Microsoft.Rest">
    <Type Name="Microsoft.Rest.BasicAuthenticationCredentials" Id="T:Microsoft.Rest.BasicAuthenticationCredentials">
      <Member Id="M:Microsoft.Rest.BasicAuthenticationCredentials.#ctor" />
      <Member Id="M:Microsoft.Rest.BasicAuthenticationCredentials.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Rest.BasicAuthenticationCredentials.Password" />
      <Member Id="P:Microsoft.Rest.BasicAuthenticationCredentials.UserName" />
    </Type>
    <Type Name="Microsoft.Rest.CertificateCredentials" Id="T:Microsoft.Rest.CertificateCredentials">
      <Member Id="M:Microsoft.Rest.CertificateCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <Member Id="M:Microsoft.Rest.CertificateCredentials.InitializeServiceClient``1(Microsoft.Rest.ServiceClient{``0})" />
      <Member Id="P:Microsoft.Rest.CertificateCredentials.ManagementCertificate" />
    </Type>
    <Type Name="Microsoft.Rest.HttpExtensions" Id="T:Microsoft.Rest.HttpExtensions">
      <Member Id="M:Microsoft.Rest.HttpExtensions.AsFormattedString(System.Net.Http.HttpRequestMessage)" />
      <Member Id="M:Microsoft.Rest.HttpExtensions.AsFormattedString(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Rest.HttpExtensions.AsFormattedString``2(System.Collections.Generic.IDictionary{``0,``1})" />
      <Member Id="M:Microsoft.Rest.HttpExtensions.AsString(System.Net.Http.HttpContent)" />
      <Member Id="M:Microsoft.Rest.HttpExtensions.GetContentHeaders(System.Net.Http.HttpRequestMessage)" />
      <Member Id="M:Microsoft.Rest.HttpExtensions.GetContentHeaders(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Rest.HttpExtensions.GetHeadersAsJson(System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Rest.HttpExtensions.ToJson(System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IEnumerable{System.String}})" />
      <Member Id="M:Microsoft.Rest.HttpExtensions.ToJson(System.Net.Http.Headers.HttpHeaders)" />
    </Type>
    <Type Name="Microsoft.Rest.HttpMessageWrapper" Id="T:Microsoft.Rest.HttpMessageWrapper">
      <Member Id="M:Microsoft.Rest.HttpMessageWrapper.#ctor" />
      <Member Id="M:Microsoft.Rest.HttpMessageWrapper.CopyHeaders(System.Net.Http.Headers.HttpHeaders)" />
      <Member Id="P:Microsoft.Rest.HttpMessageWrapper.Content" />
      <Member Id="P:Microsoft.Rest.HttpMessageWrapper.Headers" />
    </Type>
    <Type Name="Microsoft.Rest.HttpOperationException" Id="T:Microsoft.Rest.HttpOperationException">
      <Member Id="M:Microsoft.Rest.HttpOperationException.#ctor" />
      <Member Id="M:Microsoft.Rest.HttpOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:Microsoft.Rest.HttpOperationException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Rest.HttpOperationException.#ctor(System.String,System.Exception)" />
      <Member Id="M:Microsoft.Rest.HttpOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="P:Microsoft.Rest.HttpOperationException.Body" />
      <Member Id="P:Microsoft.Rest.HttpOperationException.Request" />
      <Member Id="P:Microsoft.Rest.HttpOperationException.Response" />
    </Type>
    <Type Name="Microsoft.Rest.HttpOperationHeaderResponse`1" Id="T:Microsoft.Rest.HttpOperationHeaderResponse`1">
      <Member Id="M:Microsoft.Rest.HttpOperationHeaderResponse`1.#ctor" />
      <Member Id="P:Microsoft.Rest.HttpOperationHeaderResponse`1.Headers" />
    </Type>
    <Type Name="Microsoft.Rest.HttpOperationResponse" Id="T:Microsoft.Rest.HttpOperationResponse">
      <Member Id="M:Microsoft.Rest.HttpOperationResponse.#ctor" />
      <Member Id="M:Microsoft.Rest.HttpOperationResponse.Dispose" />
      <Member Id="M:Microsoft.Rest.HttpOperationResponse.Dispose(System.Boolean)" />
      <Member Id="P:Microsoft.Rest.HttpOperationResponse.Request" />
      <Member Id="P:Microsoft.Rest.HttpOperationResponse.Response" />
    </Type>
    <Type Name="Microsoft.Rest.HttpOperationResponse`1" Id="T:Microsoft.Rest.HttpOperationResponse`1">
      <Member Id="M:Microsoft.Rest.HttpOperationResponse`1.#ctor" />
      <Member Id="P:Microsoft.Rest.HttpOperationResponse`1.Body" />
    </Type>
    <Type Name="Microsoft.Rest.HttpOperationResponse`2" Id="T:Microsoft.Rest.HttpOperationResponse`2">
      <Member Id="M:Microsoft.Rest.HttpOperationResponse`2.#ctor" />
      <Member Id="P:Microsoft.Rest.HttpOperationResponse`2.Headers" />
    </Type>
    <Type Name="Microsoft.Rest.HttpRequestMessageWrapper" Id="T:Microsoft.Rest.HttpRequestMessageWrapper">
      <Member Id="M:Microsoft.Rest.HttpRequestMessageWrapper.#ctor(System.Net.Http.HttpRequestMessage,System.String)" />
      <Member Id="P:Microsoft.Rest.HttpRequestMessageWrapper.Method" />
      <Member Id="P:Microsoft.Rest.HttpRequestMessageWrapper.Properties" />
      <Member Id="P:Microsoft.Rest.HttpRequestMessageWrapper.RequestUri" />
    </Type>
    <Type Name="Microsoft.Rest.HttpResponseMessageWrapper" Id="T:Microsoft.Rest.HttpResponseMessageWrapper">
      <Member Id="M:Microsoft.Rest.HttpResponseMessageWrapper.#ctor(System.Net.Http.HttpResponseMessage,System.String)" />
      <Member Id="P:Microsoft.Rest.HttpResponseMessageWrapper.ReasonPhrase" />
      <Member Id="P:Microsoft.Rest.HttpResponseMessageWrapper.StatusCode" />
    </Type>
    <Type Name="Microsoft.Rest.IHttpOperationHeaderResponse`1" Id="T:Microsoft.Rest.IHttpOperationHeaderResponse`1">
      <Member Id="P:Microsoft.Rest.IHttpOperationHeaderResponse`1.Headers" />
    </Type>
    <Type Name="Microsoft.Rest.IHttpOperationResponse" Id="T:Microsoft.Rest.IHttpOperationResponse">
      <Member Id="P:Microsoft.Rest.IHttpOperationResponse.Request" />
      <Member Id="P:Microsoft.Rest.IHttpOperationResponse.Response" />
    </Type>
    <Type Name="Microsoft.Rest.IHttpOperationResponse`1" Id="T:Microsoft.Rest.IHttpOperationResponse`1">
      <Member Id="P:Microsoft.Rest.IHttpOperationResponse`1.Body" />
    </Type>
    <Type Name="Microsoft.Rest.IHttpOperationResponse`2" Id="T:Microsoft.Rest.IHttpOperationResponse`2" />
    <Type Name="Microsoft.Rest.IServiceClientTracingInterceptor" Id="T:Microsoft.Rest.IServiceClientTracingInterceptor">
      <Member Id="M:Microsoft.Rest.IServiceClientTracingInterceptor.Configuration(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Rest.IServiceClientTracingInterceptor.EnterMethod(System.String,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <Member Id="M:Microsoft.Rest.IServiceClientTracingInterceptor.ExitMethod(System.String,System.Object)" />
      <Member Id="M:Microsoft.Rest.IServiceClientTracingInterceptor.Information(System.String)" />
      <Member Id="M:Microsoft.Rest.IServiceClientTracingInterceptor.ReceiveResponse(System.String,System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Rest.IServiceClientTracingInterceptor.SendRequest(System.String,System.Net.Http.HttpRequestMessage)" />
      <Member Id="M:Microsoft.Rest.IServiceClientTracingInterceptor.TraceError(System.String,System.Exception)" />
    </Type>
    <Type Name="Microsoft.Rest.IServiceOperations`1" Id="T:Microsoft.Rest.IServiceOperations`1">
      <Member Id="P:Microsoft.Rest.IServiceOperations`1.Client" />
    </Type>
    <Type Name="Microsoft.Rest.ITokenProvider" Id="T:Microsoft.Rest.ITokenProvider">
      <Member Id="M:Microsoft.Rest.ITokenProvider.GetAuthenticationHeaderAsync(System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Rest.RestException" Id="T:Microsoft.Rest.RestException">
      <Member Id="M:Microsoft.Rest.RestException.#ctor" />
      <Member Id="M:Microsoft.Rest.RestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:Microsoft.Rest.RestException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Rest.RestException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="Microsoft.Rest.RetryDelegatingHandler" Id="T:Microsoft.Rest.RetryDelegatingHandler">
      <Member Id="M:Microsoft.Rest.RetryDelegatingHandler.#ctor" />
      <Member Id="M:Microsoft.Rest.RetryDelegatingHandler.#ctor(Microsoft.Rest.TransientFaultHandling.RetryPolicy,System.Net.Http.DelegatingHandler)" />
      <Member Id="M:Microsoft.Rest.RetryDelegatingHandler.#ctor(System.Net.Http.DelegatingHandler)" />
      <Member Id="M:Microsoft.Rest.RetryDelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Rest.RetryDelegatingHandler.RetryPolicy" />
    </Type>
    <Type Name="Microsoft.Rest.SerializationException" Id="T:Microsoft.Rest.SerializationException">
      <Member Id="M:Microsoft.Rest.SerializationException.#ctor" />
      <Member Id="M:Microsoft.Rest.SerializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:Microsoft.Rest.SerializationException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Rest.SerializationException.#ctor(System.String,System.Exception)" />
      <Member Id="M:Microsoft.Rest.SerializationException.#ctor(System.String,System.String,System.Exception)" />
      <Member Id="M:Microsoft.Rest.SerializationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="P:Microsoft.Rest.SerializationException.Content" />
    </Type>
    <Type Name="Microsoft.Rest.ServiceClient`1" Id="T:Microsoft.Rest.ServiceClient`1">
      <Member Id="M:Microsoft.Rest.ServiceClient`1.#ctor" />
      <Member Id="M:Microsoft.Rest.ServiceClient`1.#ctor(System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Rest.ServiceClient`1.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Rest.ServiceClient`1.CreateRootHandler" />
      <Member Id="M:Microsoft.Rest.ServiceClient`1.Dispose" />
      <Member Id="M:Microsoft.Rest.ServiceClient`1.Dispose(System.Boolean)" />
      <Member Id="M:Microsoft.Rest.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Rest.ServiceClient`1.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)" />
      <Member Id="M:Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String)" />
      <Member Id="M:Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String,System.String)" />
      <Member Id="P:Microsoft.Rest.ServiceClient`1.FirstMessageHandler" />
      <Member Id="P:Microsoft.Rest.ServiceClient`1.HttpClient" />
      <Member Id="P:Microsoft.Rest.ServiceClient`1.HttpClientHandler" />
      <Member Id="P:Microsoft.Rest.ServiceClient`1.HttpMessageHandlers" />
      <Member Id="P:Microsoft.Rest.ServiceClient`1.UserAgent" />
    </Type>
    <Type Name="Microsoft.Rest.ServiceClientCredentials" Id="T:Microsoft.Rest.ServiceClientCredentials">
      <Member Id="M:Microsoft.Rest.ServiceClientCredentials.#ctor" />
      <Member Id="M:Microsoft.Rest.ServiceClientCredentials.InitializeServiceClient``1(Microsoft.Rest.ServiceClient{``0})" />
      <Member Id="M:Microsoft.Rest.ServiceClientCredentials.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Rest.ServiceClientTracing" Id="T:Microsoft.Rest.ServiceClientTracing">
      <Member Id="M:Microsoft.Rest.ServiceClientTracing.AddTracingInterceptor(Microsoft.Rest.IServiceClientTracingInterceptor)" />
      <Member Id="M:Microsoft.Rest.ServiceClientTracing.Configuration(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Rest.ServiceClientTracing.Enter(System.String,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <Member Id="M:Microsoft.Rest.ServiceClientTracing.Error(System.String,System.Exception)" />
      <Member Id="M:Microsoft.Rest.ServiceClientTracing.Exit(System.String,System.Object)" />
      <Member Id="M:Microsoft.Rest.ServiceClientTracing.Information(System.String)" />
      <Member Id="M:Microsoft.Rest.ServiceClientTracing.Information(System.String,System.Object[])" />
      <Member Id="M:Microsoft.Rest.ServiceClientTracing.ReceiveResponse(System.String,System.Net.Http.HttpResponseMessage)" />
      <Member Id="M:Microsoft.Rest.ServiceClientTracing.RemoveTracingInterceptor(Microsoft.Rest.IServiceClientTracingInterceptor)" />
      <Member Id="M:Microsoft.Rest.ServiceClientTracing.SendRequest(System.String,System.Net.Http.HttpRequestMessage)" />
      <Member Id="P:Microsoft.Rest.ServiceClientTracing.IsEnabled" />
      <Member Id="P:Microsoft.Rest.ServiceClientTracing.NextInvocationId" />
    </Type>
    <Type Name="Microsoft.Rest.StringTokenProvider" Id="T:Microsoft.Rest.StringTokenProvider">
      <Member Id="M:Microsoft.Rest.StringTokenProvider.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Rest.StringTokenProvider.GetAuthenticationHeaderAsync(System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Rest.StringTokenProvider.TokenType" />
    </Type>
    <Type Name="Microsoft.Rest.TokenCredentials" Id="T:Microsoft.Rest.TokenCredentials">
      <Member Id="M:Microsoft.Rest.TokenCredentials.#ctor(Microsoft.Rest.ITokenProvider)" />
      <Member Id="M:Microsoft.Rest.TokenCredentials.#ctor(Microsoft.Rest.ITokenProvider,System.String,System.String)" />
      <Member Id="M:Microsoft.Rest.TokenCredentials.#ctor(System.String)" />
      <Member Id="M:Microsoft.Rest.TokenCredentials.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Rest.TokenCredentials.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Rest.TokenCredentials.CallerId" />
      <Member Id="P:Microsoft.Rest.TokenCredentials.TenantId" />
      <Member Id="P:Microsoft.Rest.TokenCredentials.TokenProvider" />
    </Type>
    <Type Name="Microsoft.Rest.TypeConversion" Id="T:Microsoft.Rest.TypeConversion">
      <Member Id="M:Microsoft.Rest.TypeConversion.FromBase64String(System.String)" />
      <Member Id="M:Microsoft.Rest.TypeConversion.TryParseUri(System.String)" />
    </Type>
    <Type Name="Microsoft.Rest.ValidationException" Id="T:Microsoft.Rest.ValidationException">
      <Member Id="M:Microsoft.Rest.ValidationException.#ctor" />
      <Member Id="M:Microsoft.Rest.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:Microsoft.Rest.ValidationException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Rest.ValidationException.#ctor(System.String,System.Exception)" />
      <Member Id="M:Microsoft.Rest.ValidationException.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Rest.ValidationException.#ctor(System.String,System.String,System.Object)" />
      <Member Id="M:Microsoft.Rest.ValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="P:Microsoft.Rest.ValidationException.Details" />
      <Member Id="P:Microsoft.Rest.ValidationException.Rule" />
      <Member Id="P:Microsoft.Rest.ValidationException.Target" />
    </Type>
    <Type Name="Microsoft.Rest.ValidationRules" Id="T:Microsoft.Rest.ValidationRules">
      <Member Id="F:Microsoft.Rest.ValidationRules.CannotBeNull" />
      <Member Id="F:Microsoft.Rest.ValidationRules.Enum" />
      <Member Id="F:Microsoft.Rest.ValidationRules.ExclusiveMaximum" />
      <Member Id="F:Microsoft.Rest.ValidationRules.ExclusiveMinimum" />
      <Member Id="F:Microsoft.Rest.ValidationRules.InclusiveMaximum" />
      <Member Id="F:Microsoft.Rest.ValidationRules.InclusiveMinimum" />
      <Member Id="F:Microsoft.Rest.ValidationRules.MaxItems" />
      <Member Id="F:Microsoft.Rest.ValidationRules.MaxLength" />
      <Member Id="F:Microsoft.Rest.ValidationRules.MinItems" />
      <Member Id="F:Microsoft.Rest.ValidationRules.MinLength" />
      <Member Id="F:Microsoft.Rest.ValidationRules.MultipleOf" />
      <Member Id="F:Microsoft.Rest.ValidationRules.Pattern" />
      <Member Id="F:Microsoft.Rest.ValidationRules.UniqueItems" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Rest.Serialization">
    <Type Name="Microsoft.Rest.Serialization.Base64UrlJsonConverter" Id="T:Microsoft.Rest.Serialization.Base64UrlJsonConverter">
      <Member Id="M:Microsoft.Rest.Serialization.Base64UrlJsonConverter.#ctor" />
      <Member Id="M:Microsoft.Rest.Serialization.Base64UrlJsonConverter.CanConvert(System.Type)" />
      <Member Id="M:Microsoft.Rest.Serialization.Base64UrlJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)" />
      <Member Id="M:Microsoft.Rest.Serialization.Base64UrlJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)" />
    </Type>
    <Type Name="Microsoft.Rest.Serialization.DateJsonConverter" Id="T:Microsoft.Rest.Serialization.DateJsonConverter">
      <Member Id="M:Microsoft.Rest.Serialization.DateJsonConverter.#ctor" />
      <Member Id="M:Microsoft.Rest.Serialization.DateJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)" />
      <Member Id="M:Microsoft.Rest.Serialization.DateJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)" />
    </Type>
    <Type Name="Microsoft.Rest.Serialization.DateTimeRfc1123JsonConverter" Id="T:Microsoft.Rest.Serialization.DateTimeRfc1123JsonConverter">
      <Member Id="M:Microsoft.Rest.Serialization.DateTimeRfc1123JsonConverter.#ctor" />
      <Member Id="M:Microsoft.Rest.Serialization.DateTimeRfc1123JsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)" />
      <Member Id="M:Microsoft.Rest.Serialization.DateTimeRfc1123JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)" />
    </Type>
    <Type Name="Microsoft.Rest.Serialization.Iso8601TimeSpanConverter" Id="T:Microsoft.Rest.Serialization.Iso8601TimeSpanConverter">
      <Member Id="M:Microsoft.Rest.Serialization.Iso8601TimeSpanConverter.#ctor" />
      <Member Id="M:Microsoft.Rest.Serialization.Iso8601TimeSpanConverter.CanConvert(System.Type)" />
      <Member Id="M:Microsoft.Rest.Serialization.Iso8601TimeSpanConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)" />
      <Member Id="M:Microsoft.Rest.Serialization.Iso8601TimeSpanConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)" />
    </Type>
    <Type Name="Microsoft.Rest.Serialization.JsonConverterHelper" Id="T:Microsoft.Rest.Serialization.JsonConverterHelper">
      <Member Id="M:Microsoft.Rest.Serialization.JsonConverterHelper.GetPropertyName(Newtonsoft.Json.Serialization.JsonProperty,System.String[]@)" />
      <Member Id="M:Microsoft.Rest.Serialization.JsonConverterHelper.SerializeProperties(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)" />
      <Member Id="M:Microsoft.Rest.Serialization.JsonConverterHelper.SerializeProperties(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer,System.Predicate{Newtonsoft.Json.Serialization.JsonProperty})" />
    </Type>
    <Type Name="Microsoft.Rest.Serialization.JsonTransformationAttribute" Id="T:Microsoft.Rest.Serialization.JsonTransformationAttribute">
      <Member Id="M:Microsoft.Rest.Serialization.JsonTransformationAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.Rest.Serialization.PolymorphicDeserializeJsonConverter`1" Id="T:Microsoft.Rest.Serialization.PolymorphicDeserializeJsonConverter`1">
      <Member Id="M:Microsoft.Rest.Serialization.PolymorphicDeserializeJsonConverter`1.#ctor(System.String)" />
      <Member Id="M:Microsoft.Rest.Serialization.PolymorphicDeserializeJsonConverter`1.CanConvert(System.Type)" />
      <Member Id="M:Microsoft.Rest.Serialization.PolymorphicDeserializeJsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)" />
      <Member Id="M:Microsoft.Rest.Serialization.PolymorphicDeserializeJsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)" />
      <Member Id="P:Microsoft.Rest.Serialization.PolymorphicDeserializeJsonConverter`1.CanWrite" />
    </Type>
    <Type Name="Microsoft.Rest.Serialization.PolymorphicJsonConverter" Id="T:Microsoft.Rest.Serialization.PolymorphicJsonConverter">
      <Member Id="M:Microsoft.Rest.Serialization.PolymorphicJsonConverter.#ctor" />
      <Member Id="M:Microsoft.Rest.Serialization.PolymorphicJsonConverter.GetDerivedType(System.Type,System.String)" />
      <Member Id="P:Microsoft.Rest.Serialization.PolymorphicJsonConverter.Discriminator" />
    </Type>
    <Type Name="Microsoft.Rest.Serialization.PolymorphicSerializeJsonConverter`1" Id="T:Microsoft.Rest.Serialization.PolymorphicSerializeJsonConverter`1">
      <Member Id="M:Microsoft.Rest.Serialization.PolymorphicSerializeJsonConverter`1.#ctor(System.String)" />
      <Member Id="M:Microsoft.Rest.Serialization.PolymorphicSerializeJsonConverter`1.CanConvert(System.Type)" />
      <Member Id="M:Microsoft.Rest.Serialization.PolymorphicSerializeJsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)" />
      <Member Id="M:Microsoft.Rest.Serialization.PolymorphicSerializeJsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)" />
      <Member Id="P:Microsoft.Rest.Serialization.PolymorphicSerializeJsonConverter`1.CanRead" />
    </Type>
    <Type Name="Microsoft.Rest.Serialization.ReadOnlyJsonContractResolver" Id="T:Microsoft.Rest.Serialization.ReadOnlyJsonContractResolver">
      <Member Id="M:Microsoft.Rest.Serialization.ReadOnlyJsonContractResolver.#ctor" />
      <Member Id="M:Microsoft.Rest.Serialization.ReadOnlyJsonContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)" />
    </Type>
    <Type Name="Microsoft.Rest.Serialization.SafeJsonConvert" Id="T:Microsoft.Rest.Serialization.SafeJsonConvert">
      <Member Id="M:Microsoft.Rest.Serialization.SafeJsonConvert.DeserializeObject``1(System.String,Newtonsoft.Json.JsonConverter[])" />
      <Member Id="M:Microsoft.Rest.Serialization.SafeJsonConvert.DeserializeObject``1(System.String,Newtonsoft.Json.JsonSerializerSettings)" />
      <Member Id="M:Microsoft.Rest.Serialization.SafeJsonConvert.SerializeObject(System.Object,Newtonsoft.Json.JsonConverter[])" />
      <Member Id="M:Microsoft.Rest.Serialization.SafeJsonConvert.SerializeObject(System.Object,Newtonsoft.Json.JsonSerializerSettings)" />
    </Type>
    <Type Name="Microsoft.Rest.Serialization.TransformationJsonConverter" Id="T:Microsoft.Rest.Serialization.TransformationJsonConverter">
      <Member Id="M:Microsoft.Rest.Serialization.TransformationJsonConverter.#ctor" />
      <Member Id="M:Microsoft.Rest.Serialization.TransformationJsonConverter.CanConvert(System.Type)" />
      <Member Id="M:Microsoft.Rest.Serialization.TransformationJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)" />
      <Member Id="M:Microsoft.Rest.Serialization.TransformationJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)" />
    </Type>
    <Type Name="Microsoft.Rest.Serialization.UnixTimeJsonConverter" Id="T:Microsoft.Rest.Serialization.UnixTimeJsonConverter">
      <Member Id="F:Microsoft.Rest.Serialization.UnixTimeJsonConverter.EpochDate" />
      <Member Id="M:Microsoft.Rest.Serialization.UnixTimeJsonConverter.#ctor" />
      <Member Id="M:Microsoft.Rest.Serialization.UnixTimeJsonConverter.CanConvert(System.Type)" />
      <Member Id="M:Microsoft.Rest.Serialization.UnixTimeJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)" />
      <Member Id="M:Microsoft.Rest.Serialization.UnixTimeJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Rest.TransientFaultHandling">
    <Type Name="Microsoft.Rest.TransientFaultHandling.ExponentialBackoffRetryStrategy" Id="T:Microsoft.Rest.TransientFaultHandling.ExponentialBackoffRetryStrategy">
      <Member Id="F:Microsoft.Rest.TransientFaultHandling.ExponentialBackoffRetryStrategy.DefaultClientBackoff" />
      <Member Id="F:Microsoft.Rest.TransientFaultHandling.ExponentialBackoffRetryStrategy.DefaultMaxBackoff" />
      <Member Id="F:Microsoft.Rest.TransientFaultHandling.ExponentialBackoffRetryStrategy.DefaultMinBackoff" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.ExponentialBackoffRetryStrategy.#ctor" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.ExponentialBackoffRetryStrategy.#ctor(System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.ExponentialBackoffRetryStrategy.#ctor(System.String,System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.ExponentialBackoffRetryStrategy.#ctor(System.String,System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Boolean)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.ExponentialBackoffRetryStrategy.GetShouldRetryHandler" />
    </Type>
    <Type Name="Microsoft.Rest.TransientFaultHandling.FixedIntervalRetryStrategy" Id="T:Microsoft.Rest.TransientFaultHandling.FixedIntervalRetryStrategy">
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.FixedIntervalRetryStrategy.#ctor" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.FixedIntervalRetryStrategy.#ctor(System.Int32)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.FixedIntervalRetryStrategy.#ctor(System.Int32,System.TimeSpan)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.FixedIntervalRetryStrategy.#ctor(System.String,System.Int32,System.TimeSpan)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.FixedIntervalRetryStrategy.#ctor(System.String,System.Int32,System.TimeSpan,System.Boolean)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.FixedIntervalRetryStrategy.GetShouldRetryHandler" />
    </Type>
    <Type Name="Microsoft.Rest.TransientFaultHandling.HttpRequestWithStatusException" Id="T:Microsoft.Rest.TransientFaultHandling.HttpRequestWithStatusException">
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.HttpRequestWithStatusException.#ctor" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.HttpRequestWithStatusException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.HttpRequestWithStatusException.#ctor(System.String,System.Exception)" />
      <Member Id="P:Microsoft.Rest.TransientFaultHandling.HttpRequestWithStatusException.StatusCode" />
    </Type>
    <Type Name="Microsoft.Rest.TransientFaultHandling.HttpStatusCodeErrorDetectionStrategy" Id="T:Microsoft.Rest.TransientFaultHandling.HttpStatusCodeErrorDetectionStrategy">
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.HttpStatusCodeErrorDetectionStrategy.#ctor" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.HttpStatusCodeErrorDetectionStrategy.IsTransient(System.Exception)" />
    </Type>
    <Type Name="Microsoft.Rest.TransientFaultHandling.IncrementalRetryStrategy" Id="T:Microsoft.Rest.TransientFaultHandling.IncrementalRetryStrategy">
      <Member Id="F:Microsoft.Rest.TransientFaultHandling.IncrementalRetryStrategy.DefaultRetryIncrement" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.IncrementalRetryStrategy.#ctor" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.IncrementalRetryStrategy.#ctor(System.Int32,System.TimeSpan,System.TimeSpan)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.IncrementalRetryStrategy.#ctor(System.String,System.Int32,System.TimeSpan,System.TimeSpan)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.IncrementalRetryStrategy.#ctor(System.String,System.Int32,System.TimeSpan,System.TimeSpan,System.Boolean)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.IncrementalRetryStrategy.GetShouldRetryHandler" />
    </Type>
    <Type Name="Microsoft.Rest.TransientFaultHandling.ITransientErrorDetectionStrategy" Id="T:Microsoft.Rest.TransientFaultHandling.ITransientErrorDetectionStrategy">
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.ITransientErrorDetectionStrategy.IsTransient(System.Exception)" />
    </Type>
    <Type Name="Microsoft.Rest.TransientFaultHandling.RetryCondition" Id="T:Microsoft.Rest.TransientFaultHandling.RetryCondition">
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryCondition.#ctor(System.Boolean,System.TimeSpan)" />
      <Member Id="P:Microsoft.Rest.TransientFaultHandling.RetryCondition.DelayBeforeRetry" />
      <Member Id="P:Microsoft.Rest.TransientFaultHandling.RetryCondition.RetryAllowed" />
    </Type>
    <Type Name="Microsoft.Rest.TransientFaultHandling.RetryingEventArgs" Id="T:Microsoft.Rest.TransientFaultHandling.RetryingEventArgs">
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryingEventArgs.#ctor(System.Int32,System.TimeSpan,System.Exception)" />
      <Member Id="P:Microsoft.Rest.TransientFaultHandling.RetryingEventArgs.CurrentRetryCount" />
      <Member Id="P:Microsoft.Rest.TransientFaultHandling.RetryingEventArgs.Delay" />
      <Member Id="P:Microsoft.Rest.TransientFaultHandling.RetryingEventArgs.LastException" />
    </Type>
    <Type Name="Microsoft.Rest.TransientFaultHandling.RetryManager" Id="T:Microsoft.Rest.TransientFaultHandling.RetryManager">
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryManager.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Rest.TransientFaultHandling.RetryStrategy})" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryManager.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Rest.TransientFaultHandling.RetryStrategy},System.String)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryManager.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Rest.TransientFaultHandling.RetryStrategy},System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryManager.GetDefaultRetryStrategy(System.String)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryManager.GetRetryPolicy``1" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryManager.GetRetryPolicy``1(System.String)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryManager.GetRetryStrategy" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryManager.GetRetryStrategy(System.String)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryManager.SetDefault(Microsoft.Rest.TransientFaultHandling.RetryManager)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryManager.SetDefault(Microsoft.Rest.TransientFaultHandling.RetryManager,System.Boolean)" />
      <Member Id="P:Microsoft.Rest.TransientFaultHandling.RetryManager.DefaultRetryStrategyName" />
      <Member Id="P:Microsoft.Rest.TransientFaultHandling.RetryManager.Instance" />
    </Type>
    <Type Name="Microsoft.Rest.TransientFaultHandling.RetryPolicy" Id="T:Microsoft.Rest.TransientFaultHandling.RetryPolicy">
      <Member Id="E:Microsoft.Rest.TransientFaultHandling.RetryPolicy.Retrying" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryPolicy.#ctor(Microsoft.Rest.TransientFaultHandling.ITransientErrorDetectionStrategy,Microsoft.Rest.TransientFaultHandling.RetryStrategy)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryPolicy.#ctor(Microsoft.Rest.TransientFaultHandling.ITransientErrorDetectionStrategy,System.Int32)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryPolicy.#ctor(Microsoft.Rest.TransientFaultHandling.ITransientErrorDetectionStrategy,System.Int32,System.TimeSpan)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryPolicy.#ctor(Microsoft.Rest.TransientFaultHandling.ITransientErrorDetectionStrategy,System.Int32,System.TimeSpan,System.TimeSpan)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryPolicy.#ctor(Microsoft.Rest.TransientFaultHandling.ITransientErrorDetectionStrategy,System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryPolicy.ExecuteAction(System.Action)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryPolicy.ExecuteAction``1(System.Func{``0})" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryPolicy.ExecuteAsync(System.Func{System.Threading.Tasks.Task})" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryPolicy.ExecuteAsync(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryPolicy.ExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}})" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryPolicy.ExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryPolicy.OnRetrying(System.Int32,System.Exception,System.TimeSpan)" />
      <Member Id="P:Microsoft.Rest.TransientFaultHandling.RetryPolicy.ErrorDetectionStrategy" />
      <Member Id="P:Microsoft.Rest.TransientFaultHandling.RetryPolicy.RetryStrategy" />
    </Type>
    <Type Name="Microsoft.Rest.TransientFaultHandling.RetryPolicy`1" Id="T:Microsoft.Rest.TransientFaultHandling.RetryPolicy`1">
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryPolicy`1.#ctor(Microsoft.Rest.TransientFaultHandling.RetryStrategy)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryPolicy`1.#ctor(System.Int32)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryPolicy`1.#ctor(System.Int32,System.TimeSpan)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryPolicy`1.#ctor(System.Int32,System.TimeSpan,System.TimeSpan)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryPolicy`1.#ctor(System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan)" />
    </Type>
    <Type Name="Microsoft.Rest.TransientFaultHandling.RetryStrategy" Id="T:Microsoft.Rest.TransientFaultHandling.RetryStrategy">
      <Member Id="F:Microsoft.Rest.TransientFaultHandling.RetryStrategy.DefaultClientRetryCount" />
      <Member Id="F:Microsoft.Rest.TransientFaultHandling.RetryStrategy.DefaultFirstFastRetry" />
      <Member Id="F:Microsoft.Rest.TransientFaultHandling.RetryStrategy.DefaultRetryInterval" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryStrategy.#ctor(System.String,System.Boolean)" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.RetryStrategy.GetShouldRetryHandler" />
      <Member Id="P:Microsoft.Rest.TransientFaultHandling.RetryStrategy.FastFirstRetry" />
      <Member Id="P:Microsoft.Rest.TransientFaultHandling.RetryStrategy.Name" />
    </Type>
    <Type Name="Microsoft.Rest.TransientFaultHandling.ShouldRetryHandler" Id="T:Microsoft.Rest.TransientFaultHandling.ShouldRetryHandler" />
    <Type Name="Microsoft.Rest.TransientFaultHandling.TransientErrorIgnoreStrategy" Id="T:Microsoft.Rest.TransientFaultHandling.TransientErrorIgnoreStrategy">
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.TransientErrorIgnoreStrategy.#ctor" />
      <Member Id="M:Microsoft.Rest.TransientFaultHandling.TransientErrorIgnoreStrategy.IsTransient(System.Exception)" />
    </Type>
  </Namespace>
</Framework>